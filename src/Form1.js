import React, { Component } from 'react';
import "./Form1.css";
import OtpInput from 'react-otp-input';
import axios from "axios";
import $ from 'jquery';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas'
import Modal from "react-responsive-modal";
import indicator from "./instuction.png"
import namefield from "./namefield.jpeg"
import datefield from "./datefield.jpeg"
import officefield from "./officefield.jpeg"
import aadhaarnamefield from "./aadhaarnamefield.jpeg"
import aadhaarnumber from "./aadhaarnumber.jpeg"
import communicationcheckfield from "./communicationcheckfield.jpeg"
import enrolmentid from "./enrolmentid.jpeg"
import parentname from "./parentname.jpeg"
import phonenumberfield from "./phonenumberfield.jpeg"
import prooffield from "./prooffield.jpeg"
import registrationNumber from "./registrationNumber.jpeg"
import respresentativeAssessee from "./respresentativeAssessee.jpeg"
import sourceOfIncome from "./sourceOfIncome.jpeg"
import statusfield from "./statusfield.jpeg"
// import CodeInput from 'react-native-confirmation-code-input';


class Form1 extends Component {

  constructor(props) {
    super(props);

    this.state = {
      address: ["Name of Office", "Flat / Room / Door / Block No.", "Name of Premises / Building / Village", "Road / Street / Lane / Post Office", "Area / Locality / Taluka / Sub-Division", "Town / City / District"],
      addressTwo: ["Flat / Room / Door / Block No.", "Name of Premises / Building / Village", "Road / Street / Lane / Post Office", "Area / Locality / Taluka / Sub-Division", "Town / City / District"],
      name: ["Last Name / Surname", "First Name", "Middle Name"],
      addressThree: ["Name of Premises / Building / Village", "Road / Street / Lane/Post Office", "Area / Locality / Taluka/ Sub- Division", "Town / City / District"],
      
      isModalEnabled: false,
      isIndicatorEnabled: false,
 
      OtpInput: "",

      errors: {
        
        NameTitleOne : "",
        OtherName : "",
        NameTitleTwo : "",
        Gender : "",
        ParentName : "",
        Communication : "",
        Status : "",
        Income : "",
        NameTitleThree : "",
        FirstName: "",
        LastName : "",
        MiddleName : "",
        FatherFirstName : "",
        FatherMiddleName: "",
        FatherLastName: "",
        MotherFirstName: "",
        MotherMiddleName: "",
        MotherLastName: "",
        OtherFirstName: "",
        OtherLastName: "",
        OtherMiddleName: "",
        RAFirstName: "",
        RALastName: "",
        RAMiddleName: "",
        AbbreviationOne: "",
        AbbreviationTwo: "",
        ResidenceFlat: "",
        ResidencePremises: "",
        ResidenceRoad: "",
        ResidenceArea: "",
        ResidenceTown: "",
        OfficeName: "",
        OfficeFlat: "",
        OfficePremises: "",
        OfficeRoad: "",
        OfficeArea: "",
        OfficeTown: "",
        RAFlat: "",
        RAPremises: "",
        RARoad: "",
        RAArea: "",
        RATown: "",
        AadhaarFirstName: "",
        AadhaarLastName: "",
        AadhaarMiddleName: "",
        AadhaarNumber: "",
        EnrolmentId : "",
        RegistrationNumber: "",
        ResidenceState: "",
        ResidencePincode: "",
        ResidenceCountry: "",
        OfficeState: "",
        OfficePincode: "",
        OfficeCountry: "",
        RAState: "",
        RAPincode: "",
        CountryCode: "",
        StdCode: "",
        PhoneNumber: "",
        Day: "",
        Month: "",
        Year: "",
        POI: "",
        POA: "",
        POB: "",
        Applicant: "",
        Capacity: "",
        Email: "",
        BusinessCode1: "",
        BusinessCode2: "",
        BusinessCode: "",
        Salary: "",
        CapitalGains: "",
        IncomeBusiness: "",
        IncomeOtherSource: "",
        IncomeFromHouse: "",
        NoIncome: "",
        phonenumber: "",
        errorid: "1"
      },
      data : {
         officeEnabled: false,
         isEnabledCheck: true,
         isEnabled : false, 
         NameTitleOne : "",
         OtherName : "",
         NameTitleTwo : "",
         Gender : "",
         ParentName : "",
         Communication : "",
         Status : "",
         Income : "",
         NameTitleThree : "",
         FirstName1 : "", FirstName2: "", FirstName3: "", FirstName4: "", FirstName5: "",
         FirstName6 : "", FirstName7: "", FirstName8: "", FirstName9: "", FirstName10: "",
         FirstName11 : "", FirstName12: "", FirstName13: "", FirstName14: "", FirstName15: "",
         FirstName16 : "", FirstName17: "", FirstName18: "", FirstName19: "", FirstName20: "",
         FirstName21 : "", FirstName22: "", FirstName23: "", FirstName24: "", FirstName25: "",
         FirstName: "",
         LastName1 : "", LastName2: "", LastName3: "", LastName4: "", LastName5: "",
         LastName6 : "", LastName7: "", LastName8: "", LastName9: "", LastName10: "",
         LastName11 : "", LastName12: "", LastName13: "", LastName14: "", LastName15: "",
         LastName16 : "", LastName17: "", LastName18: "", LastName19: "", LastName20: "",
         LastName21 : "", LastName22: "", LastName23: "", LastName24: "", LastName25: "",
         LastName : "",
         MiddleName1 : "", MiddleName2: "", MiddleName3: "", MiddleName4: "", MiddleName5: "",
         MiddleName6 : "", MiddleName7: "", MiddleName8: "", MiddleName9: "", MiddleName10: "",
         MiddleName11 : "", MiddleName12: "", MiddleName13: "", MiddleName14: "", MiddleName15: "",
         MiddleName16 : "", MiddleName17: "", MiddleName18: "", MiddleName19: "", MiddleName20: "",
         MiddleName21 : "", MiddleName22: "", MiddleName23: "", MiddleName24: "", MiddleName25: "",
         MiddleName : "",
         FatherFirstName1 : "", FatherFirstName2: "", FatherFirstName3: "", FatherFirstName4: "", FatherFirstName5: "",
         FatherFirstName6 : "", FatherFirstName7: "", FatherFirstName8: "", FatherFirstName9: "", FatherFirstName10: "",
         FatherFirstName11 : "", FatherFirstName12: "", FatherFirstName13: "", FatherFirstName14: "", FatherFirstName15: "",
         FatherFirstName16 : "", FatherFirstName17: "", FatherFirstName18: "", FatherFirstName19: "", FatherFirstName20: "",
         FatherFirstName21 : "", FatherFirstName22: "", FatherFirstName23: "", FatherFirstName24: "", FatherFirstName25: "",
         FatherFirstName : "",
         FatherMiddleName1 : "", FatherMiddleName2: "", FatherMiddleName3: "", FatherMiddleName4: "", FatherMiddleName5: "",
         FatherMiddleName6 : "", FatherMiddleName7: "", FatherMiddleName8: "", FatherMiddleName9: "", FatherMiddleName10: "",
         FatherMiddleName11 : "", FatherMiddleName12: "", FatherMiddleName13: "", FatherMiddleName14: "", FatherMiddleName15: "",
         FatherMiddleName16 : "", FatherMiddleName17: "", FatherMiddleName18: "", FatherMiddleName19: "", FatherMiddleName20: "",
         FatherMiddleName21 : "", FatherMiddleName22: "", FatherMiddleName23: "", FatherMiddleName24: "", FatherMiddleName25: "",
         FatherMiddleName: "",
         FatherLastName1 : "", FatherLastName2: "", FatherLastName3: "", FatherLastName4: "", FatherLastName5: "",
         FatherLastName6 : "", FatherLastName7: "", FatherLastName8: "", FatherLastName9: "", FatherLastName10: "",
         FatherLastName11 : "", FatherLastName12: "", FatherLastName13: "", FatherLastName14: "", FatherLastName15: "",
         FatherLastName16 : "", FatherLastName17: "", FatherLastName18: "", FatherLastName19: "", FatherLastName20: "",
         FatherLastName21 : "", FatherLastName22: "", FatherLastName23: "", FatherLastName24: "", FatherLastName25: "",
         FatherLastName: "",
         MotherFirstName1 : "", MotherFirstName2: "", MotherFirstName3: "", MotherFirstName4: "", MotherFirstName5: "",
         MotherFirstName6 : "", MotherFirstName7: "", MotherFirstName8: "", MotherFirstName9: "", MotherFirstName10: "",
         MotherFirstName11 : "", MotherFirstName12: "", MotherFirstName13: "", MotherFirstName14: "", MotherFirstName15: "",
         MotherFirstName16 : "", MotherFirstName17: "", MotherFirstName18: "", MotherFirstName19: "", MotherFirstName20: "",
         MotherFirstName21 : "", MotherFirstName22: "", MotherFirstName23: "", MotherFirstName24: "", MotherFirstName25: "",
         MotherFirstName: "",
         MotherMiddleName1 : "", MotherMiddleName2: "", MotherMiddleName3: "", MotherMiddleName4: "", MotherMiddleName5: "",
         MotherMiddleName6 : "", MotherMiddleName7: "", MotherMiddleName8: "", MotherMiddleName9: "", MotherMiddleName10: "",
         MotherMiddleName11 : "", MotherMiddleName12: "", MotherMiddleName13: "", MotherMiddleName14: "", MotherMiddleName15: "",
         MotherMiddleName16 : "", MotherMiddleName17: "", MotherMiddleName18: "", MotherMiddleName19: "", MotherMiddleName20: "",
         MotherMiddleName21 : "", MotherMiddleName22: "", MotherMiddleName23: "", MotherMiddleName24: "", MotherMiddleName25: "",
         MotherMiddleName: "",
         MotherLastName1 : "", MotherLastName2: "", MotherLastName3: "", MotherLastName4: "", MotherLastName5: "",
         MotherLastName6 : "", MotherLastName7: "", MotherLastName8: "", MotherLastName9: "", MotherLastName10: "",
         MotherLastName11 : "", MotherLastName12: "", MotherLastName13: "", MotherLastName14: "", MotherLastName15: "",
         MotherLastName16 : "", MotherLastName17: "", MotherLastName18: "", MotherLastName19: "", MotherLastName20: "",
         MotherLastName21 : "", MotherLastName22: "", MotherLastName23: "", MotherLastName24: "", MotherLastName25: "",
         MotherLastName: "",
         OtherFirstName1 : "", OtherFirstName2: "", OtherFirstName3: "", OtherFirstName4: "", OtherFirstName5: "",
         OtherFirstName6 : "", OtherFirstName7: "", OtherFirstName8: "", OtherFirstName9: "", OtherFirstName10: "",
         OtherFirstName11 : "", OtherFirstName12: "", OtherFirstName13: "", OtherFirstName14: "", OtherFirstName15: "",
         OtherFirstName16 : "", OtherFirstName17: "", OtherFirstName18: "", OtherFirstName19: "", OtherFirstName20: "",
         OtherFirstName21 : "", OtherFirstName22: "", OtherFirstName23: "", OtherFirstName24: "", OtherFirstName25: "",
         OtherFirstName: "",
         OtherLastName1 : "", OtherLastName2: "", OtherLastName3: "", OtherLastName4: "", OtherLastName5: "",
         OtherLastName6 : "", OtherLastName7: "", OtherLastName8: "", OtherLastName9: "", OtherLastName10: "",
         OtherLastName11 : "", OtherLastName12: "", OtherLastName13: "", OtherLastName14: "", OtherLastName15: "",
         OtherLastName16 : "", OtherLastName17: "", OtherLastName18: "", OtherLastName19: "", OtherLastName20: "",
         OtherLastName21 : "", OtherLastName22: "", OtherLastName23: "", OtherLastName24: "", OtherLastName25: "",
         OtherLastName: "",
         OtherMiddleName1 : "", OtherMiddleName2: "", OtherMiddleName3: "", OtherMiddleName4: "", OtherMiddleName5: "",
         OtherMiddleName6 : "", OtherMiddleName7: "", OtherMiddleName8: "", OtherMiddleName9: "", OtherMiddleName10: "",
         OtherMiddleName11 : "", OtherMiddleName12: "", OtherMiddleName13: "", OtherMiddleName14: "", OtherMiddleName15: "",
         OtherMiddleName16 : "", OtherMiddleName17: "", OtherMiddleName18: "", OtherMiddleName19: "", OtherMiddleName20: "",
         OtherMiddleName21 : "", OtherMiddleName22: "", OtherMiddleName23: "", OtherMiddleName24: "", OtherMiddleName25: "",
         OtherMiddleName: "",
         RAFirstName1 : "", RAFirstName2: "", RAFirstName3: "", RAFirstName4: "", RAFirstName5: "",
         RAFirstName6 : "", RAFirstName7: "", RAFirstName8: "", RAFirstName9: "", RAFirstName10: "",
         RAFirstName11 : "", RAFirstName12: "", RAFirstName13: "", RAFirstName14: "", RAFirstName15: "",
         RAFirstName16 : "", RAFirstName17: "", RAFirstName18: "", RAFirstName19: "", RAFirstName20: "",
         RAFirstName21 : "", RAFirstName22: "", RAFirstName23: "", RAFirstName24: "", RAFirstName25: "",
         RAFirstName: "",
         RALastName1 : "", RALastName2: "", RALastName3: "", RALastName4: "", RALastName5: "",
         RALastName6 : "", RALastName7: "", RALastName8: "", RALastName9: "", RALastName10: "",
         RALastName11 : "", RALastName12: "", RALastName13: "", RALastName14: "", RALastName15: "",
         RALastName16 : "", RALastName17: "", RALastName18: "", RALastName19: "", RALastName20: "",
         RALastName21 : "", RALastName22: "", RALastName23: "", RALastName24: "", RALastName25: "",
         RALastName: "",
         RAMiddleName1 : "", RAMiddleName2: "", RAMiddleName3: "", RAMiddleName4: "", RAMiddleName5: "",
         RAMiddleName6 : "", RAMiddleName7: "", RAMiddleName8: "", RAMiddleName9: "", RAMiddleName10: "",
         RAMiddleName11 : "", RAMiddleName12: "", RAMiddleName13: "", RAMiddleName14: "", RAMiddleName15: "",
         RAMiddleName16 : "", RAMiddleName17: "", RAMiddleName18: "", RAMiddleName19: "", RAMiddleName20: "",
         RAMiddleName21 : "", RAMiddleName22: "", RAMiddleName23: "", RAMiddleName24: "", RAMiddleName25: "",
         RAMiddleName: "",
         AbbreviationOne1 : "", AbbreviationOne2: "", AbbreviationOne3: "", AbbreviationOne4: "", AbbreviationOne5: "",
         AbbreviationOne6 : "", AbbreviationOne7: "", AbbreviationOne8: "", AbbreviationOne9: "", AbbreviationOne10: "",
         AbbreviationOne11 : "", AbbreviationOne12: "", AbbreviationOne13: "", AbbreviationOne14: "", AbbreviationOne15: "",
         AbbreviationOne16 : "", AbbreviationOne17: "", AbbreviationOne18: "", AbbreviationOne19: "", AbbreviationOne20: "",
         AbbreviationOne21 : "", AbbreviationOne22: "", AbbreviationOne23: "", AbbreviationOne24: "", AbbreviationOne25: "",
         AbbreviationOne26 : "", AbbreviationOne27: "", AbbreviationOne28: "", AbbreviationOne29: "", AbbreviationOne30: "",
         AbbreviationOne31 : "", AbbreviationOne32: "", AbbreviationOne33: "", AbbreviationOne34: "", AbbreviationOne35: "",
         AbbreviationOne36 : "", AbbreviationOne37: "",
         AbbreviationOne: "",
         AbbreviationTwo1 : "", AbbreviationTwo2: "", AbbreviationTwo3: "", AbbreviationTwo4: "", AbbreviationTwo5: "",
         AbbreviationTwo6 : "", AbbreviationTwo7: "", AbbreviationTwo8: "", AbbreviationTwo9: "", AbbreviationTwo10: "",
         AbbreviationTwo11 : "", AbbreviationTwo12: "", AbbreviationTwo13: "", AbbreviationTwo14: "", AbbreviationTwo15: "",
         AbbreviationTwo16 : "", AbbreviationTwo17: "", AbbreviationTwo18: "", AbbreviationTwo19: "", AbbreviationTwo20: "",
         AbbreviationTwo21 : "", AbbreviationTwo22: "", AbbreviationTwo23: "", AbbreviationTwo24: "", AbbreviationTwo25: "",
         AbbreviationTwo26 : "", AbbreviationTwo27: "", AbbreviationTwo28: "", AbbreviationTwo29: "", AbbreviationTwo30: "",
         AbbreviationTwo31 : "", AbbreviationTwo32: "", AbbreviationTwo33: "", AbbreviationTwo34: "", AbbreviationTwo35: "",
         AbbreviationTwo36 : "", AbbreviationTwo37: "",
         AbbreviationTwo: "",
         ResidenceFlat1 : "", ResidenceFlat2: "", ResidenceFlat3: "", ResidenceFlat4: "", ResidenceFlat5: "",
         ResidenceFlat6 : "", ResidenceFlat7: "", ResidenceFlat8: "", ResidenceFlat9: "", ResidenceFlat10: "",
         ResidenceFlat11 : "", ResidenceFlat12: "", ResidenceFlat13: "", ResidenceFlat14: "", ResidenceFlat15: "",
         ResidenceFlat16 : "", ResidenceFlat17: "", ResidenceFlat18: "", ResidenceFlat19: "", ResidenceFlat20: "",
         ResidenceFlat21 : "", ResidenceFlat22: "", ResidenceFlat23: "", ResidenceFlat24: "", ResidenceFlat25: "",
         ResidenceFlat: "",
         ResidencePremises1 : "", ResidencePremises2: "", ResidencePremises3: "", ResidencePremises4: "", ResidencePremises5: "",
         ResidencePremises6 : "", ResidencePremises7: "", ResidencePremises8: "", ResidencePremises9: "", ResidencePremises10: "",
         ResidencePremises11 : "", ResidencePremises12: "", ResidencePremises13: "", ResidencePremises14: "", ResidencePremises15: "",
         ResidencePremises16 : "", ResidencePremises17: "", ResidencePremises18: "", ResidencePremises19: "", ResidencePremises20: "",
         ResidencePremises21 : "", ResidencePremises22: "", ResidencePremises23: "", ResidencePremises24: "", ResidencePremises25: "",
         ResidencePremises: "",
         ResidenceRoad1 : "", ResidenceRoad2: "", ResidenceRoad3: "", ResidenceRoad4: "", ResidenceRoad5: "",
         ResidenceRoad6 : "", ResidenceRoad7: "", ResidenceRoad8: "", ResidenceRoad9: "", ResidenceRoad10: "",
         ResidenceRoad11 : "", ResidenceRoad12: "", ResidenceRoad13: "", ResidenceRoad14: "", ResidenceRoad15: "",
         ResidenceRoad16 : "", ResidenceRoad17: "", ResidenceRoad18: "", ResidenceRoad19: "", ResidenceRoad20: "",
         ResidenceRoad21 : "", ResidenceRoad22: "", ResidenceRoad23: "", ResidenceRoad24: "", ResidenceRoad25: "",
         ResidenceRoad: "",
         ResidenceArea1 : "", ResidenceArea2: "", ResidenceArea3: "", ResidenceArea4: "", ResidenceArea5: "",
         ResidenceArea6 : "", ResidenceArea7: "", ResidenceArea8: "", ResidenceArea9: "", ResidenceArea10: "",
         ResidenceArea11 : "", ResidenceArea12: "", ResidenceArea13: "", ResidenceArea14: "", ResidenceArea15: "",
         ResidenceArea16 : "", ResidenceArea17: "", ResidenceArea18: "", ResidenceArea19: "", ResidenceArea20: "",
         ResidenceArea21 : "", ResidenceArea22: "", ResidenceArea23: "", ResidenceArea24: "", ResidenceArea25: "",
         ResidenceArea: "",
         ResidenceTown1 : "", ResidenceTown2: "", ResidenceTown3: "", ResidenceTown4: "", ResidenceTown5: "",
         ResidenceTown6 : "", ResidenceTown7: "", ResidenceTown8: "", ResidenceTown9: "", ResidenceTown10: "",
         ResidenceTown11 : "", ResidenceTown12: "", ResidenceTown13: "", ResidenceTown14: "", ResidenceTown15: "",
         ResidenceTown16 : "", ResidenceTown17: "", ResidenceTown18: "", ResidenceTown19: "", ResidenceTown20: "",
         ResidenceTown21 : "", ResidenceTown22: "", ResidenceTown23: "", ResidenceTown24: "", ResidenceTown25: "",
         ResidenceTown: "",
         OfficeName1 : "", OfficeName2: "", OfficeName3: "", OfficeName4: "", OfficeName5: "",
         OfficeName6 : "", OfficeName7: "", OfficeName8: "", OfficeName9: "", OfficeName10: "",
         OfficeName11 : "", OfficeName12: "", OfficeName13: "", OfficeName14: "", OfficeName15: "",
         OfficeName16 : "", OfficeName17: "", OfficeName18: "", OfficeName19: "", OfficeName20: "",
         OfficeName21 : "", OfficeName22: "", OfficeName23: "", OfficeName24: "", OfficeName25: "",
         OfficeName: "",
         OfficeFlat1 : "", OfficeFlat2: "", OfficeFlat3: "", OfficeFlat4: "", OfficeFlat5: "",
         OfficeFlat6 : "", OfficeFlat7: "", OfficeFlat8: "", OfficeFlat9: "", OfficeFlat10: "",
         OfficeFlat11 : "", OfficeFlat12: "", OfficeFlat13: "", OfficeFlat14: "", OfficeFlat15: "",
         OfficeFlat16 : "", OfficeFlat17: "", OfficeFlat18: "", OfficeFlat19: "", OfficeFlat20: "",
         OfficeFlat21 : "", OfficeFlat22: "", OfficeFlat23: "", OfficeFlat24: "", OfficeFlat25: "",
         OfficeFlat: "",
         OfficePremises1 : "", OfficePremises2: "", OfficePremises3: "", OfficePremises4: "", OfficePremises5: "",
         OfficePremises6 : "", OfficePremises7: "", OfficePremises8: "", OfficePremises9: "", OfficePremises10: "",
         OfficePremises11 : "", OfficePremises12: "", OfficePremises13: "", OfficePremises14: "", OfficePremises15: "",
         OfficePremises16 : "", OfficePremises17: "", OfficePremises18: "", OfficePremises19: "", OfficePremises20: "",
         OfficePremises21 : "", OfficePremises22: "", OfficePremises23: "", OfficePremises24: "", OfficePremises25: "",
         OfficePremises: "",
         OfficeRoad1 : "", OfficeRoad2: "", OfficeRoad3: "", OfficeRoad4: "", OfficeRoad5: "",
         OfficeRoad6 : "", OfficeRoad7: "", OfficeRoad8: "", OfficeRoad9: "", OfficeRoad10: "",
         OfficeRoad11 : "", OfficeRoad12: "", OfficeRoad13: "", OfficeRoad14: "", OfficeRoad15: "",
         OfficeRoad16 : "", OfficeRoad17: "", OfficeRoad18: "", OfficeRoad19: "", OfficeRoad20: "",
         OfficeRoad21 : "", OfficeRoad22: "", OfficeRoad23: "", OfficeRoad24: "", OfficeRoad25: "",
         OfficeRoad: "",
         OfficeArea1 : "", OfficeArea2: "", OfficeArea3: "", OfficeArea4: "", OfficeArea5: "",
         OfficeArea6 : "", OfficeArea7: "", OfficeArea8: "", OfficeArea9: "", OfficeArea10: "",
         OfficeArea11 : "", OfficeArea12: "", OfficeArea13: "", OfficeArea14: "", OfficeArea15: "",
         OfficeArea16 : "", OfficeArea17: "", OfficeArea18: "", OfficeArea19: "", OfficeArea20: "",
         OfficeArea21 : "", OfficeArea22: "", OfficeArea23: "", OfficeArea24: "", OfficeArea25: "",
         OfficeArea: "",
         OfficeTown1 : "", OfficeTown2: "", OfficeTown3: "", OfficeTown4: "", OfficeTown5: "",
         OfficeTown6 : "", OfficeTown7: "", OfficeTown8: "", OfficeTown9: "", OfficeTown10: "",
         OfficeTown11 : "", OfficeTown12: "", OfficeTown13: "", OfficeTown14: "", OfficeTown15: "",
         OfficeTown16 : "", OfficeTown17: "", OfficeTown18: "", OfficeTown19: "", OfficeTown20: "",
         OfficeTown21 : "", OfficeTown22: "", OfficeTown23: "", OfficeTown24: "", OfficeTown25: "",
         OfficeTown: "",
         RAFlat1 : "", RAFlat2: "", RAFlat3: "", RAFlat4: "", RAFlat5: "",
         RAFlat6 : "", RAFlat7: "", RAFlat8: "", RAFlat9: "", RAFlat10: "",
         RAFlat11 : "", RAFlat12: "", RAFlat13: "", RAFlat14: "", RAFlat15: "",
         RAFlat16 : "", RAFlat17: "", RAFlat18: "", RAFlat19: "", RAFlat20: "",
         RAFlat21 : "", RAFlat22: "", RAFlat23: "", RAFlat24: "", RAFlat25: "",
         RAFlat: "",
         RAPremises1 : "", RAPremises2: "", RAPremises3: "", RAPremises4: "", RAPremises5: "",
         RAPremises6 : "", RAPremises7: "", RAPremises8: "", RAPremises9: "", RAPremises10: "",
         RAPremises11 : "", RAPremises12: "", RAPremises13: "", RAPremises14: "", RAPremises15: "",
         RAPremises16 : "", RAPremises17: "", RAPremises18: "", RAPremises19: "", RAPremises20: "",
         RAPremises21 : "", RAPremises22: "", RAPremises23: "", RAPremises24: "", RAPremises25: "",
         RAPremises: "",
         RARoad1 : "", RARoad2: "", RARoad3: "", RARoad4: "", RARoad5: "",
         RARoad6 : "", RARoad7: "", RARoad8: "", RARoad9: "", RARoad10: "",
         RARoad11 : "", RARoad12: "", RARoad13: "", RARoad14: "", RARoad15: "",
         RARoad16 : "", RARoad17: "", RARoad18: "", RARoad19: "", RARoad20: "",
         RARoad21 : "", RARoad22: "", RARoad23: "", RARoad24: "", RARoad25: "",
         RARoad: "",
         RAArea1 : "", RAArea2: "", RAArea3: "", RAArea4: "", RAArea5: "",
         RAArea6 : "", RAArea7: "", RAArea8: "", RAArea9: "", RAArea10: "",
         RAArea11 : "", RAArea12: "", RAArea13: "", RAArea14: "", RAArea15: "",
         RAArea16 : "", RAArea17: "", RAArea18: "", RAArea19: "", RAArea20: "",
         RAArea21 : "", RAArea22: "", RAArea23: "", RAArea24: "", RAArea25: "",
         RAArea: "",
         RATown1 : "", RATown2: "", RATown3: "", RATown4: "", RATown5: "",
         RATown6 : "", RATown7: "", RATown8: "", RATown9: "", RATown10: "",
         RATown11 : "", RATown12: "", RATown13: "", RATown14: "", RATown15: "",
         RATown16 : "", RATown17: "", RATown18: "", RATown19: "", RATown20: "",
         RATown21 : "", RATown22: "", RATown23: "", RATown24: "", RATown25: "",
         RATown: "",
         AadhaarFirstName1 : "", AadhaarFirstName2: "", AadhaarFirstName3: "", AadhaarFirstName4: "", AadhaarFirstName5: "",
         AadhaarFirstName6 : "", AadhaarFirstName7: "", AadhaarFirstName8: "", AadhaarFirstName9: "", AadhaarFirstName10: "",
         AadhaarFirstName11 : "", AadhaarFirstName12: "", AadhaarFirstName13: "", AadhaarFirstName14: "", AadhaarFirstName15: "",
         AadhaarFirstName16 : "", AadhaarFirstName17: "", AadhaarFirstName18: "", AadhaarFirstName19: "", AadhaarFirstName20: "",
         AadhaarFirstName21 : "", AadhaarFirstName22: "", AadhaarFirstName23: "", AadhaarFirstName24: "", AadhaarFirstName25: "",
         AadhaarFirstName: "",
         AadhaarLastName1 : "", AadhaarLastName2: "", AadhaarLastName3: "", AadhaarLastName4: "", AadhaarLastName5: "",
         AadhaarLastName6 : "", AadhaarLastName7: "", AadhaarLastName8: "", AadhaarLastName9: "", AadhaarLastName10: "",
         AadhaarLastName11 : "", AadhaarLastName12: "", AadhaarLastName13: "", AadhaarLastName14: "", AadhaarLastName15: "",
         AadhaarLastName16 : "", AadhaarLastName17: "", AadhaarLastName18: "", AadhaarLastName19: "", AadhaarLastName20: "",
         AadhaarLastName21 : "", AadhaarLastName22: "", AadhaarLastName23: "", AadhaarLastName24: "", AadhaarLastName25: "",
         AadhaarLastName: "",
         AadhaarMiddleName1 : "", AadhaarMiddleName2: "", AadhaarMiddleName3: "", AadhaarMiddleName4: "", AadhaarMiddleName5: "",
         AadhaarMiddleName6 : "", AadhaarMiddleName7: "", AadhaarMiddleName8: "", AadhaarMiddleName9: "", AadhaarMiddleName10: "",
         AadhaarMiddleName11 : "", AadhaarMiddleName12: "", AadhaarMiddleName13: "", AadhaarMiddleName14: "", AadhaarMiddleName15: "",
         AadhaarMiddleName16 : "", AadhaarMiddleName17: "", AadhaarMiddleName18: "", AadhaarMiddleName19: "", AadhaarMiddleName20: "",
         AadhaarMiddleName21 : "", AadhaarMiddleName22: "", AadhaarMiddleName23: "", AadhaarMiddleName24: "", AadhaarMiddleName25: "",
         AadhaarMiddleName: "",
         AadhaarNumber1 : "", AadhaarNumber2: "", AadhaarNumber3: "", AadhaarNumber4: "", AadhaarNumber5: "",
         AadhaarNumber6 : "", AadhaarNumber7: "", AadhaarNumber8: "", AadhaarNumber9: "", AadhaarNumber10: "",
         AadhaarNumber11 : "", AadhaarNumber12: "",
         AadhaarNumber: "",
         EnrolmentId1 : "", EnrolmentId2: "", EnrolmentId3: "", EnrolmentId4: "", EnrolmentId5: "",
         EnrolmentId6 : "", EnrolmentId7: "", EnrolmentId8: "", EnrolmentId9: "", EnrolmentId10: "",
         EnrolmentId11 : "", EnrolmentId12: "", EnrolmentId13: "", EnrolmentId14: "", EnrolmentId15: "",
         EnrolmentId16 : "", EnrolmentId17: "", EnrolmentId18: "", EnrolmentId19: "", EnrolmentId20: "",
         EnrolmentId21 : "", EnrolmentId22: "", EnrolmentId23: "", EnrolmentId24: "", EnrolmentId25: "",
         EnrolmentId26 : "", EnrolmentId27: "", EnrolmentId28: "",
         EnrolmentId : "",
         RegistrationNumber1 : "", RegistrationNumber2: "", RegistrationNumber3: "", RegistrationNumber4: "", RegistrationNumber5: "",
         RegistrationNumber6 : "", RegistrationNumber7: "", RegistrationNumber8: "", RegistrationNumber9: "", RegistrationNumber10: "",
         RegistrationNumber11 : "", RegistrationNumber12: "", RegistrationNumber13: "", RegistrationNumber14: "", RegistrationNumber15: "",
         RegistrationNumber16 : "", RegistrationNumber17: "", RegistrationNumber18: "", RegistrationNumber19: "", RegistrationNumber20: "",
         RegistrationNumber21 : "", RegistrationNumber22: "", RegistrationNumber23: "", RegistrationNumber24: "", RegistrationNumber25: "",
         RegistrationNumber26 : "", RegistrationNumber27: "", RegistrationNumber28: "", RegistrationNumber29: "", RegistrationNumber30: "",
         RegistrationNumber: "", 
         ResidenceState: "",
         ResidencePincode1 : "", ResidencePincode2: "", ResidencePincode3: "", ResidencePincode4: "", ResidencePincode5: "",
         ResidencePincode6 : "", ResidencePincode7: "",
         ResidencePincode: "",
         ResidenceCountry: "",
         OfficeState: "",
         OfficePincode1 : "", OfficePincode2: "", OfficePincode3: "", OfficePincode4: "", OfficePincode5: "",
         OfficePincode6 : "", OfficePincode7: "",
         OfficePincode: "",
         OfficeCountry: "",
         RAState: "",
         RAPincode1 : "", RAPincode2: "", RAPincode3: "", RAPincode4: "", RAPincode5: "",
         RAPincode6 : "", RAPincode7: "",
         RAPincode: "",
         CountryCode1 : "", CountryCode2: "", CountryCode3: "",
         CountryCode: "",
         StdCode1 : "", StdCode2: "", StdCode3: "", StdCode4: "", StdCode5: "",
         StdCode6 : "", StdCode7: "",
         StdCode: "",
         PhoneNumber1 : "", PhoneNumber2: "", PhoneNumber3: "", PhoneNumber4: "", PhoneNumber5: "",
         PhoneNumber6 : "", PhoneNumber7: "", PhoneNumber8: "", PhoneNumber9: "", PhoneNumber10: "",
         PhoneNumber11 : "", PhoneNumber12: "", PhoneNumber13: "",
         PhoneNumber: "",
         Day1 : "", Day2: "",
         Day: "",
         Month1 : "", Month2: "",
         Month: "",
         Year1 : "", Year2: "", Year3: "", Year4: "",
         Year: "",
         POI: "",
         POA: "",
         POB: "",
         Applicant: "",
         Capacity: "",
         Email: "",
         BusinessCode1: "",
         BusinessCode2: "",
         BusinessCode: "",
         Salary: "",
         CapitalGains: "",
         IncomeBusiness: "",
         IncomeOtherSource: "",
         IncomeFromHouse: "",
         NoIncome: "",
         phonenumber:"",
         otpnumber:"", 
         dataid: "1",

      },
      
      checkarray:["NameTitleOne",'OtherName','NameTitleTwo','Gender','ParentName','Communication','Status','Salary','CapitalGains','IncomeBusiness','IncomeOtherSource','IncomeFromHouse','NoIncome','NameTitleThree'],
      show: false,
      check:0,
      otpverify:0,
      secondcheck:0,
      number : {
          phonenumber:"",
      },
      open: false,
   }
  }

  componentWillMount() {
    $("#1").prop('checked', true);
    let alldata = JSON.parse(localStorage.getItem('localdata'));
    let allerror = JSON.parse(localStorage.getItem('localerror'));
    let otp =  JSON.parse(localStorage.getItem('otp'));
 
    this.state.OtpInput = otp;
    let val = this.state.OtpInput;
    this.setState({val})
    
    if (alldata == null) {
       localStorage.setItem('localdata', JSON.stringify({}));
    }
    else
    {
       if(alldata !== {}){
        if(alldata.OtherName === "5")
        {
         ///   // console.log("other name div show will")
           $('#OtherNameDiv').show();   
        }
               
          if(alldata.dataid === "1"){
                 this.setState({ data: alldata }); 
          }
       }  
    }
 
    if (allerror == null) {
      localStorage.setItem('localerror', JSON.stringify({}));
     }
     else
     {
       if(allerror !== {}){
         if(allerror.errorid === "1"){
               this.setState({ errors: allerror });
                
         }
       }  
     }


  
     
  }
  
  handleSave = () => {
     
    axios.post('http://159.89.165.174:5000/saveData',this.state.data)
     .then(function (response) 
     {
        //console.log(response);
     })
    .catch(function (error) {
       // console.log(error);
    });
   }
 
   handleInputdata = (otp, name, id) => {
   
     if (id == "1") {
       let textPattern = /[!@#$%^&*(),.?":{}|<>]/
       let checkdata = textPattern.test(otp);
  
       if (checkdata != "true") {
         const datainput = this.state.data;
         datainput[name] = otp;
         this.setState({ datainput })
  
         localStorage.setItem('localdata', JSON.stringify(this.state.data));
         localStorage.setItem('localerror', JSON.stringify(this.state.errors));
       }
    }
   }

   handleOtpInput = (value) => {
      
     this.state.OtpInput = value;
     let val = this.state.OtpInput;
    this.setState({val})

    localStorage.setItem('otp', JSON.stringify(this.state.OtpInput));
  //   console.log(value)
 //   console.log(val)
  //  console.log(this.state.OtpInput)
   }

   onOpenModal1 = () => {
    this.setState({ open: true });
}

   onOpenModal = () => {
 

    if(this.state.data.NameTitleOne === "")
    {

        let errors1 = this.state.errors;
        let name4= "NameTitleOne";
        this.setState(errors1);
        errors1[name4] = "*Please select title as applicable";
        $( "#1" ).focus();
       
    }
    else if(this.state.data.LastName === "")
    { 

        let errors1 = this.state.errors;
        let name4= "LastName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
       $( "#LastName1" ).focus();
       this.HighlightLastNameError();
    }
    else if( this.state.data.FirstName === "")
    { 

        let errors1 = this.state.errors;
        let name4= "FirstName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";

       $( "#FirstName1" ).focus();
       this.HighlightFirstNameError();
    }
    else if(this.state.data.OtherName === "")
    {

        let errors1 = this.state.errors;
        let name4= "OtherName";
        this.setState(errors1);
        errors1[name4] = "*Please tick as applicable";
 
        $( "#OtherName1" ).focus();
        
    }
    else if(this.state.data.NameTitleTwo === "" && this.state.data.OtherName === "5")
    {
        let errors1 = this.state.errors;
        let name4= "NameTitleTwo";
        this.setState(errors1);
        errors1[name4] = "*Please select title as applicable";
        $( "#7" ).focus();
    }
    else if(this.state.data.OtherName === "5" &&  this.state.data.OtherLastName === "" )
    {

        let errors1 = this.state.errors;
        let name4= "OtherLastName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";

        $( "#OtherLastName1" ).focus();
        this.HighlightOtherLastNameError();
    }
    else if(this.state.data.OtherName === "5" && this.state.data.OtherFirstName === "" )
    {
        let errors1 = this.state.errors;
        let name4= "OtherFirstName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OtherFirstName1" ).focus();
        this.HighlightOtherFirstNameError();
    }
    else if(this.state.data.Gender === "")
    {
        let errors1 = this.state.errors;
        let name4= "Gender";
        this.setState(errors1);
        errors1[name4] = "*Please tick as applicable";

        $( "#11" ).focus();
    }
    else if(this.state.data.Day === "" )
    {
        let errors1 = this.state.errors;
        let name4= "Day";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#Day1" ).focus();
        this.HighlightDayError();
    }
    else if(this.state.data.Month === "")
    {  
        let errors1 = this.state.errors;
        let name4= "Month";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";

        $( "#Month1" ).focus();
        this.HighlightMonthError();
    }
    else if(this.state.data.Year === "")
    {

        let errors1 = this.state.errors;
        let name4= "Year";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";

        $( "#Year1" ).focus();
        this.HighlightYearError();
    }
    else if(this.state.data.FatherLastName === "")
    {
        let errors1 = this.state.errors;
        let name4= "FatherLastName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#FatherLastName1" ).focus();
        this.HighlightFatherLastNameError();
    }
    else if(this.state.data.FatherFirstName === "")
    {
        let errors1 = this.state.errors;
        let name4= "FatherFirstName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#FatherFirstName1" ).focus();
        this.HighlightFatherFirstNameError();
    }
    else if(this.state.data.ParentName === "")
    {
        let errors1 = this.state.errors;
        let name4= "ParentName";
        this.setState(errors1);
        errors1[name4] = "*Please tick as applicable";
 
        $( "#14" ).focus();
    }
    else if( this.state.data.ParentName === "15" && this.state.data.MotherLastName === "")
    { 
        let errors1 = this.state.errors;
        let name4= "MotherLastName";
        this.setState(errors1);
        errors1[name4] = "*Please enter Mother's name";
 
        $( "#MotherLastName1" ).focus();
        this.HighlightMotherLastNameError();
    }
    else if(this.state.data.ParentName === "15 " && this.state.data.MotherFirstName === "")
    {
        let errors1 = this.state.errors;
        let name4= "MotherFirstName";
        this.setState(errors1);
        errors1[name4] = "*Please enter Mother's name";
 
        $( "#MotherFirstName1" ).focus();
        this.HighlightMotherFirstNameError();
    }
    else if(this.state.data.ResidenceFlat === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceFlat";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidenceFlat1" ).focus();
        this.HighlightResidenceFlatError();
    }
    else if(this.state.data.ResidencePremises === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidencePremises";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidencePremises1" ).focus();
        this.HighlightResidencePremisesError();
    }
    else if(this.state.data.ResidenceRoad === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceRoad";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidenceRoad1" ).focus();
        this.HighlightResidenceRoadError();
    }
    else if(this.state.data.ResidenceArea === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceArea";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidenceArea1" ).focus();
        this.HighlightResidenceAreaError();
    }
    else if(this.state.data.ResidenceTown === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceTown";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidenceTown1" ).focus();
        this.HighlightResidenceTownError();
    }
    else if(this.state.data.ResidenceState === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceState";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#ResidenceState').css('border-color', "red")
        $( "#ResidenceState" ).focus();
    }
    else if(this.state.data.ResidencePincode === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidencePincode";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#ResidencePincode1" ).focus();
        this.HighlightResidencePincodeError();
    }
    else if(this.state.data.ResidenceCountry === "")
    {  
        let errors1 = this.state.errors;
        let name4= "ResidenceCountry";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#ResidenceCountry').css('border-color', "red")
        $( "#ResidenceCountry" ).focus();
    }
    else if(this.state.data.Communication === "")
    {
        let errors1 = this.state.errors;
        let name4= "Communication";
        this.setState(errors1);
        errors1[name4] = "*Please tick as applicable";

        $( "#16" ).focus();
    }
    else if(this.state.data.OfficeName === ""  && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficeName1" ).focus();
        this.HighlightOfficeNameError();
    }
    else if(this.state.data.OfficeFlat === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeFlat";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficeFlat1" ).focus();
        this.HighlightOfficeFlatError();
    }
    else if(this.state.data.OfficePremises === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficePremises";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficePremises1" ).focus();
        this.HighlightOfficePremisesError();
    }
    else if(this.state.data.OfficeRoad === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeRoad";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficeRoad1" ).focus();
        this.HighlightOfficeRoadError();
    }
    else if(this.state.data.OfficeArea === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeArea";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficeArea1" ).focus();
        this.HighlightOfficeAreaError();
    }
    else if(this.state.data.OfficeTown === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeTown";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#OfficeTown1" ).focus();
        this.HighlightOfficeTownError();
    }
    else if(this.state.data.OfficeState === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeState";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#OfficeState').css('border-color', "red")
        $( "#OfficeState" ).focus();
    }
    else if(this.state.data.OfficePincode === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficePincode";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";

        $( "#OfficePincode1" ).focus();
        this.HighlightOfficePincodeError();
    }
    else if(this.state.data.OfficeCountry === "" && this.state.data.Communication === "Office")
    {
        let errors1 = this.state.errors;
        let name4= "OfficeCountry";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#OfficeCountry').css('border-color', "red")
        $( "#OfficeCountry" ).focus();
    }
    else if(this.state.data.CountryCode === "" )
    {
        let errors1 = this.state.errors;
        let name4= "CountryCode";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
       
        $( "#CountryCode1" ).focus();
        this.HighlightCountryCodeError();
    }
    else if(this.state.data.StdCode === "" )
    {
        let errors1 = this.state.errors;
        let name4= "StdCode";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#StdCode1" ).focus();
        this.HighlightStdCodeError();
    }
    else if(this.state.data.PhoneNumber === "" )
    {
        let errors1 = this.state.errors;
        let name4= "PhoneNumber";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#PhoneNumber1" ).focus();
        this.HighlightPhoneNumberError();
    }
    else if(this.state.data.Email === "" )
    {
        let errors1 = this.state.errors;
        let name4= "Email";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#Email').css('border-color', "red")
        $( "#Email" ).focus();
    }
    else if(this.state.data.Status === "")
    {
        let errors1 = this.state.errors;
        let name4= "Status";
        this.setState(errors1);
        errors1[name4] = "*Please select status as applicable";
 
        $( "#22" ).focus();
    }
    else if((this.state.data.RegistrationNumber === ""))
    {
        let errors1 = this.state.errors;
        let name4= "RegistrationNumber";
        this.setState(errors1);
        errors1[name4] = "*Registration number is required ";
 
        $( "#RegistrationNumber1" ).focus();
        this.HighlightRegistrationNumberError();
    }
    else if(this.state.data.AadhaarNumber === "" && this.state.data.EnrolmentId === "")
    {
        let errors1 = this.state.errors;
        let name4= "AadhaarNumber";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Aadhaar Number or Enrolment Id";
         
        $( "#AadhaarNumber1" ).focus();
        this.HighlightAadhaarNumberError();
    }
    else if(this.state.data.AadhaarLastName === "" )
    {
        let errors1 = this.state.errors;
        let name4= "AadhaarLastName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#AadhaarLastName1" ).focus();
        this.HighlightAadhaarLastNameError();
    }
    else if(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
    this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
    this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === "")
    {
        let errors1 = this.state.errors;
        let name4= "Income";
        this.setState(errors1);
        errors1[name4] = "*Please select the Source of Income";
 
        $( "#33" ).focus();
    }
    else if(this.state.data.IncomeBusiness !== "" && this.state.data.BusinessCode === "")
    {
        let errors1 = this.state.errors;
        let name4= "BusinessCode1";
        this.setState(errors1);
        errors1[name4] = "*Business / Profession code is required for Income from Business / Profession";
        this.HighlightBusinessCodeError();
        $( "#BusinessCode1" ).focus();
        
    }
    else if(this.state.data.NameTitleThree === "")
    {
        let errors1 = this.state.errors;
        let name4= "NameTitleThree";
        this.setState(errors1);
        errors1[name4] = "*Please select title as applicable";
 
        $( "#36" ).focus();
    }
    else if(this.state.data.RALastName === "" )
    {
        let errors1 = this.state.errors;
        let name4= "RALastName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RALastName1" ).focus();
        this.HighlightRALastNameError();
    }
    else if(this.state.data.RAFirstName === "")
    {
        let errors1 = this.state.errors;
        let name4= "RAFirstName";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RAFirstName1" ).focus();
        this.HighlightRAFirstNameError();
    }
    else if(this.state.data.RAFlat === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RAFlat";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RAFlat1" ).focus();
        this.HighlightRAFlatError();
    }
    else if(this.state.data.RAPremises === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RAPremises";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RAPremises1" ).focus();
        this.HighlightRAPremisesError();
    }
    else if(this.state.data.RARoad === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RARoad";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RARoad1" ).focus();
        this.HighlightRARoadError();
    } 
    else if(this.state.data.RAArea === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RAArea";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RAArea1" ).focus();
        this.HighlightRAAreaError();
    }
    else if(this.state.data.RATown === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RATown";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RATown1" ).focus();
        this.HighlightRATownError();
    }
    else if(this.state.data.RAState === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RAState";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#RAState').css('border-color', "red")
        $( "#RAState" ).focus();
    }
    else if(this.state.data.RAPincode === "")
    {  
        let errors1 = this.state.errors;
        let name4= "RAPincode";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
 
        $( "#RAPincode1" ).focus();
        this.HighlightRAPincodeError();
    }
    else if(this.state.data.POI === "")
    {  
        let errors1 = this.state.errors;
        let name4= "POI";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#POI').css('border-color', "red")
        $( "#POI" ).focus();
    }
    else if(this.state.data.POA === "")
    {  
        let errors1 = this.state.errors;
        let name4= "POA";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#POA').css('border-color', "red")
        $( "#POA" ).focus();
    }
    else if(this.state.data.POB === "")
    {  
        let errors1 = this.state.errors;
        let name4= "POB";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#POB').css('border-color', "red")
        $( "#POB" ).focus();
    }
    else if(this.state.data.Applicant === "")
    {  
        let errors1 = this.state.errors;
        let name4= "Applicant";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#Applicant').css('border-color', "red")
        $( "#Applicant" ).focus();
    }
    else if(this.state.data.Capacity === "")
    {
        let errors1 = this.state.errors;
        let name4= "Capacity";
        this.setState(errors1);
        errors1[name4] = "*Fields are required";
        $('#Capacity').css('border-color', "red")
        $( "#Capacity" ).focus();
    }
    else if(this.state.errors.FirstName === "" && this.state.errors.LastName === "" 
   && this.state.errors.MiddleName === "" && this.state.errors.AbbreviationOne === "" && 
   this.state.errors.AbbreviationTwo === "" && this.state.errors.FatherFirstName === "" &&
   this.state.errors.FatherLastName === "" && this.state.errors.FatherMiddleName === "" && 
   this.state.errors.MotherFirstName === "" && this.state.errors.MotherLastName === "" && 
   this.state.errors.MotherMiddleName === "" && this.state.errors.OtherFirstName === "" &&
   this.state.errors.OtherLastName === "" && this.state.errors.OtherMiddleName === "" && 
   this.state.errors.Day === "" && this.state.errors.Month === "" && 
   this.state.errors.Year === "" && this.state.errors.ResidenceFlat === "" &&
   this.state.errors.ResidencePremises === "" && this.state.errors.ResidenceRoad === ""&&
   this.state.errors.ResidenceState === "" && this.state.errors.ResidenceTown === "" && 
   this.state.errors.ResidenceArea === "" && this.state.errors.ResidenceCountry === "" && 
   this.state.errors.ResidencePincode === "" && this.state.errors.OfficeName === "" &&
   this.state.errors.OfficeFlat === "" && this.state.errors.OfficePremises === "" && 
   this.state.errors.OfficeRoad === "" && this.state.errors.OfficeArea === "" && 
   this.state.errors.OfficeTown === "" && this.state.errors.OfficeState === "" &&
   this.state.errors.OfficePincode === "" && this.state.errors.OfficeCountry === "" &&
   this.state.errors.CountryCode === "" && this.state.errors.StdCode === "" && 
   this.state.errors.PhoneNumber === "" && this.state.errors.Email === "" &&
   this.state.errors.RegistrationNumber === "" && this.state.errors.AadhaarNumber === "" && 
   this.state.errors.EnrolmentId === "" && this.state.errors.AadhaarFirstName === "" &&
   this.state.errors.AadhaarLastName === "" && this.state.errors.AadhaarMiddleName === "" &&
   this.state.errors.BusinessCode === "" && this.state.errors.RAFirstName === "" && 
   this.state.errors.RALastName === "" && this.state.errors.RAMiddleName === "" && 
   this.state.errors.RAFlat === "" && this.state.errors.RAPremises === "" && 
   this.state.errors.RARoad === "" && this.state.errors.RAArea === "" &&  
   this.state.errors.RATown === "" && this.state.errors.RAState === "" && 
   this.state.errors.RAPincode === "" && this.state.errors.POI === "" && 
   this.state.errors.POA === "" && this.state.errors.POB === "" && 
   this.state.errors.Applicant === "" && this.state.errors.Capacity === "")
    {
      this.setState({ open: true });

     let vall = true;
     this.setState({isIndicatorEnabled : vall});
    // console.log(this.state.isIndicatorEnabled)
  
    }
 
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
  };


 
 onCloseModal = () => {
   this.setState({isIndicatorEnabled : false})
   this.setState({ open: false });
   this.setState({check:0});
   this.setState({secondcheck:0})

//    this.handleResetall();
 };  

  componentDidMount() {
    let alldata = JSON.parse(localStorage.getItem('localdata'));
  //  console.log("log",alldata)
      if(alldata != null){
        for(let i=0; i<=14 ;i++){
            let valdata = this.state.checkarray[i];
           let value = alldata[`${valdata}`];
           if(value != ""){
               $(`#${value}`).prop('checked', true);
           }
        }
      }

      
  
   $("input:checkbox").click(function () {
     if ($(this).is(":checked")) {
       var group = "input:checkbox[name='" + $(this).attr("name") + "']";
       $(group).prop("checked", false);
       $(this).prop("checked", true);
     }
     else 
     {
        $(this).prop("checked", false);
     }
   });

   $('#5').change(function(){
    if(this.checked) {
       $('#OtherNameDiv').show();
    }
   
   });

   $('#6').change(function(){
      if(this.checked) {
        $('#OtherNameDiv').hide();
      }
     });
   
     if(this.state.errors.FirstName === "" && this.state.errors.LastName === "" 
      && this.state.errors.MiddleName === "" && this.state.errors.AbbreviationOne === "" && 
      this.state.errors.AbbreviationTwo === "" && this.state.errors.FatherFirstName === "" &&
      this.state.errors.FatherLastName === "" && this.state.errors.FatherMiddleName === "" && 
      this.state.errors.MotherFirstName === "" && this.state.errors.MotherLastName === "" && 
      this.state.errors.MotherMiddleName === "" && this.state.errors.OtherFirstName === "" &&
      this.state.errors.OtherLastName === "" && this.state.errors.OtherMiddleName === "" && 
      this.state.errors.Day === "" && this.state.errors.Month === "" && 
      this.state.errors.Year === "" && this.state.errors.ResidenceFlat === "" &&
      this.state.errors.ResidencePremises === "" && this.state.errors.ResidenceRoad === ""&&
      this.state.errors.ResidenceState === "" && this.state.errors.ResidenceTown === "" && 
      this.state.errors.ResidenceArea === "" && this.state.errors.ResidenceCountry === "" && 
      this.state.errors.ResidencePincode === "" && this.state.errors.OfficeName === "" &&
      this.state.errors.OfficeFlat === "" && this.state.errors.OfficePremises === "" && 
      this.state.errors.OfficeRoad === "" && this.state.errors.OfficeArea === "" && 
      this.state.errors.OfficeTown === "" && this.state.errors.OfficeState === "" &&
      this.state.errors.OfficePincode === "" && this.state.errors.OfficeCountry === "" &&
      this.state.errors.CountryCode === "" && this.state.errors.StdCode === "" && 
      this.state.errors.PhoneNumber === "" && this.state.errors.Email === "" &&
      this.state.errors.RegistrationNumber === "" && this.state.errors.AadhaarNumber === "" && 
      this.state.errors.EnrolmentId === "" && this.state.errors.AadhaarFirstName === "" &&
      this.state.errors.AadhaarLastName === "" && this.state.errors.AadhaarMiddleName === "" &&
      this.state.errors.BusinessCode === "" && this.state.errors.RAFirstName === "" && 
      this.state.errors.RALastName === "" && this.state.errors.RAMiddleName === "" && 
      this.state.errors.RAFlat === "" && this.state.errors.RAPremises === "" && 
      this.state.errors.RARoad === "" &&  this.state.errors.RAArea === "" &&  
      this.state.errors.RATown === "" && this.state.errors.RAState === "" && 
      this.state.errors.RAPincode === "" && this.state.errors.POI === "" && 
      this.state.errors.POA === "" && this.state.errors.POB === "" && 
      this.state.errors.Applicant === "" && this.state.errors.Capacity === "")
     {
         let val = this.state.isModalEnabled;
         val = true;
         this.setState({val});
     }

     if(this.state.data.OtherName === "5" )
     {
       //  console.log("other name div show")
        $('#OtherNameDiv').show();   
     }
     if(this.state.errors.Capacity !== "")
     {
        $('#Capacity').css('border-color', "red")
        $( "#Capacity" ).focus();
     }

    

  if(this.state.errors.Applicant !== "")
     {
        $('#Applicant').css('border-color', "red")
        $( "#Applicant" ).focus();
     }

if(this.state.errors.POB !== "")
     {
        $('#POB').css('border-color', "red")
        $( "#POB" ).focus();
     }

if(this.state.errors.POA !== "")
     {
        $('#POA').css('border-color', "red")
        $( "#POA" ).focus();
     }

 if(this.state.errors.POI !== "")
     {
        $('#POI').css('border-color', "red")
        $( "#POI" ).focus();
     }

 if(this.state.errors.RAPincode !== "")
     {
        $( "#RAPincode1" ).focus();
        this.HighlightRAPincodeError();
     }
     

 if(this.state.errors.RAState !== "")
     {
        $('#RAState').css('border-color', "red")
        $( "#RAState" ).focus();
     }
   
     
if(this.state.errors.RATown !== "")
{
   $( "#RATown1" ).focus();
   this.HighlightRATownError();
}


if(this.state.errors.RAArea !== "")
{
   $( "#RAArea1" ).focus();
   this.HighlightRAAreaError();
}
 

if(this.state.errors.RARoad !== "")
{
   $( "#RARoad1" ).focus();
   this.HighlightRARoadError();
}


if(this.state.errors.RAPremises !== "")
{
   $( "#RAPremises1" ).focus();
   this.HighlightRAPremisesError();
}

 

if(this.state.errors.RAFlat !== "")
{
   $( "#RAFlat1" ).focus();
   this.HighlightRAFlatError();
}

 
if(this.state.errors.RAMiddleName !== "")
{
   $( "#RAMiddleName1" ).focus();
   this.HighlightRAMiddleNameError();
}

 
if(this.state.errors.RAFirstName !== "")
{
   $( "#RAFirstName1" ).focus();
   this.HighlightRAFirstNameError();
}

if(this.state.errors.RALastName !== "")
{
   $( "#RALastName1" ).focus();
   this.HighlightRALastNameError();
}


if(this.state.errors.BusinessCode !== "")
{
   this.HighlightBusinessCodeError();
   $( "#BusinessCode1" ).focus();
}
 

if(this.state.errors.AadhaarMiddleName !== "")
{
   $( "#AadhaarMiddleName1" ).focus();
   this.HighlightAadhaarMiddleNameError();
}


if(this.state.errors.AadhaarFirstName !== "")
{
   $( "#AadhaarFirstName1" ).focus();
   this.HighlightAadhaarFirstNameError();
}

if(this.state.errors.AadhaarLastName !== "")
{
   $( "#AadhaarLastName1" ).focus();
   this.HighlightAadhaarLastNameError();
}


if(this.state.errors.EnrolmentId !== "")
{
   $( "#EnrolmentId1" ).focus();
   this.HighlightEnrolmentIdError();
}

if(this.state.errors.AadhaarNumber !== "")
{
   $( "#AadhaarNumber1" ).focus();
   this.HighlightAadhaarNumberError();
}


if(this.state.errors.RegistrationNumber !== "")
{
   $( "#RegistrationNumber1" ).focus();
   this.HighlightRegistrationNumberError();
}

if(this.state.errors.Email !== "")
{
   $('#Email').css('border-color', "red")
   $( "#Email" ).focus();
}

if(this.state.errors.PhoneNumber !== "")
{
   $( "#PhoneNumber1" ).focus();
   this.HighlightPhoneNumberError();
}


if(this.state.errors.StdCode !== "")
{
   $( "#StdCode1" ).focus();
   this.HighlightStdCodeError();
}
 

if(this.state.errors.CountryCode !== "")
{
   $( "#CountryCode1" ).focus();
   this.HighlightCountryCodeError();
}

if(this.state.errors.OfficeCountry !== "")
{
   $('#OfficeCountry').css('border-color', "red")
   $( "#OfficeCountry" ).focus();
}
 
if(this.state.errors.OfficePincode !== "")
{
   $( "#OfficePincode1" ).focus();
   this.HighlightOfficePincodeError();
}

if(this.state.errors.OfficeState !== "")
{
   $('#OfficeState').css('border-color', "red")
   $( "#OfficeState" ).focus();
}


if(this.state.errors.OfficeTown !== "")
{
   $( "#OfficeTown1" ).focus();
   this.HighlightOfficeTownError();
}
 
if(this.state.errors.OfficeArea !== "")
{
   $( "#OfficeArea1" ).focus();
   this.HighlightOfficeAreaError();
}

if(this.state.errors.OfficeRoad !== "")
{
   $( "#OfficeRoad1" ).focus();
   this.HighlightOfficeRoadError();
}
 
if(this.state.errors.OfficePremises !== "")
{
   $( "#OfficePremises1" ).focus();
   this.HighlightOfficePremisesError();
}


if(this.state.errors.OfficeFlat !== "")
{
   $( "#OfficeFlat1" ).focus();
   this.HighlightOfficeFlatError();
}


if(this.state.errors.OfficeName !== "")
{
   $( "#OfficeName1" ).focus();
   this.HighlightOfficeNameError();
}

if(this.state.errors.ResidenceCountry !== "")
{
   $('#ResidenceCountry').css('border-color', "red")
   $( "#ResidenceCountry" ).focus();
}
 
if(this.state.errors.ResidencePincode !== "")
{
   $( "#ResidencePincode1" ).focus();
   this.HighlightResidencePincodeError();
}

if(this.state.errors.ResidenceState !== "")
{
   $('#ResidenceState').css('border-color', "red")
   $( "#ResidenceState" ).focus();
}


if(this.state.errors.ResidenceTown !== "")
{
   $( "#ResidenceTown1" ).focus();
   this.HighlightResidenceTownError();
}
 

if(this.state.errors.ResidenceArea !== "")
{
   $( "#ResidenceArea1" ).focus();
   this.HighlightResidenceAreaError();
}

if(this.state.errors.ResidenceRoad !== "")
{
   $( "#ResidenceRoad1" ).focus();
   this.HighlightResidenceRoadError();
}

if(this.state.errors.ResidencePremises !== "")
{
   $( "#ResidencePremises1" ).focus();
   this.HighlightResidencePremisesError();
}

if(this.state.errors.ResidenceFlat !== "")
{
   $( "#ResidenceFlat1" ).focus();
   this.HighlightResidenceFlatError();
}

if(this.state.errors.MotherMiddleName !== "")
{
   $( "#MotherMiddleName1" ).focus();
   this.HighlightMotherMiddleNameError();
}

if(this.state.errors.MotherFirstName !== "")
{
   $( "#MotherFirstName1" ).focus();
   this.HighlightMotherFirstNameError();
}

if(this.state.errors.MotherLastName !== "")
{
   $( "#MotherLastName1" ).focus();
   this.HighlightMotherLastNameError();
}


if(this.state.errors.FatherMiddleName !== "")
{
   $( "#FatherMiddleName1" ).focus();
   this.HighlightFatherMiddleNameError();
}

if(this.state.errors.FatherFirstName !== "")
{
   $( "#FatherFirstName1" ).focus();
   this.HighlightFatherFirstNameError();
}

if(this.state.errors.FatherLastName !== "")
{
   $( "#FatherLastName1" ).focus();
   this.HighlightFatherLastNameError();
}

if(this.state.errors.Year !== "")
{
   $( "#Year1" ).focus();
   this.HighlightYearError();
}

if(this.state.errors.Month !== "")
{
   $( "#Month1" ).focus();
   this.HighlightMonthError();
}
 

if(this.state.errors.Day !== "")
{
   $( "#Day1" ).focus();
   this.HighlightDayError();
}

if(this.state.errors.OtherMiddleName !== "")
{
   $( "#OtherMiddleName1" ).focus();
   this.HighlightOtherMiddleNameError();
}


if(this.state.errors.OtherFirstName !== "")
{
   $( "#OtherFirstName1" ).focus();
   this.HighlightOtherFirstNameError();
}

if(this.state.errors.OtherLastName !== "")
{
   $( "#OtherLastName1" ).focus();
   this.HighlightOtherLastNameError();
}
 

if(this.state.errors.AbbreviationTwo !== "")
{
   $( "#AbbreviationTwo1" ).focus();
   this.HighlightAbbreviationTwoError();
}

if(this.state.errors.AbbreviationOne !== "")
{
   $( "#AbbreviationOne1" ).focus();
   this.HighlightAbbreviationOneError();
}

if(this.state.errors.MiddleName !== "")
{
   $( "#MiddleName1" ).focus();
   this.HighlightMiddleNameError();
}

if(this.state.errors.FirstName !== "")
{
   $( "#FirstName1" ).focus();
   this.HighlightFirstNameError();
}

if(this.state.errors.LastName !== "")
{ 
   $( "#LastName1" ).focus();
   this.HighlightLastNameError();
}
 
    
 }

 handleResetall = () => {
    localStorage.setItem('localdata', JSON.stringify({}));
    localStorage.setItem('localerror', JSON.stringify({}));
    // this.setState({data:{}})
   // console.log("data",this.state.data)
}

  handleReset = () => {
        localStorage.setItem('localdata', JSON.stringify({}));
        localStorage.setItem('localerror', JSON.stringify({}));
      //  console.log("data",this.state.data)
  }

 savepdf = () => {
//    this.handleReset();
 //  console.log("savepdf working...", this.state.data)
   axios.post('http://159.89.165.174:5000/saveData', 
       this.state.data
   )
       .then(function (response) {
         //  console.log(response);
       })
       .catch(function (error) {
         //  console.log(error);
       });

   const input = document.getElementById('Form1');
   html2canvas(input)
     .then((canvas) => {
         const imgData = canvas.toDataURL('image/png');
         const pdf = new jsPDF();
         pdf.addImage(imgData, 'JPEG', 0, 5, 215, 290);
         // pdf.output('dataurlnewwindow');
         pdf.save("download.pdf");
     });
 }
 
 sendmsg = () =>{
    let otpcheck ="" ;
   axios.get('http://159.89.165.174:5000/sendmsg')
       .then(async (response) => {
           this.setState({otpverify:response.data})
           otpcheck = response.data;
        //   console.log("otp checcking",otpcheck)
        //   console.log("otp checck", otpcheck)
        //   console.log("optnumber check", this.state.data.otpnumber)
           if(this.state.otpverify == this.state.data.otpnumber)
           {
             this.setState({secondcheck:1});
             alert("Valid")
           }
           else{
             alert("Please verifyotp again");
           }
       })
       .catch(function (error) {
        //   console.log(error);
       });
     
     }
   
   sendno = ( )=> {
     this.setState({check:1});
     this.state.number.phonenumber = this.state.data.phonenumber;
     const dataa =  this.state.number.phonenumber;
     this.setState({dataa})
   //  console.log("vvv",this.state.number)
     axios.post('http://159.89.165.174:5000/sendnumber', 
     this.state.number
     )
         .then(function (response) {
           //  console.log("hhh")
           //  console.log(response);
         })
         .catch(function (error) {
           //  console.log(error);
         });
   
   }
   
   getdata =() =>{
       axios.get('http://159.89.165.174:5000/viewData')
     .then((response) => {
       //  console.log("testing" , response.data)
   
     })
     .catch(function (error) {
       //  console.log(error);
     });
   }
   
  
  ResetOtherLastName = () =>  {

    let data1 = this.state.data;
    let name1= "OtherLastName1";
    this.setState(data1);
    data1[name1] = "";

    let data2 = this.state.data;
    let name2= "OtherLastName2";
    this.setState(data2);
    data2[name2] = "";

    let data3 = this.state.data;
    let name3= "OtherLastName3";
    this.setState(data3);
    data3[name3] = "";

    let data4 = this.state.data;
    let name4= "OtherLastName4";
    this.setState(data4);
    data4[name4] = "";

    let data5 = this.state.data;
    let name5= "OtherLastName";
    this.setState(data5);
    data5[name5] = "";

    let data6 = this.state.data;
    let name6= "OtherLastName6";
    this.setState(data6);
    data6[name6] = "";

    let data7 = this.state.data;
    let name7= "OtherLastName7";
    this.setState(data7);
    data7[name7] = "";

    let data8 = this.state.data;
    let name8= "OtherLastName8";
    this.setState(data8);
    data8[name8] = "";

    let data9 = this.state.data;
    let name9= "OtherLastName9";
    this.setState(data9);
    data9[name9] = "";
    
    let data10 = this.state.data;
    let name10= "OtherLastName10";
    this.setState(data10);
    data10[name10] = "";

    let data11 = this.state.data;
    let name11= "OtherLastName11";
    this.setState(data11);
    data11[name11] = "";

    let data12 = this.state.data;
    let name12= "OtherLastName12";
    this.setState(data12);
    data12[name12] = "";

    let data13 = this.state.data;
    let name13= "OtherLastName13";
    this.setState(data13);
    data13[name13] = "";

    let data14 = this.state.data;
    let name14= "OtherLastName14";
    this.setState(data14);
    data14[name14] = "";

    let data15 = this.state.data;
    let name15= "OtherLastName15";
    this.setState(data15);
    data15[name15] = "";

    let data16 = this.state.data;
    let name16= "OtherLastName16";
    this.setState(data16);
    data16[name16] = "";

    let data17 = this.state.data;
    let name17= "OtherLastName17";
    this.setState(data17);
    data17[name17] = "";

    let data18 = this.state.data;
    let name18= "OtherLastName18";
    this.setState(data18);
    data18[name18] = "";

    let data19 = this.state.data;
    let name19= "OtherLastName19";
    this.setState(data19);
    data19[name19] = "";

    let data20 = this.state.data;
    let name20= "OtherLastName20";
    this.setState(data20);
    data20[name20] = "";

    let data21 = this.state.data;
    let name21= "OtherLastName21";
    this.setState(data21);
    data21[name21] = "";

    let data22 = this.state.data;
    let name22= "OtherLastName22";
    this.setState(data22);
    data22[name22] = "";

    let data23 = this.state.data;
    let name23= "OtherLastName23";
    this.setState(data23);
    data23[name23] = "";

    let data24 = this.state.data;
    let name24= "OtherLastName24";
    this.setState(data24);
    data24[name24] = "";

    let data25 = this.state.data;
    let name25= "OtherLastName25";
    this.setState(data25);
    data25[name25] = "";

  
  }

  ResetOtherFirstName = () => {

    let data1 = this.state.data;
    let name1= "OtherFirstName1";
    this.setState(data1);
    data1[name1] = "";

    let data2 = this.state.data;
    let name2= "OtherFirstName2";
    this.setState(data2);
    data2[name2] = "";

    let data3 = this.state.data;
    let name3= "OtherFirstName3";
    this.setState(data3);
    data3[name3] = "";

    let data4 = this.state.data;
    let name4= "OtherFirstName4";
    this.setState(data4);
    data4[name4] = "";

    let data5 = this.state.data;
    let name5= "OtherFirstName";
    this.setState(data5);
    data5[name5] = "";

    let data6 = this.state.data;
    let name6= "OtherFirstName6";
    this.setState(data6);
    data6[name6] = "";

    let data7 = this.state.data;
    let name7= "OtherFirstName7";
    this.setState(data7);
    data7[name7] = "";

    let data8 = this.state.data;
    let name8= "OtherFirstName8";
    this.setState(data8);
    data8[name8] = "";

    let data9 = this.state.data;
    let name9= "OtherFirstName9";
    this.setState(data9);
    data9[name9] = "";
    
    let data10 = this.state.data;
    let name10= "OtherFirstName10";
    this.setState(data10);
    data10[name10] = "";

    let data11 = this.state.data;
    let name11= "OtherFirstName11";
    this.setState(data11);
    data11[name11] = "";

    let data12 = this.state.data;
    let name12= "OtherFirstName12";
    this.setState(data12);
    data12[name12] = "";

    let data13 = this.state.data;
    let name13= "OtherFirstName13";
    this.setState(data13);
    data13[name13] = "";

    let data14 = this.state.data;
    let name14= "OtherFirstName14";
    this.setState(data14);
    data14[name14] = "";

    let data15 = this.state.data;
    let name15= "OtherFirstName15";
    this.setState(data15);
    data15[name15] = "";

    let data16 = this.state.data;
    let name16= "OtherFirstName16";
    this.setState(data16);
    data16[name16] = "";

    let data17 = this.state.data;
    let name17= "OtherFirstName17";
    this.setState(data17);
    data17[name17] = "";

    let data18 = this.state.data;
    let name18= "OtherFirstName18";
    this.setState(data18);
    data18[name18] = "";

    let data19 = this.state.data;
    let name19= "OtherFirstName19";
    this.setState(data19);
    data19[name19] = "";

    let data20 = this.state.data;
    let name20= "OtherFirstName20";
    this.setState(data20);
    data20[name20] = "";

    let data21 = this.state.data;
    let name21= "OtherFirstName21";
    this.setState(data21);
    data21[name21] = "";

    let data22 = this.state.data;
    let name22= "OtherFirstName22";
    this.setState(data22);
    data22[name22] = "";

    let data23 = this.state.data;
    let name23= "OtherFirstName23";
    this.setState(data23);
    data23[name23] = "";

    let data24 = this.state.data;
    let name24= "OtherFirstName24";
    this.setState(data24);
    data24[name24] = "";

    let data25 = this.state.data;
    let name25= "OtherFirstName25";
    this.setState(data25);
    data25[name25] = "";


  }

  ResetOtherMiddleName = () => {

    let data1 = this.state.data;
    let name1= "OtherMiddleName1";
    this.setState(data1);
    data1[name1] = "";

    let data2 = this.state.data;
    let name2= "OtherMiddleName2";
    this.setState(data2);
    data2[name2] = "";

    let data3 = this.state.data;
    let name3= "OtherMiddleName3";
    this.setState(data3);
    data3[name3] = "";

    let data4 = this.state.data;
    let name4= "OtherMiddleName4";
    this.setState(data4);
    data4[name4] = "";

    let data5 = this.state.data;
    let name5= "OtherMiddleName";
    this.setState(data5);
    data5[name5] = "";

    let data6 = this.state.data;
    let name6= "OtherMiddleName6";
    this.setState(data6);
    data6[name6] = "";

    let data7 = this.state.data;
    let name7= "OtherMiddleName7";
    this.setState(data7);
    data7[name7] = "";

    let data8 = this.state.data;
    let name8= "OtherMiddleName8";
    this.setState(data8);
    data8[name8] = "";

    let data9 = this.state.data;
    let name9= "OtherMiddleName9";
    this.setState(data9);
    data9[name9] = "";
    
    let data10 = this.state.data;
    let name10= "OtherMiddleName10";
    this.setState(data10);
    data10[name10] = "";

    let data11 = this.state.data;
    let name11= "OtherMiddleName11";
    this.setState(data11);
    data11[name11] = "";

    let data12 = this.state.data;
    let name12= "OtherMiddleName12";
    this.setState(data12);
    data12[name12] = "";

    let data13 = this.state.data;
    let name13= "OtherMiddleName13";
    this.setState(data13);
    data13[name13] = "";

    let data14 = this.state.data;
    let name14= "OtherMiddleName14";
    this.setState(data14);
    data14[name14] = "";

    let data15 = this.state.data;
    let name15= "OtherMiddleName15";
    this.setState(data15);
    data15[name15] = "";

    let data16 = this.state.data;
    let name16= "OtherMiddleName16";
    this.setState(data16);
    data16[name16] = "";

    let data17 = this.state.data;
    let name17= "OtherMiddleName17";
    this.setState(data17);
    data17[name17] = "";

    let data18 = this.state.data;
    let name18= "OtherMiddleName18";
    this.setState(data18);
    data18[name18] = "";

    let data19 = this.state.data;
    let name19= "OtherMiddleName19";
    this.setState(data19);
    data19[name19] = "";

    let data20 = this.state.data;
    let name20= "OtherMiddleName20";
    this.setState(data20);
    data20[name20] = "";

    let data21 = this.state.data;
    let name21= "OtherMiddleName21";
    this.setState(data21);
    data21[name21] = "";

    let data22 = this.state.data;
    let name22= "OtherMiddleName22";
    this.setState(data22);
    data22[name22] = "";

    let data23 = this.state.data;
    let name23= "OtherMiddleName23";
    this.setState(data23);
    data23[name23] = "";

    let data24 = this.state.data;
    let name24= "OtherMiddleName24";
    this.setState(data24);
    data24[name24] = "";

    let data25 = this.state.data;
    let name25= "OtherMiddleName25";
    this.setState(data25);
    data25[name25] = "";

  }


  handleNameTitleOneCheck = (e,name) =>  {

    for (var i = 1;i <= 4; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;

    let errors1 = this.state.errors;
    let name4= "NameTitleOne";
    this.setState(errors1);
    errors1[name4] = "";
 
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

    

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }

  handleOtherNameCheck = (e,name) =>  {

    for (var i = 5;i <= 6; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;
     
    let errors1 = this.state.errors;
    let name4= "OtherName";
    this.setState(errors1);
    errors1[name4] = "";

    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

    if(e.target.id === "6")
    {
        this.ResetOtherFirstName();
        let data1 = this.state.data;
        let name1= "OtherFirstName";
        this.setState(data1);
        data1[name1] = "";

        this.ResetOtherLastName();
        let data2 = this.state.data;
        let name2= "OtherLastName";
        this.setState(data2);
        data2[name2] = "";

        this.ResetOtherMiddleName();
        let data3 = this.state.data;
        let name3= "OtherMiddleName";
        this.setState(data3);
        data3[name3] = "";

        let data4 = this.state.data;
        let name4= "NameTitleTwo";
        this.setState(data4);
        data4[name4] = "";

        let errors1 = this.state.errors;
        let name5= "OtherLastName";
        this.setState(errors1);
        errors1[name5] = "";
        this.ResetOtherLastNameError();
 
        let errors2 = this.state.errors;
        let name6= "OtherFirstName";
        this.setState(errors2);
        errors2[name6] = "";
        this.ResetOtherFirstNameError();
   
        let errors3 = this.state.errors;
        let name7= "OtherMiddleName";
        this.setState(errors3);
        errors3[name7] = "";
        this.ResetOtherMiddleNameError();
     

        let errors4 = this.state.errors;
        let name8= "NameTitleTwo";
        this.setState(errors4);
        errors4[name8] = "";

        for (var i = 7;i <= 10; i++)
        {
            document.getElementById(i).checked = false;
        }
        
    }
   

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }
   
  handleNameTitleTwoCheck = (e,name) =>  {

    for (var i = 7;i <= 10; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;
    
    let errors1 = this.state.errors;
    let name4= "NameTitleTwo";
    this.setState(errors1);
    errors1[name4] = "";
 
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })
 
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }


  handleGenderCheck = (e,name) =>  {

    for (var i = 11;i <= 13; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;    
    
    let errors1 = this.state.errors;
    let name4= "Gender";
    this.setState(errors1);
    errors1[name4] = "";
 
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })
 
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }



  handleParentNameCheck = (e,name) =>  {

    for (var i = 14;i <= 15; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;
     
    let errors1 = this.state.errors;
    let name4= "ParentName";
    this.setState(errors1);
    errors1[name4] = "";
 
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

    if(this.state.data.ParentName === "14")
    {
        if(this.state.errors.MotherLastName === "*Please enter Mother's name")
        {
            
            let errors1 = this.state.errors;
            let name4= "MotherLastName";
            this.setState(errors1);
            errors1[name4] = "";
            this.ResetMotherLastNameError();
   
        }

        if(this.state.errors.MotherFirstName === "*Please enter Mother's name")
        {
            let errors1 = this.state.errors;
            let name4= "MotherFirstName";
            this.setState(errors1);
            errors1[name4] = "";
            this.ResetMotherFirstNameError();
        }
    }
    else {

    
        if(this.state.data.MotherLastName === "" || (isNaN(this.state.data.MotherLastName) === false))
        {
            let errors1 = this.state.errors;
            let name4= "MotherLastName";
            this.setState(errors1);
            errors1[name4] = "*Please enter Mother's name";
            this.HighlightMotherLastNameError();
        }

        if(this.state.data.MotherFirstName === "" || (isNaN(this.state.data.MotherFirstName) === false))
        {
            let errors1 = this.state.errors;
            let name4= "MotherFirstName";
            this.setState(errors1);
            errors1[name4] = "*Please enter Mother's name";
            this.HighlightMotherFirstNameError();
        }
    }

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }

  handleCommunicationCheck = (e,name) =>  {

    for (var i = 16;i <= 17; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;
    
    let errors1 = this.state.errors;
    let name4= "Communication";
    this.setState(errors1);
    errors1[name4] = "";
  
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

    if(this.state.data.Communication === "17")
    {

        let data32 = this.state.data;
        let name32= "officeEnabled";
        this.setState(data32);
        data32[name32] = true;

    //    this.state.officeEnabled = true;
    //    let val = this.state.officeEnabled;
    //    this.setState({val})

       if(this.state.data.OfficeName === "" || ((isNaN(this.state.data.OfficeName) === false) 
       && (this.state.data.OfficeName.match(/^[ ]*$/))))
       { 
        let errors1 = this.state.errors;
        let name4= "OfficeName";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office's Name";
        this.HighlightOfficeNameError();
            this.state.imsModalEnabled =  false;
       }

       if(this.state.data.OfficeFlat === "" || ((isNaN(this.state.data.OfficeFlat) === false) 
       && (this.state.data.OfficeFlat.match(/^[ ]*$/))))
       {     
        let errors1 = this.state.errors;
        let name4= "OfficeFlat";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Flat / Room / Door / Block No.";
        this.HighlightOfficeFlatError();
           this.state.isModalEnabled =  false;
       }

       if(this.state.data.OfficePremises === "" || ((isNaN(this.state.data.OfficePremises) === false) 
       && (this.state.data.OfficePremises.match(/^[ ]*$/))))
       {     

        let errors1 = this.state.errors;
        let name4= "OfficePremises";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Premises / Building / Village";
        this.HighlightOfficePremisesError();
 
           this.state.isModalEnabled =  false;
       }
    
       if(this.state.data.OfficeRoad === "" || ((isNaN(this.state.data.OfficeRoad) === false) 
       && (this.state.data.OfficeRoad.match(/^[ ]*$/))))
       { 

        let errors1 = this.state.errors;
        let name4= "OfficeRoad";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Road / Street / Lane / Post Office";
        this.HighlightOfficeRoadError();
 
           this.state.isModalEnabled =  false;
       }
     
       if(this.state.data.OfficeArea === "" || (isNaN(this.state.data.OfficeArea) === false))
       {  

        let errors1 = this.state.errors;
        let name4= "OfficeArea";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Area / Locality / Taluka / Sub-division";
        this.HighlightOfficeAreaError();

           this.state.isModalEnabled =  false;
       }

       if(this.state.data.OfficeTown === "" || (isNaN(this.state.data.OfficeTown) === false))
       {   

        let errors1 = this.state.errors;
        let name4= "OfficeTown";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Town / City / District";
        this.HighlightOfficeTownError();
           this.state.isModalEnabled =  false;
       }

       if(this.state.data.OfficeState === "" || (isNaN(this.state.data.OfficeState) === false))
       {  

        let errors1 = this.state.errors;
        let name4= "OfficeState";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office State";
        $('#OfficeState').css('border-color', "red")
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
       }

       if(this.state.data.OfficePincode === "" || (this.state.data.OfficePincode.match(/^[ ]*$/)))
       {   

        let errors1 = this.state.errors;
        let name4= "OfficePincode";
        this.setState(errors1);
        errors1[name4] = "*Please enter your Office Pincode";
        this.HighlightOfficePincodeError();

      
           this.state.isModalEnabled =  false;
       }
      
       if(this.state.data.OfficeCountry === "" || (isNaN(this.state.data.OfficeCountry) === false))
       {  
        let errors1 = this.state.errors;
        let name4= "OfficeCountry";
        this.setState(errors1);
        errors1[name4] = "*Please enter your OfficeCountry";
        $('#OfficeCountry').css('border-color', "red")
           this.state.isModalEnabled =  false;
       }
        
    }
    else
    {

        let data32 = this.state.data;
        let name32= "officeEnabled";
        this.setState(data32);
        data32[name32] = false;

    //    this.state.officeEnabled = false;
    //    let val = this.state.officeEnabled;
    //    this.setState({val})

       if(this.state.errors.OfficeName === "*Please enter your Office's Name" )
       { 
        let errors1 = this.state.errors;
        let name4= "OfficeName";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficeNameError();
 
       }

       if(this.state.errors.OfficeFlat === "*Please enter your Office Flat / Room / Door / Block No.")
       { 
        let errors1 = this.state.errors;
        let name4= "OfficeFlat";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficeFlatError();

       }

       if(this.state.errors.OfficePremises === "*Please enter your Office Premises / Building / Village")
       { 
        let errors1 = this.state.errors;
        let name4= "OfficePremises";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficePremisesError();
 
       }

       if(this.state.errors.OfficeRoad === "*Please enter your Office Road / Street / Lane / Post Office")
       {
        let errors1 = this.state.errors;
        let name4= "OfficeRoad";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficeRoadError();

       }

       if(this.state.errors.OfficeArea === "*Please enter your Office Area / Locality / Taluka / Sub-division")
       {
        let errors1 = this.state.errors;
        let name4= "OfficeArea";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficeAreaError();

       }
        
       if(this.state.errors.OfficeTown === "*Please enter your Office Town / City / District")
       {
        let errors1 = this.state.errors;
        let name4= "OfficeTown";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficeTownError();
 
       }

       if(this.state.errors.OfficeState === "*Please enter your Office State")
       {
        let errors1 = this.state.errors;
        let name4= "OfficeState";
        this.setState(errors1);
        errors1[name4] = "";
        $('#OfficeState').css('border-color', '')

       }

       if(this.state.errors.OfficePincode === "*Please enter your Office Pincode")
       {
        let errors1 = this.state.errors;
        let name4= "OfficePincode";
        this.setState(errors1);
        errors1[name4] = "";
        this.ResetOfficePincodeError();
       }

       if(this.state.errors.OfficeCountry === "*Please enter your OfficeCountry")
       {
        let errors1 = this.state.errors;
        let name4= "OfficeCountry";
        this.setState(errors1);
        errors1[name4] = "";
        $('#OfficeCountry').css('border-color', '')
     
       }
    }

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));

    
  }

  handleNameTitleThreeCheck = (e,name) =>  {

    for (var i = 18;i <= 21; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;

    let errors1 = this.state.errors;
    let name4= "NameTitleThree";
    this.setState(errors1);
    errors1[name4] = "";
  
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }


  handleStatusCheck = (e,name) =>  {

    for (var i = 22;i <= 32; i++)
    {
        document.getElementById(i).checked = false;
    }
    document.getElementById(e.target.id).checked = true;

    let errors1 = this.state.errors;
    let name4= "Status";
    this.setState(errors1);
    errors1[name4] = "";
    
    const check = this.state.data;
    check[name] = e.target.id;
    this.setState({ check })

   
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }


  handleSalaryCheck = (e,name) =>  {

    
    if(document.getElementsByTagName("Salary").checked === true)
    {
        document.getElementsByTagName("Salary").checked = false; 

        let errors1 = this.state.errors;
        let name4= "Salary";
        this.setState(errors1);
        errors1[name4] = "";

        let data11 = this.state.data;
        let name14= "Salary";
        this.setState(data11);
        data11[name14] = "";
 

    }
    else 
    {
        document.getElementsByTagName("Salary").checked = true;
        const check = this.state.data;
        check[name] = e.target.id;
        this.setState({ check });


        let data11 = this.state.data;
        let name14= "NoIncome";
        this.setState(data11);
        data11[name14] = "";

        if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
        this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
        this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
        {
            let errors1 = this.state.errors;
            let name4= "Income";
            this.setState(errors1);
            errors1[name4] = "";
 
     
        }
        
    }
 
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }


  handleCapitalGainsCheck = (e,name) =>  {

    if(document.getElementsByTagName("CapitalGains").checked === true)
    {
        document.getElementsByTagName("CapitalGains").checked = false;

        let errors1 = this.state.errors;
        let name4= "CapitalGains";
        this.setState(errors1);
        errors1[name4] = "";


        let data11 = this.state.data;
        let name14= "CapitalGains";
        this.setState(data11);
        data11[name14] = "";
 
    }
    else 
    {
        document.getElementsByTagName("CapitalGains").checked = true;
        const check = this.state.data;
        check[name] = e.target.id;
        this.setState({ check });


        let data11 = this.state.data;
        let name14= "NoIncome";
        this.setState(data11);
        data11[name14] = "";

        if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
        this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
        this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
        {
            let errors1 = this.state.errors;
            let name4= "Income";
            this.setState(errors1);
            errors1[name4] = "";
 
        }
        
    }
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }

 
  handleIncomeBusinessCheck = (e,name) =>  {


    if(isNaN( document.getElementsByTagName("IncomeBusiness").checked))
    {
        document.getElementsByTagName("IncomeBusiness").checked = true;
        
    }
    if(document.getElementsByTagName("IncomeBusiness").checked === false )
    {  
      //  console.log("condition 44")
       
        if(this.state.data.isEnabled  == true){
          //  console.log("1");

            let data20 = this.state.data;
            let name20= "isEnabled";
            this.setState(data20);
            data20[name20] = false;

          
        }
        else{
         ///   console.log("2");

            let data20 = this.state.data;
            let name20= "isEnabled";
            this.setState(data20);
            data20[name20] = true;
 

            let errors1 = this.state.errors;
            let name2= "BusinessCode";
            this.setState(errors1);
            errors1[name2] = "";
            this.ResetBusinessCodeError();


            let data12 = this.state.data;
            let name7= "BusinessCode";
            this.setState(data12);
            data12[name7] = "";

            let data9 = this.state.data;
            let name9= "BusinessCode1";
            this.setState(data9);
            data9[name9] = "";
     
    
            let data3 = this.state.data;
            let name8= "BusinessCode2";
            this.setState(data3);
            data3[name8] = "";


        }
    
        document.getElementsByTagName("IncomeBusiness").checked = true; 
        

        let data1 = this.state.data;
        let name1= "IncomeBusiness";
        this.setState(data1);
        data1[name1] = "";
        this.ResetBusinessCodeError();
 
        let data2 = this.state.data;
        let name2= "BusinessCode";
        this.setState(data2);
        data2[name2] = "";
 

        let data7 = this.state.data;
        let name7= "BusinessCode1";
        this.setState(data7);
        data2[name7] = "";
 

        let data3 = this.state.data;
        let name3= "BusinessCode2";
        this.setState(data3);
        data3[name3] = "";
 
        let errors1 = this.state.errors;
        let name4= "BusinessCode";
        this.setState(errors1);
        errors1[name4] = "";
  
 
    }
  
    
    else if (document.getElementsByTagName("IncomeBusiness").checked === true)
    {
      //  console.log("condition 3")
        if(this.state.data.isEnabled  == true){
         //   console.log("3");

            let data20 = this.state.data;
            let name20= "isEnabled";
            this.setState(data20);
            data20[name20] = false;
 

            let errors1 = this.state.errors;
            let name2= "BusinessCode";
            this.setState(errors1);
            errors1[name2] = "";
            this.ResetBusinessCodeError();
       

            let data12 = this.state.data;
            let name7= "BusinessCode1";
            this.setState(data12);
            data12[name7] = "";
     
    
            let data3 = this.state.data;
            let name8= "BusinessCode2";
            this.setState(data3);
            data3[name8] = "";

            let data9 = this.state.data;
            let name9= "BusinessCode";
            this.setState(data9);
            data9[name9] = "";
        }
        else{
          //  console.log("4");
            // this.setState({isEnabled : true})
            let data20 = this.state.data;
            let name20= "isEnabled";
            this.setState(data20);
            data20[name20] = true;
 

            let errors1 = this.state.errors;
            let name2= "BusinessCode";
            this.setState(errors1);
            errors1[name2] = "";
            this.ResetBusinessCodeError();
            
            let data9 = this.state.data;
            let name9= "BusinessCode";
            this.setState(data9);
            data9[name9] = "";

            let data12 = this.state.data;
            let name7= "BusinessCode1";
            this.setState(data12);
            data12[name7] = "";
     
    
            let data3 = this.state.data;
            let name8= "BusinessCode2";
            this.setState(data3);
            data3[name8] = "";
        }
    
        
        document.getElementsByTagName("IncomeBusiness").checked = false;
        const check = this.state.data;
        check[name] = e.target.id;
        this.setState({ check });


        let data11 = this.state.data;
        let name14= "NoIncome";
        this.setState(data11);
        data11[name14] = "";

        if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
        this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
        this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
        {
            let errors = this.state.errors;
            let name= "Income";
            this.setState(errors);
            errors[name] = "";
 
        }
 
    }
    
    
   // console.log("isenabled", this.state.data.isEnabled);
    // console.log("isenabledcheck", this.state.isEnabledCheck)
    
    

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }

  handleIncomeOtherSourceCheck = (e,name) =>  {

    if(document.getElementsByTagName("IncomeOtherSource").checked === true)
    {
        document.getElementsByTagName("IncomeOtherSource").checked = false;
        
        let errors1 = this.state.errors;
        let name4= "IncomeOtherSource";
        this.setState(errors1);
        errors1[name4] = "";

        let data11 = this.state.data;
        let name14= "IncomeOtherSource";
        this.setState(data11);
        data11[name14] = "";
 
    }
    else 
    {
        document.getElementsByTagName("IncomeOtherSource").checked = true;
        const check = this.state.data;
        check[name] = e.target.id;
        this.setState({ check });


        let data11 = this.state.data;
        let name14= "NoIncome";
        this.setState(data11);
        data11[name14] = "";

        if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
        this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
        this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
        {
            let errors1 = this.state.errors;
            let name4= "Income";
            this.setState(errors1);
            errors1[name4] = "";
 
        }
        
    }
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }
 
  handleIncomeFromHouseCheck = (e,name) =>  {

    if(document.getElementsByTagName("IncomeFromHouse").checked === false)
    {
        document.getElementsByTagName("IncomeFromHouse").checked = true;

        let errors1 = this.state.errors;
        let name4= "IncomeFromHouse";
        this.setState(errors1);
        errors1[name4] = "";


        let data11 = this.state.data;
        let name14= "IncomeFromHouse";
        this.setState(data11);
        data11[name14] = "";
 
 
    }
    else 
    {
        document.getElementsByTagName("IncomeFromHouse").checked = false;
        const check = this.state.data;
        check[name] = e.target.id;
        this.setState({ check });


        let data11 = this.state.data;
        let name14= "NoIncome";
        this.setState(data11);
        data11[name14] = "";

        if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
        this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
        this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
        {
            let errors1 = this.state.errors;
            let name4= "Income";
            this.setState(errors1);
            errors1[name4] = "";
    
        }
        
    }
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
  }

  handleNoIncomeCheck = (e,name) =>  {

    // console.log("checkbox",document.getElementsByTagName("NoIncome").checked)
 
     if(isNaN( document.getElementsByTagName("NoIncome").checked))
     {
         document.getElementsByTagName("NoIncome").checked = true;
         // console.log("true -no income")
     }
    
     if(document.getElementsByTagName("NoIncome").checked === true)
     {
         // console.log("false -no income")
         document.getElementsByTagName("NoIncome").checked = false;

         const check = this.state.data;
         check[name] = e.target.id;
         this.setState({ check });

         let data22 = this.state.data;
         let name22= "isEnabledCheck";
         this.setState(data22);
         data22[name22] = false;

 
            //  let val = false;
        //  this.setState({isEnabledCheck : false});
 

         let data20 = this.state.data;
         let name20= "isEnabled";
         this.setState(data20);
         data20[name20] = false;
 
         for (var i = 33;i <= 37; i++)
         {
            document.getElementById(i).checked = false;
         }
 
         let errors = this.state.errors;
         let name1= "IncomeBusiness";
         this.setState(errors);
         errors[name1] = "";
   
         this.ResetBusinessCodeError();
 
            let errors1 = this.state.errors;
            let name2= "BusinessCode";
            this.setState(errors1);
            errors1[name2] = "";
   
 
            let data12 = this.state.data;
            let name4= "IncomeBusiness";
            this.setState(data12);
            data12[name4] = "";

            let data13 = this.state.data;
            let name15= "BusinessCode1";
            this.setState(data13);
            data13[name15] = "";
    
 
            let data3 = this.state.data;
            let name5= "BusinessCode1";
            this.setState(data3);
            data3[name5] = "";
    
     
            let data4 = this.state.data;
            let name6= "BusinessCode2";
            this.setState(data4);
            data4[name6] = "";
  
            let data5 = this.state.data;
            let name7= "Salary";
            this.setState(data5);
            data5[name7] = "";
 
            let data6 = this.state.data;
            let name8= "CapitalGains";
            this.setState(data6);
            data6[name8] = "";
     
            let data7 = this.state.data;
            let name9= "IncomeOtherSource";
            this.setState(data7);
            data7[name9] = "";
  
            let data8 = this.state.data;
            let name10= "IncomeFromHouse";
            this.setState(data8);
            data8[name10] = "";
      
 
 
     }
     else if(document.getElementsByTagName("NoIncome").checked === false)
     {
         // console.log("false -no income1")

        document.getElementsByTagName("NoIncome").checked = true;

        let data = this.state.data;
        let name= "NoIncome";
        this.setState(data);
        data[name] = "";
         
 
         if(!(this.state.data.Salary === "" && this.state.data.CapitalGains === "" &&
         this.state.data.IncomeBusiness === "" && this.state.data.IncomeOtherSource === "" &&
         this.state.data.IncomeFromHouse === "" && this.state.data.NoIncome === ""))
         {
  
            let errors3 = this.state.errors;
            let name3= "Income";
            this.setState(errors3);
            errors3[name3] = "";
         }
  

         let data22 = this.state.data;
         let name22= "isEnabledCheck";
         this.setState(data22);
         data22[name22] = true;
 
        // let val = true;
        // this.setState({isEnabledCheck : true});
  

        let data20 = this.state.data;
        let name20= "isEnabled";
        this.setState(data20);
        data20[name20] = false;

     
 
     }
    
     // console.log("isenabled", this.state.data.isEnabled);
    //  // console.log("isenabledcheck", this.state.isEnabledCheck)
     
     localStorage.setItem('localdata', JSON.stringify(this.state.data));
     localStorage.setItem('localerror', JSON.stringify(this.state.errors));
     
   }

 handleBackspaceKey = (event, backFocus, onFocus) => {

    const key = event.key;  
    if ((key === "Backspace" || key === "Delete") && (event.target.value === "")) {
        $(`${backFocus}`).focus()
    }
    else {
        $(`${onFocus}`).focus()
    }
 }


 

handleLastName1 = (event) => {  
    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName1" ).focus() : $( "#LastName2" ).focus();
 }

handleLastName2 = (event) => {   

    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName2" ).focus() : $( "#LastName3" ).focus();
}

handleLastName3 = (event) => {    
 
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName3" ).focus() : $( "#LastName4" ).focus();
}

handleLastName4 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName4" ).focus() : $( "#LastName5" ).focus();
}

handleLastName5 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName5" ).focus() : $( "#LastName6" ).focus();
}

handleLastName6 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName6" ).focus() : $( "#LastName7" ).focus();
}

handleLastName7 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event); 
    (event.target.value === "") ? $( "#LastName7" ).focus() : $( "#LastName8" ).focus(); 
}

handleLastName8 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);   
    (event.target.value === "") ? $( "#LastName8" ).focus() : $( "#LastName9" ).focus();
}

handleLastName9 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName9" ).focus() : $( "#LastName10" ).focus();
}

handleLastName10 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName10" ).focus() : $( "#LastName11" ).focus();
}

handleLastName11 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName11" ).focus() : $( "#LastName12" ).focus();
}

handleLastName12 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName12" ).focus() : $( "#LastName13" ).focus();
}

handleLastName13 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event); 
    (event.target.value === "") ? $( "#LastName13" ).focus() : $( "#LastName14" ).focus(); 
}

handleLastName14 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName14" ).focus() : $( "#LastName15" ).focus();
}

handleLastName15 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName15" ).focus() : $( "#LastName16" ).focus();
}

handleLastName16 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName16" ).focus() : $( "#LastName17" ).focus();
}

handleLastName17 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName17" ).focus() : $( "#LastName18" ).focus();
}

handleLastName18 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName18" ).focus() : $( "#LastName19" ).focus();
}

handleLastName19 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName19" ).focus() : $( "#LastName20" ).focus();
}

handleLastName20 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName20" ).focus() : $( "#LastName21" ).focus();
}

handleLastName21 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName21" ).focus() : $( "#LastName22" ).focus();
}

handleLastName22 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName22" ).focus() : $( "#LastName23" ).focus();
}

handleLastName23 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName23" ).focus() : $( "#LastName24" ).focus();
}

handleLastName24 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName24" ).focus() : $( "#LastName25" ).focus();
}

handleLastName25 = (event) => {    
    this.handleInput(event);
    this.validateLastName(event);  
    (event.target.value === "") ? $( "#LastName25" ).focus() : $( "#LastName25" ).focus();
}

ResetLastNameError = () => {
    $('#LastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#LastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#LastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightLastNameError = () => {

    $('#LastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#LastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#LastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName1" ).focus() : $( "#FirstName2" ).focus();
 }

handleFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName2" ).focus() : $( "#FirstName3" ).focus();
   
}

handleFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName3" ).focus() : $( "#FirstName4" ).focus();
}

handleFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName4" ).focus() : $( "#FirstName5" ).focus();
}

handleFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName5" ).focus() : $( "#FirstName6" ).focus();
}

handleFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName6" ).focus() : $( "#FirstName7" ).focus();
}

handleFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event); 
    (event.target.value === "") ? $( "#FirstName7" ).focus() : $( "#FirstName8" ).focus(); 
}

handleFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);   
    (event.target.value === "") ? $( "#FirstName8" ).focus() : $( "#FirstName9" ).focus();
}

handleFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName9" ).focus() : $( "#FirstName10" ).focus();
}

handleFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName10" ).focus() : $( "#FirstName11" ).focus();
}

handleFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName11" ).focus() : $( "#FirstName12" ).focus();
}

handleFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName12" ).focus() : $( "#FirstName13" ).focus();
}

handleFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event); 
    (event.target.value === "") ? $( "#FirstName13" ).focus() : $( "#FirstName14" ).focus(); 
}

handleFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName14" ).focus() : $( "#FirstName15" ).focus();
}

handleFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName15" ).focus() : $( "#FirstName16" ).focus();
}

handleFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName16" ).focus() : $( "#FirstName17" ).focus();
}

handleFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName17" ).focus() : $( "#FirstName18" ).focus();
}

handleFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName18" ).focus() : $( "#FirstName19" ).focus();
}

handleFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName19" ).focus() : $( "#FirstName20" ).focus();
}

handleFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName20" ).focus() : $( "#FirstName21" ).focus();
}

handleFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName21" ).focus() : $( "#FirstName22" ).focus();
}

handleFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName22" ).focus() : $( "#FirstName23" ).focus();
}

handleFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName23" ).focus() : $( "#FirstName24" ).focus();
}

handleFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName24" ).focus() : $( "#FirstName25" ).focus();
}

handleFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateFirstName(event);  
    (event.target.value === "") ? $( "#FirstName25" ).focus() : $( "#FirstName25" ).focus();
}

ResetFirstNameError = () => {
    $('#FirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#FirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightFirstNameError = () => {

    $('#FirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#FirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 
handleMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateMiddleName(event); 
    (event.target.value === "") ? $( "#MiddleName1" ).focus() : $( "#MiddleName2" ).focus();
 }

handleMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName2" ).focus() : $( "#MiddleName3" ).focus();
   
}

handleMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName3" ).focus() : $( "#MiddleName4" ).focus();
}

handleMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName4" ).focus() : $( "#MiddleName5" ).focus();
}

handleMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName5" ).focus() : $( "#MiddleName6" ).focus();
}

handleMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName6" ).focus() : $( "#MiddleName7" ).focus();
}

handleMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event); 
    (event.target.value === "") ? $( "#MiddleName7" ).focus() : $( "#MiddleName8" ).focus(); 
}

handleMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);   
    (event.target.value === "") ? $( "#MiddleName8" ).focus() : $( "#MiddleName9" ).focus();
}

handleMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName9" ).focus() : $( "#MiddleName10" ).focus();
}

handleMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName10" ).focus() : $( "#MiddleName11" ).focus();
}

handleMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName11" ).focus() : $( "#MiddleName12" ).focus();
}

handleMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName12" ).focus() : $( "#MiddleName13" ).focus();
}

handleMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event); 
    (event.target.value === "") ? $( "#MiddleName13" ).focus() : $( "#MiddleName14" ).focus(); 
}

handleMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName14" ).focus() : $( "#MiddleName15" ).focus();
}

handleMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName15" ).focus() : $( "#MiddleName16" ).focus();
}

handleMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName16" ).focus() : $( "#MiddleName17" ).focus();
}

handleMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName17" ).focus() : $( "#MiddleName18" ).focus();
}

handleMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName18" ).focus() : $( "#MiddleName19" ).focus();
}

handleMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName19" ).focus() : $( "#MiddleName20" ).focus();
}

handleMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName20" ).focus() : $( "#MiddleName21" ).focus();
}

handleMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName21" ).focus() : $( "#MiddleName22" ).focus();
}

handleMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName22" ).focus() : $( "#MiddleName23" ).focus();
}

handleMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName23" ).focus() : $( "#MiddleName24" ).focus();
}

handleMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName24" ).focus() : $( "#MiddleName25" ).focus();
}

handleMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateMiddleName(event);  
    (event.target.value === "") ? $( "#MiddleName25" ).focus() : $( "#MiddleName25" ).focus();
}

ResetMiddleNameError = () => {
    $('#MiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#MiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightMiddleNameError = () => {

    $('#MiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#MiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 
handleAbbreviationOne1 = (event) => {  
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne1" ).focus() : $( "#AbbreviationOne2" ).focus();
 }

handleAbbreviationOne2 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne2" ).focus() : $( "#AbbreviationOne3" ).focus();
   
}

handleAbbreviationOne3 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne3" ).focus() : $( "#AbbreviationOne4" ).focus();
}

handleAbbreviationOne4 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne4" ).focus() : $( "#AbbreviationOne5" ).focus();
}

handleAbbreviationOne5 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne5" ).focus() : $( "#AbbreviationOne6" ).focus();
}

handleAbbreviationOne6 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne6" ).focus() : $( "#AbbreviationOne7" ).focus();
}

handleAbbreviationOne7 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event); 
    (event.target.value === "") ? $( "#AbbreviationOne7" ).focus() : $( "#AbbreviationOne8" ).focus(); 
}

handleAbbreviationOne8 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);   
    (event.target.value === "") ? $( "#AbbreviationOne8" ).focus() : $( "#AbbreviationOne9" ).focus();
}

handleAbbreviationOne9 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne9" ).focus() : $( "#AbbreviationOne10" ).focus();
}

handleAbbreviationOne10 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne10" ).focus() : $( "#AbbreviationOne11" ).focus();
}

handleAbbreviationOne11 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne11" ).focus() : $( "#AbbreviationOne12" ).focus();
}

handleAbbreviationOne12 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne12" ).focus() : $( "#AbbreviationOne13" ).focus();
}

handleAbbreviationOne13 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event); 
    (event.target.value === "") ? $( "#AbbreviationOne13" ).focus() : $( "#AbbreviationOne14" ).focus(); 
}

handleAbbreviationOne14 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne14" ).focus() : $( "#AbbreviationOne15" ).focus();
}

handleAbbreviationOne15 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne15" ).focus() : $( "#AbbreviationOne16" ).focus();
}

handleAbbreviationOne16 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne16" ).focus() : $( "#AbbreviationOne17" ).focus();
}

handleAbbreviationOne17 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne17" ).focus() : $( "#AbbreviationOne18" ).focus();
}

handleAbbreviationOne18 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne18" ).focus() : $( "#AbbreviationOne19" ).focus();
}

handleAbbreviationOne19 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne19" ).focus() : $( "#AbbreviationOne20" ).focus();
}

handleAbbreviationOne20 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne20" ).focus() : $( "#AbbreviationOne21" ).focus();
}

handleAbbreviationOne21 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne21" ).focus() : $( "#AbbreviationOne22" ).focus();
}

handleAbbreviationOne22 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne22" ).focus() : $( "#AbbreviationOne23" ).focus();
}

handleAbbreviationOne23 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne23" ).focus() : $( "#AbbreviationOne24" ).focus();
}

handleAbbreviationOne24 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne24" ).focus() : $( "#AbbreviationOne25" ).focus();
}

handleAbbreviationOne25 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne25" ).focus() : $( "#AbbreviationOne26" ).focus();
}

handleAbbreviationOne26 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne26" ).focus() : $( "#AbbreviationOne27" ).focus();
}

handleAbbreviationOne27 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne27" ).focus() : $( "#AbbreviationOne28" ).focus();
}

handleAbbreviationOne28 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne28" ).focus() : $( "#AbbreviationOne29" ).focus();
}

handleAbbreviationOne29 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne29" ).focus() : $( "#AbbreviationOne30" ).focus();
}

handleAbbreviationOne30 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne30" ).focus() : $( "#AbbreviationOne31" ).focus();
}

handleAbbreviationOne31 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne31" ).focus() : $( "#AbbreviationOne32" ).focus();
}

handleAbbreviationOne32 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne32" ).focus() : $( "#AbbreviationOne33" ).focus();
}

handleAbbreviationOne33 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne33" ).focus() : $( "#AbbreviationOne34" ).focus();
}

handleAbbreviationOne34 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne34" ).focus() : $( "#AbbreviationOne35" ).focus();
}

handleAbbreviationOne35 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne35" ).focus() : $( "#AbbreviationOne36" ).focus();
}

handleAbbreviationOne36 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne36" ).focus() : $( "#AbbreviationOne37" ).focus();
}

handleAbbreviationOne37 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationOne(event);  
    (event.target.value === "") ? $( "#AbbreviationOne37" ).focus() : $( "#AbbreviationOne37" ).focus();
}

ResetAbbreviationOneError = () => {
    $('#AbbreviationOne1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AbbreviationOne2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne25').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne26').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne27').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne28').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne29').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne30').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne31').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne32').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne33').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne34').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne35').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne36').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationOne37').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAbbreviationOneError = () => {

    $('#AbbreviationOne1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AbbreviationOne2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne25').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne26').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne27').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne28').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne29').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne30').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne31').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne32').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne33').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne34').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne35').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne36').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationOne37').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
}

 
handleAbbreviationTwo1 = (event) => {  
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo1" ).focus() : $( "#AbbreviationTwo2" ).focus();
 }

handleAbbreviationTwo2 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo2" ).focus() : $( "#AbbreviationTwo3" ).focus();
   
}

handleAbbreviationTwo3 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo3" ).focus() : $( "#AbbreviationTwo4" ).focus();
}

handleAbbreviationTwo4 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo4" ).focus() : $( "#AbbreviationTwo5" ).focus();
}

handleAbbreviationTwo5 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo5" ).focus() : $( "#AbbreviationTwo6" ).focus();
}

handleAbbreviationTwo6 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo6" ).focus() : $( "#AbbreviationTwo7" ).focus();
}

handleAbbreviationTwo7 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event); 
    (event.target.value === "") ? $( "#AbbreviationTwo7" ).focus() : $( "#AbbreviationTwo8" ).focus(); 
}

handleAbbreviationTwo8 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);   
    (event.target.value === "") ? $( "#AbbreviationTwo8" ).focus() : $( "#AbbreviationTwo9" ).focus();
}

handleAbbreviationTwo9 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo9" ).focus() : $( "#AbbreviationTwo10" ).focus();
}

handleAbbreviationTwo10 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo10" ).focus() : $( "#AbbreviationTwo11" ).focus();
}

handleAbbreviationTwo11 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo11" ).focus() : $( "#AbbreviationTwo12" ).focus();
}

handleAbbreviationTwo12 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo12" ).focus() : $( "#AbbreviationTwo13" ).focus();
}

handleAbbreviationTwo13 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event); 
    (event.target.value === "") ? $( "#AbbreviationTwo13" ).focus() : $( "#AbbreviationTwo14" ).focus(); 
}

handleAbbreviationTwo14 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo14" ).focus() : $( "#AbbreviationTwo15" ).focus();
}

handleAbbreviationTwo15 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo15" ).focus() : $( "#AbbreviationTwo16" ).focus();
}

handleAbbreviationTwo16 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo16" ).focus() : $( "#AbbreviationTwo17" ).focus();
}

handleAbbreviationTwo17 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo17" ).focus() : $( "#AbbreviationTwo18" ).focus();
}

handleAbbreviationTwo18 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo18" ).focus() : $( "#AbbreviationTwo19" ).focus();
}

handleAbbreviationTwo19 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo19" ).focus() : $( "#AbbreviationTwo20" ).focus();
}

handleAbbreviationTwo20 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo20" ).focus() : $( "#AbbreviationTwo21" ).focus();
}

handleAbbreviationTwo21 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo21" ).focus() : $( "#AbbreviationTwo22" ).focus();
}

handleAbbreviationTwo22 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo22" ).focus() : $( "#AbbreviationTwo23" ).focus();
}

handleAbbreviationTwo23 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo23" ).focus() : $( "#AbbreviationTwo24" ).focus();
}

handleAbbreviationTwo24 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo24" ).focus() : $( "#AbbreviationTwo25" ).focus();
}

handleAbbreviationTwo25 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo25" ).focus() : $( "#AbbreviationTwo26" ).focus();
}

handleAbbreviationTwo26 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo26" ).focus() : $( "#AbbreviationTwo27" ).focus();
}

handleAbbreviationTwo27 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo27" ).focus() : $( "#AbbreviationTwo28" ).focus();
}

handleAbbreviationTwo28 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo28" ).focus() : $( "#AbbreviationTwo29" ).focus();
}

handleAbbreviationTwo29 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo29" ).focus() : $( "#AbbreviationTwo30" ).focus();
}

handleAbbreviationTwo30 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo30" ).focus() : $( "#AbbreviationTwo31" ).focus();
}

handleAbbreviationTwo31 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo31" ).focus() : $( "#AbbreviationTwo32" ).focus();
}

handleAbbreviationTwo32 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo32" ).focus() : $( "#AbbreviationTwo33" ).focus();
}

handleAbbreviationTwo33 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo33" ).focus() : $( "#AbbreviationTwo34" ).focus();
}

handleAbbreviationTwo34 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo34" ).focus() : $( "#AbbreviationTwo35" ).focus();
}

handleAbbreviationTwo35 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo35" ).focus() : $( "#AbbreviationTwo36" ).focus();
}

handleAbbreviationTwo36 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo36" ).focus() : $( "#AbbreviationTwo37" ).focus();
}

handleAbbreviationTwo37 = (event) => {    
    this.handleInput(event);
    this.validateAbbreviationTwo(event);  
    (event.target.value === "") ? $( "#AbbreviationTwo37" ).focus() : $( "#AbbreviationTwo37" ).focus();
}

ResetAbbreviationTwoError = () => {
    $('#AbbreviationTwo1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AbbreviationTwo2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo25').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo26').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo27').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo28').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo29').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo30').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo31').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo32').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo33').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo34').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo35').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo36').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AbbreviationTwo37').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAbbreviationTwoError = () => {

    $('#AbbreviationTwo1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AbbreviationTwo2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo25').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo26').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo27').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo28').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo29').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo30').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo31').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo32').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo33').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo34').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo35').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo36').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AbbreviationTwo37').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleOtherLastName1 = (event) => {  
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName1" ).focus() : $( "#OtherLastName2" ).focus();
 }

handleOtherLastName2 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName2" ).focus() : $( "#OtherLastName3" ).focus();
   
}

handleOtherLastName3 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName3" ).focus() : $( "#OtherLastName4" ).focus();
}

handleOtherLastName4 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName4" ).focus() : $( "#OtherLastName5" ).focus();
}

handleOtherLastName5 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName5" ).focus() : $( "#OtherLastName6" ).focus();
}

handleOtherLastName6 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName6" ).focus() : $( "#OtherLastName7" ).focus();
}

handleOtherLastName7 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event); 
    (event.target.value === "") ? $( "#OtherLastName7" ).focus() : $( "#OtherLastName8" ).focus(); 
}

handleOtherLastName8 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);   
    (event.target.value === "") ? $( "#OtherLastName8" ).focus() : $( "#OtherLastName9" ).focus();
}

handleOtherLastName9 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName9" ).focus() : $( "#OtherLastName10" ).focus();
}

handleOtherLastName10 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName10" ).focus() : $( "#OtherLastName11" ).focus();
}

handleOtherLastName11 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName11" ).focus() : $( "#OtherLastName12" ).focus();
}

handleOtherLastName12 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName12" ).focus() : $( "#OtherLastName13" ).focus();
}

handleOtherLastName13 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event); 
    (event.target.value === "") ? $( "#OtherLastName13" ).focus() : $( "#OtherLastName14" ).focus(); 
}

handleOtherLastName14 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName14" ).focus() : $( "#OtherLastName15" ).focus();
}

handleOtherLastName15 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName15" ).focus() : $( "#OtherLastName16" ).focus();
}

handleOtherLastName16 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName16" ).focus() : $( "#OtherLastName17" ).focus();
}

handleOtherLastName17 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName17" ).focus() : $( "#OtherLastName18" ).focus();
}

handleOtherLastName18 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName18" ).focus() : $( "#OtherLastName19" ).focus();
}

handleOtherLastName19 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName19" ).focus() : $( "#OtherLastName20" ).focus();
}

handleOtherLastName20 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName20" ).focus() : $( "#OtherLastName21" ).focus();
}

handleOtherLastName21 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName21" ).focus() : $( "#OtherLastName22" ).focus();
}

handleOtherLastName22 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName22" ).focus() : $( "#OtherLastName23" ).focus();
}

handleOtherLastName23 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName23" ).focus() : $( "#OtherLastName24" ).focus();
}

handleOtherLastName24 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName24" ).focus() : $( "#OtherLastName25" ).focus();
}

handleOtherLastName25 = (event) => {    
    this.handleInput(event);
    this.validateOtherLastName(event);  
    (event.target.value === "") ? $( "#OtherLastName25" ).focus() : $( "#OtherLastName25" ).focus();
}

ResetOtherLastNameError = () => {
    $('#OtherLastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OtherLastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherLastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOtherLastNameError = () => {

    $('#OtherLastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OtherLastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherLastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleOtherFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName1" ).focus() : $( "#OtherFirstName2" ).focus();
 }

handleOtherFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName2" ).focus() : $( "#OtherFirstName3" ).focus();
   
}

handleOtherFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName3" ).focus() : $( "#OtherFirstName4" ).focus();
}

handleOtherFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName4" ).focus() : $( "#OtherFirstName5" ).focus();
}

handleOtherFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName5" ).focus() : $( "#OtherFirstName6" ).focus();
}

handleOtherFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName6" ).focus() : $( "#OtherFirstName7" ).focus();
}

handleOtherFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event); 
    (event.target.value === "") ? $( "#OtherFirstName7" ).focus() : $( "#OtherFirstName8" ).focus(); 
}

handleOtherFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);   
    (event.target.value === "") ? $( "#OtherFirstName8" ).focus() : $( "#OtherFirstName9" ).focus();
}

handleOtherFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName9" ).focus() : $( "#OtherFirstName10" ).focus();
}

handleOtherFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName10" ).focus() : $( "#OtherFirstName11" ).focus();
}

handleOtherFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName11" ).focus() : $( "#OtherFirstName12" ).focus();
}

handleOtherFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName12" ).focus() : $( "#OtherFirstName13" ).focus();
}

handleOtherFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event); 
    (event.target.value === "") ? $( "#OtherFirstName13" ).focus() : $( "#OtherFirstName14" ).focus(); 
}

handleOtherFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName14" ).focus() : $( "#OtherFirstName15" ).focus();
}

handleOtherFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName15" ).focus() : $( "#OtherFirstName16" ).focus();
}

handleOtherFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName16" ).focus() : $( "#OtherFirstName17" ).focus();
}

handleOtherFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName17" ).focus() : $( "#OtherFirstName18" ).focus();
}

handleOtherFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName18" ).focus() : $( "#OtherFirstName19" ).focus();
}

handleOtherFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName19" ).focus() : $( "#OtherFirstName20" ).focus();
}

handleOtherFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName20" ).focus() : $( "#OtherFirstName21" ).focus();
}

handleOtherFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName21" ).focus() : $( "#OtherFirstName22" ).focus();
}

handleOtherFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName22" ).focus() : $( "#OtherFirstName23" ).focus();
}

handleOtherFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName23" ).focus() : $( "#OtherFirstName24" ).focus();
}

handleOtherFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName24" ).focus() : $( "#OtherFirstName25" ).focus();
}

handleOtherFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateOtherFirstName(event);  
    (event.target.value === "") ? $( "#OtherFirstName25" ).focus() : $( "#OtherFirstName25" ).focus();
}

ResetOtherFirstNameError = () => {
    $('#OtherFirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OtherFirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherFirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOtherFirstNameError = () => {

    $('#OtherFirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OtherFirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherFirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 
handleOtherMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName1" ).focus() : $( "#OtherMiddleName2" ).focus();
 }

handleOtherMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName2" ).focus() : $( "#OtherMiddleName3" ).focus();
   
}

handleOtherMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName3" ).focus() : $( "#OtherMiddleName4" ).focus();
}

handleOtherMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName4" ).focus() : $( "#OtherMiddleName5" ).focus();
}

handleOtherMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName5" ).focus() : $( "#OtherMiddleName6" ).focus();
}

handleOtherMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName6" ).focus() : $( "#OtherMiddleName7" ).focus();
}

handleOtherMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event); 
    (event.target.value === "") ? $( "#OtherMiddleName7" ).focus() : $( "#OtherMiddleName8" ).focus(); 
}

handleOtherMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);   
    (event.target.value === "") ? $( "#OtherMiddleName8" ).focus() : $( "#OtherMiddleName9" ).focus();
}

handleOtherMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName9" ).focus() : $( "#OtherMiddleName10" ).focus();
}

handleOtherMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName10" ).focus() : $( "#OtherMiddleName11" ).focus();
}

handleOtherMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName11" ).focus() : $( "#OtherMiddleName12" ).focus();
}

handleOtherMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName12" ).focus() : $( "#OtherMiddleName13" ).focus();
}

handleOtherMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event); 
    (event.target.value === "") ? $( "#OtherMiddleName13" ).focus() : $( "#OtherMiddleName14" ).focus(); 
}

handleOtherMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName14" ).focus() : $( "#OtherMiddleName15" ).focus();
}

handleOtherMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName15" ).focus() : $( "#OtherMiddleName16" ).focus();
}

handleOtherMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName16" ).focus() : $( "#OtherMiddleName17" ).focus();
}

handleOtherMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName17" ).focus() : $( "#OtherMiddleName18" ).focus();
}

handleOtherMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName18" ).focus() : $( "#OtherMiddleName19" ).focus();
}

handleOtherMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName19" ).focus() : $( "#OtherMiddleName20" ).focus();
}

handleOtherMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName20" ).focus() : $( "#OtherMiddleName21" ).focus();
}

handleOtherMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName21" ).focus() : $( "#OtherMiddleName22" ).focus();
}

handleOtherMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName22" ).focus() : $( "#OtherMiddleName23" ).focus();
}

handleOtherMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName23" ).focus() : $( "#OtherMiddleName24" ).focus();
}

handleOtherMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName24" ).focus() : $( "#OtherMiddleName25" ).focus();
}

handleOtherMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateOtherMiddleName(event);  
    (event.target.value === "") ? $( "#OtherMiddleName25" ).focus() : $( "#OtherMiddleName25" ).focus();
}

ResetOtherMiddleNameError = () => {
    $('#OtherMiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OtherMiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OtherMiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOtherMiddleNameError = () => {

    $('#OtherMiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OtherMiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OtherMiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 

handleFatherLastName1 = (event) => {  
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName1" ).focus() : $( "#FatherLastName2" ).focus();
 }

handleFatherLastName2 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName2" ).focus() : $( "#FatherLastName3" ).focus();
   
}

handleFatherLastName3 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName3" ).focus() : $( "#FatherLastName4" ).focus();
}

handleFatherLastName4 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName4" ).focus() : $( "#FatherLastName5" ).focus();
}

handleFatherLastName5 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName5" ).focus() : $( "#FatherLastName6" ).focus();
}

handleFatherLastName6 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName6" ).focus() : $( "#FatherLastName7" ).focus();
}

handleFatherLastName7 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event); 
    (event.target.value === "") ? $( "#FatherLastName7" ).focus() : $( "#FatherLastName8" ).focus(); 
}

handleFatherLastName8 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);   
    (event.target.value === "") ? $( "#FatherLastName8" ).focus() : $( "#FatherLastName9" ).focus();
}

handleFatherLastName9 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName9" ).focus() : $( "#FatherLastName10" ).focus();
}

handleFatherLastName10 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName10" ).focus() : $( "#FatherLastName11" ).focus();
}

handleFatherLastName11 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName11" ).focus() : $( "#FatherLastName12" ).focus();
}

handleFatherLastName12 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName12" ).focus() : $( "#FatherLastName13" ).focus();
}

handleFatherLastName13 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event); 
    (event.target.value === "") ? $( "#FatherLastName13" ).focus() : $( "#FatherLastName14" ).focus(); 
}

handleFatherLastName14 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName14" ).focus() : $( "#FatherLastName15" ).focus();
}

handleFatherLastName15 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName15" ).focus() : $( "#FatherLastName16" ).focus();
}

handleFatherLastName16 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName16" ).focus() : $( "#FatherLastName17" ).focus();
}

handleFatherLastName17 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName17" ).focus() : $( "#FatherLastName18" ).focus();
}

handleFatherLastName18 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName18" ).focus() : $( "#FatherLastName19" ).focus();
}

handleFatherLastName19 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName19" ).focus() : $( "#FatherLastName20" ).focus();
}

handleFatherLastName20 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName20" ).focus() : $( "#FatherLastName21" ).focus();
}

handleFatherLastName21 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName21" ).focus() : $( "#FatherLastName22" ).focus();
}

handleFatherLastName22 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName22" ).focus() : $( "#FatherLastName23" ).focus();
}

handleFatherLastName23 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName23" ).focus() : $( "#FatherLastName24" ).focus();
}

handleFatherLastName24 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName24" ).focus() : $( "#FatherLastName25" ).focus();
}

handleFatherLastName25 = (event) => {    
    this.handleInput(event);
    this.validateFatherLastName(event);  
    (event.target.value === "") ? $( "#FatherLastName25" ).focus() : $( "#FatherLastName25" ).focus();
}

ResetFatherLastNameError = () => {
    $('#FatherLastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#FatherLastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherLastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightFatherLastNameError = () => {

    $('#FatherLastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#FatherLastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherLastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 

handleFatherFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName1" ).focus() : $( "#FatherFirstName2" ).focus();
 }

handleFatherFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName2" ).focus() : $( "#FatherFirstName3" ).focus();
   
}

handleFatherFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName3" ).focus() : $( "#FatherFirstName4" ).focus();
}

handleFatherFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName4" ).focus() : $( "#FatherFirstName5" ).focus();
}

handleFatherFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName5" ).focus() : $( "#FatherFirstName6" ).focus();
}

handleFatherFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName6" ).focus() : $( "#FatherFirstName7" ).focus();
}

handleFatherFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event); 
    (event.target.value === "") ? $( "#FatherFirstName7" ).focus() : $( "#FatherFirstName8" ).focus(); 
}

handleFatherFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);   
    (event.target.value === "") ? $( "#FatherFirstName8" ).focus() : $( "#FatherFirstName9" ).focus();
}

handleFatherFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName9" ).focus() : $( "#FatherFirstName10" ).focus();
}

handleFatherFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName10" ).focus() : $( "#FatherFirstName11" ).focus();
}

handleFatherFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName11" ).focus() : $( "#FatherFirstName12" ).focus();
}

handleFatherFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName12" ).focus() : $( "#FatherFirstName13" ).focus();
}

handleFatherFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event); 
    (event.target.value === "") ? $( "#FatherFirstName13" ).focus() : $( "#FatherFirstName14" ).focus(); 
}

handleFatherFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName14" ).focus() : $( "#FatherFirstName15" ).focus();
}

handleFatherFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName15" ).focus() : $( "#FatherFirstName16" ).focus();
}

handleFatherFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName16" ).focus() : $( "#FatherFirstName17" ).focus();
}

handleFatherFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName17" ).focus() : $( "#FatherFirstName18" ).focus();
}

handleFatherFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName18" ).focus() : $( "#FatherFirstName19" ).focus();
}

handleFatherFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName19" ).focus() : $( "#FatherFirstName20" ).focus();
}

handleFatherFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName20" ).focus() : $( "#FatherFirstName21" ).focus();
}

handleFatherFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName21" ).focus() : $( "#FatherFirstName22" ).focus();
}

handleFatherFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName22" ).focus() : $( "#FatherFirstName23" ).focus();
}

handleFatherFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName23" ).focus() : $( "#FatherFirstName24" ).focus();
}

handleFatherFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName24" ).focus() : $( "#FatherFirstName25" ).focus();
}

handleFatherFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateFatherFirstName(event);  
    (event.target.value === "") ? $( "#FatherFirstName25" ).focus() : $( "#FatherFirstName25" ).focus();
}

ResetFatherFirstNameError = () => {
    $('#FatherFirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#FatherFirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherFirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightFatherFirstNameError = () => {

    $('#FatherFirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#FatherFirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherFirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 
handleFatherMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName1" ).focus() : $( "#FatherMiddleName2" ).focus();
 }

handleFatherMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName2" ).focus() : $( "#FatherMiddleName3" ).focus();
   
}

handleFatherMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName3" ).focus() : $( "#FatherMiddleName4" ).focus();
}

handleFatherMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName4" ).focus() : $( "#FatherMiddleName5" ).focus();
}

handleFatherMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName5" ).focus() : $( "#FatherMiddleName6" ).focus();
}

handleFatherMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName6" ).focus() : $( "#FatherMiddleName7" ).focus();
}

handleFatherMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event); 
    (event.target.value === "") ? $( "#FatherMiddleName7" ).focus() : $( "#FatherMiddleName8" ).focus(); 
}

handleFatherMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);   
    (event.target.value === "") ? $( "#FatherMiddleName8" ).focus() : $( "#FatherMiddleName9" ).focus();
}

handleFatherMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName9" ).focus() : $( "#FatherMiddleName10" ).focus();
}

handleFatherMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName10" ).focus() : $( "#FatherMiddleName11" ).focus();
}

handleFatherMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName11" ).focus() : $( "#FatherMiddleName12" ).focus();
}

handleFatherMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName12" ).focus() : $( "#FatherMiddleName13" ).focus();
}

handleFatherMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event); 
    (event.target.value === "") ? $( "#FatherMiddleName13" ).focus() : $( "#FatherMiddleName14" ).focus(); 
}

handleFatherMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName14" ).focus() : $( "#FatherMiddleName15" ).focus();
}

handleFatherMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName15" ).focus() : $( "#FatherMiddleName16" ).focus();
}

handleFatherMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName16" ).focus() : $( "#FatherMiddleName17" ).focus();
}

handleFatherMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName17" ).focus() : $( "#FatherMiddleName18" ).focus();
}

handleFatherMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName18" ).focus() : $( "#FatherMiddleName19" ).focus();
}

handleFatherMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName19" ).focus() : $( "#FatherMiddleName20" ).focus();
}

handleFatherMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName20" ).focus() : $( "#FatherMiddleName21" ).focus();
}

handleFatherMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName21" ).focus() : $( "#FatherMiddleName22" ).focus();
}

handleFatherMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName22" ).focus() : $( "#FatherMiddleName23" ).focus();
}

handleFatherMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName23" ).focus() : $( "#FatherMiddleName24" ).focus();
}

handleFatherMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName24" ).focus() : $( "#FatherMiddleName25" ).focus();
}

handleFatherMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateFatherMiddleName(event);  
    (event.target.value === "") ? $( "#FatherMiddleName25" ).focus() : $( "#FatherMiddleName25" ).focus();
}

ResetFatherMiddleNameError = () => {
    $('#FatherMiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#FatherMiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#FatherMiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightFatherMiddleNameError = () => {

    $('#FatherMiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#FatherMiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#FatherMiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleMotherLastName1 = (event) => {  
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName1" ).focus() : $( "#MotherLastName2" ).focus();
 }

handleMotherLastName2 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName2" ).focus() : $( "#MotherLastName3" ).focus();
   
}

handleMotherLastName3 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName3" ).focus() : $( "#MotherLastName4" ).focus();
}

handleMotherLastName4 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName4" ).focus() : $( "#MotherLastName5" ).focus();
}

handleMotherLastName5 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName5" ).focus() : $( "#MotherLastName6" ).focus();
}

handleMotherLastName6 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName6" ).focus() : $( "#MotherLastName7" ).focus();
}

handleMotherLastName7 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event); 
    (event.target.value === "") ? $( "#MotherLastName7" ).focus() : $( "#MotherLastName8" ).focus(); 
}

handleMotherLastName8 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);   
    (event.target.value === "") ? $( "#MotherLastName8" ).focus() : $( "#MotherLastName9" ).focus();
}

handleMotherLastName9 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName9" ).focus() : $( "#MotherLastName10" ).focus();
}

handleMotherLastName10 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName10" ).focus() : $( "#MotherLastName11" ).focus();
}

handleMotherLastName11 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName11" ).focus() : $( "#MotherLastName12" ).focus();
}

handleMotherLastName12 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName12" ).focus() : $( "#MotherLastName13" ).focus();
}

handleMotherLastName13 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event); 
    (event.target.value === "") ? $( "#MotherLastName13" ).focus() : $( "#MotherLastName14" ).focus(); 
}

handleMotherLastName14 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName14" ).focus() : $( "#MotherLastName15" ).focus();
}

handleMotherLastName15 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName15" ).focus() : $( "#MotherLastName16" ).focus();
}

handleMotherLastName16 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName16" ).focus() : $( "#MotherLastName17" ).focus();
}

handleMotherLastName17 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName17" ).focus() : $( "#MotherLastName18" ).focus();
}

handleMotherLastName18 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName18" ).focus() : $( "#MotherLastName19" ).focus();
}

handleMotherLastName19 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName19" ).focus() : $( "#MotherLastName20" ).focus();
}

handleMotherLastName20 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName20" ).focus() : $( "#MotherLastName21" ).focus();
}

handleMotherLastName21 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName21" ).focus() : $( "#MotherLastName22" ).focus();
}

handleMotherLastName22 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName22" ).focus() : $( "#MotherLastName23" ).focus();
}

handleMotherLastName23 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName23" ).focus() : $( "#MotherLastName24" ).focus();
}

handleMotherLastName24 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName24" ).focus() : $( "#MotherLastName25" ).focus();
}

handleMotherLastName25 = (event) => {    
    this.handleInput(event);
    this.validateMotherLastName(event);  
    (event.target.value === "") ? $( "#MotherLastName25" ).focus() : $( "#MotherLastName25" ).focus();
}

ResetMotherLastNameError = () => {
    $('#MotherLastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#MotherLastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherLastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightMotherLastNameError = () => {

    $('#MotherLastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#MotherLastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherLastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 
handleMotherFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName1" ).focus() : $( "#MotherFirstName2" ).focus();
 }

handleMotherFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName2" ).focus() : $( "#MotherFirstName3" ).focus();
   
}

handleMotherFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName3" ).focus() : $( "#MotherFirstName4" ).focus();
}

handleMotherFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName4" ).focus() : $( "#MotherFirstName5" ).focus();
}

handleMotherFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName5" ).focus() : $( "#MotherFirstName6" ).focus();
}

handleMotherFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName6" ).focus() : $( "#MotherFirstName7" ).focus();
}

handleMotherFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event); 
    (event.target.value === "") ? $( "#MotherFirstName7" ).focus() : $( "#MotherFirstName8" ).focus(); 
}

handleMotherFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);   
    (event.target.value === "") ? $( "#MotherFirstName8" ).focus() : $( "#MotherFirstName9" ).focus();
}

handleMotherFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName9" ).focus() : $( "#MotherFirstName10" ).focus();
}

handleMotherFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName10" ).focus() : $( "#MotherFirstName11" ).focus();
}

handleMotherFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName11" ).focus() : $( "#MotherFirstName12" ).focus();
}

handleMotherFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName12" ).focus() : $( "#MotherFirstName13" ).focus();
}

handleMotherFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event); 
    (event.target.value === "") ? $( "#MotherFirstName13" ).focus() : $( "#MotherFirstName14" ).focus(); 
}

handleMotherFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName14" ).focus() : $( "#MotherFirstName15" ).focus();
}

handleMotherFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName15" ).focus() : $( "#MotherFirstName16" ).focus();
}

handleMotherFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName16" ).focus() : $( "#MotherFirstName17" ).focus();
}

handleMotherFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName17" ).focus() : $( "#MotherFirstName18" ).focus();
}

handleMotherFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName18" ).focus() : $( "#MotherFirstName19" ).focus();
}

handleMotherFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName19" ).focus() : $( "#MotherFirstName20" ).focus();
}

handleMotherFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName20" ).focus() : $( "#MotherFirstName21" ).focus();
}

handleMotherFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName21" ).focus() : $( "#MotherFirstName22" ).focus();
}

handleMotherFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName22" ).focus() : $( "#MotherFirstName23" ).focus();
}

handleMotherFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName23" ).focus() : $( "#MotherFirstName24" ).focus();
}

handleMotherFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName24" ).focus() : $( "#MotherFirstName25" ).focus();
}

handleMotherFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateMotherFirstName(event);  
    (event.target.value === "") ? $( "#MotherFirstName25" ).focus() : $( "#MotherFirstName25" ).focus();
}

ResetMotherFirstNameError = () => {
    $('#MotherFirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#MotherFirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherFirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightMotherFirstNameError = () => {

    $('#MotherFirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#MotherFirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherFirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 
handleMotherMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName1" ).focus() : $( "#MotherMiddleName2" ).focus();
 }

handleMotherMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName2" ).focus() : $( "#MotherMiddleName3" ).focus();
   
}

handleMotherMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName3" ).focus() : $( "#MotherMiddleName4" ).focus();
}

handleMotherMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName4" ).focus() : $( "#MotherMiddleName5" ).focus();
}

handleMotherMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName5" ).focus() : $( "#MotherMiddleName6" ).focus();
}

handleMotherMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName6" ).focus() : $( "#MotherMiddleName7" ).focus();
}

handleMotherMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event); 
    (event.target.value === "") ? $( "#MotherMiddleName7" ).focus() : $( "#MotherMiddleName8" ).focus(); 
}

handleMotherMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);   
    (event.target.value === "") ? $( "#MotherMiddleName8" ).focus() : $( "#MotherMiddleName9" ).focus();
}

handleMotherMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName9" ).focus() : $( "#MotherMiddleName10" ).focus();
}

handleMotherMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName10" ).focus() : $( "#MotherMiddleName11" ).focus();
}

handleMotherMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName11" ).focus() : $( "#MotherMiddleName12" ).focus();
}

handleMotherMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName12" ).focus() : $( "#MotherMiddleName13" ).focus();
}

handleMotherMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event); 
    (event.target.value === "") ? $( "#MotherMiddleName13" ).focus() : $( "#MotherMiddleName14" ).focus(); 
}

handleMotherMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName14" ).focus() : $( "#MotherMiddleName15" ).focus();
}

handleMotherMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName15" ).focus() : $( "#MotherMiddleName16" ).focus();
}

handleMotherMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName16" ).focus() : $( "#MotherMiddleName17" ).focus();
}

handleMotherMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName17" ).focus() : $( "#MotherMiddleName18" ).focus();
}

handleMotherMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName18" ).focus() : $( "#MotherMiddleName19" ).focus();
}

handleMotherMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName19" ).focus() : $( "#MotherMiddleName20" ).focus();
}

handleMotherMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName20" ).focus() : $( "#MotherMiddleName21" ).focus();
}

handleMotherMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName21" ).focus() : $( "#MotherMiddleName22" ).focus();
}

handleMotherMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName22" ).focus() : $( "#MotherMiddleName23" ).focus();
}

handleMotherMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName23" ).focus() : $( "#MotherMiddleName24" ).focus();
}

handleMotherMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName24" ).focus() : $( "#MotherMiddleName25" ).focus();
}

handleMotherMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateMotherMiddleName(event);  
    (event.target.value === "") ? $( "#MotherMiddleName25" ).focus() : $( "#MotherMiddleName25" ).focus();
}

ResetMotherMiddleNameError = () => {
    $('#MotherMiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#MotherMiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#MotherMiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightMotherMiddleNameError = () => {

    $('#MotherMiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#MotherMiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#MotherMiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}
 

handleAadhaarLastName1 = (event) => {  
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName1" ).focus() : $( "#AadhaarLastName2" ).focus();
 }

handleAadhaarLastName2 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName2" ).focus() : $( "#AadhaarLastName3" ).focus();
   
}

handleAadhaarLastName3 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName3" ).focus() : $( "#AadhaarLastName4" ).focus();
}

handleAadhaarLastName4 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName4" ).focus() : $( "#AadhaarLastName5" ).focus();
}

handleAadhaarLastName5 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName5" ).focus() : $( "#AadhaarLastName6" ).focus();
}

handleAadhaarLastName6 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName6" ).focus() : $( "#AadhaarLastName7" ).focus();
}

handleAadhaarLastName7 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event); 
    (event.target.value === "") ? $( "#AadhaarLastName7" ).focus() : $( "#AadhaarLastName8" ).focus(); 
}

handleAadhaarLastName8 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);   
    (event.target.value === "") ? $( "#AadhaarLastName8" ).focus() : $( "#AadhaarLastName9" ).focus();
}

handleAadhaarLastName9 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName9" ).focus() : $( "#AadhaarLastName10" ).focus();
}

handleAadhaarLastName10 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName10" ).focus() : $( "#AadhaarLastName11" ).focus();
}

handleAadhaarLastName11 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName11" ).focus() : $( "#AadhaarLastName12" ).focus();
}

handleAadhaarLastName12 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName12" ).focus() : $( "#AadhaarLastName13" ).focus();
}

handleAadhaarLastName13 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event); 
    (event.target.value === "") ? $( "#AadhaarLastName13" ).focus() : $( "#AadhaarLastName14" ).focus(); 
}

handleAadhaarLastName14 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName14" ).focus() : $( "#AadhaarLastName15" ).focus();
}

handleAadhaarLastName15 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName15" ).focus() : $( "#AadhaarLastName16" ).focus();
}

handleAadhaarLastName16 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName16" ).focus() : $( "#AadhaarLastName17" ).focus();
}

handleAadhaarLastName17 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName17" ).focus() : $( "#AadhaarLastName18" ).focus();
}

handleAadhaarLastName18 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName18" ).focus() : $( "#AadhaarLastName19" ).focus();
}

handleAadhaarLastName19 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName19" ).focus() : $( "#AadhaarLastName20" ).focus();
}

handleAadhaarLastName20 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName20" ).focus() : $( "#AadhaarLastName21" ).focus();
}

handleAadhaarLastName21 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName21" ).focus() : $( "#AadhaarLastName22" ).focus();
}

handleAadhaarLastName22 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName22" ).focus() : $( "#AadhaarLastName23" ).focus();
}

handleAadhaarLastName23 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName23" ).focus() : $( "#AadhaarLastName24" ).focus();
}

handleAadhaarLastName24 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName24" ).focus() : $( "#AadhaarLastName25" ).focus();
}

handleAadhaarLastName25 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarLastName(event);  
    (event.target.value === "") ? $( "#AadhaarLastName25" ).focus() : $( "#AadhaarLastName25" ).focus();
}

ResetAadhaarLastNameError = () => {
    $('#AadhaarLastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AadhaarLastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarLastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAadhaarLastNameError = () => {

    $('#AadhaarLastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AadhaarLastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarLastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 


handleAadhaarFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName1" ).focus() : $( "#AadhaarFirstName2" ).focus();
 }

handleAadhaarFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName2" ).focus() : $( "#AadhaarFirstName3" ).focus();
   
}

handleAadhaarFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName3" ).focus() : $( "#AadhaarFirstName4" ).focus();
}

handleAadhaarFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName4" ).focus() : $( "#AadhaarFirstName5" ).focus();
}

handleAadhaarFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName5" ).focus() : $( "#AadhaarFirstName6" ).focus();
}

handleAadhaarFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName6" ).focus() : $( "#AadhaarFirstName7" ).focus();
}

handleAadhaarFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event); 
    (event.target.value === "") ? $( "#AadhaarFirstName7" ).focus() : $( "#AadhaarFirstName8" ).focus(); 
}

handleAadhaarFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);   
    (event.target.value === "") ? $( "#AadhaarFirstName8" ).focus() : $( "#AadhaarFirstName9" ).focus();
}

handleAadhaarFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName9" ).focus() : $( "#AadhaarFirstName10" ).focus();
}

handleAadhaarFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName10" ).focus() : $( "#AadhaarFirstName11" ).focus();
}

handleAadhaarFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName11" ).focus() : $( "#AadhaarFirstName12" ).focus();
}

handleAadhaarFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName12" ).focus() : $( "#AadhaarFirstName13" ).focus();
}

handleAadhaarFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event); 
    (event.target.value === "") ? $( "#AadhaarFirstName13" ).focus() : $( "#AadhaarFirstName14" ).focus(); 
}

handleAadhaarFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName14" ).focus() : $( "#AadhaarFirstName15" ).focus();
}

handleAadhaarFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName15" ).focus() : $( "#AadhaarFirstName16" ).focus();
}

handleAadhaarFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName16" ).focus() : $( "#AadhaarFirstName17" ).focus();
}

handleAadhaarFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName17" ).focus() : $( "#AadhaarFirstName18" ).focus();
}

handleAadhaarFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName18" ).focus() : $( "#AadhaarFirstName19" ).focus();
}

handleAadhaarFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName19" ).focus() : $( "#AadhaarFirstName20" ).focus();
}

handleAadhaarFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName20" ).focus() : $( "#AadhaarFirstName21" ).focus();
}

handleAadhaarFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName21" ).focus() : $( "#AadhaarFirstName22" ).focus();
}

handleAadhaarFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName22" ).focus() : $( "#AadhaarFirstName23" ).focus();
}

handleAadhaarFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName23" ).focus() : $( "#AadhaarFirstName24" ).focus();
}

handleAadhaarFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName24" ).focus() : $( "#AadhaarFirstName25" ).focus();
}

handleAadhaarFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarFirstName(event);  
    (event.target.value === "") ? $( "#AadhaarFirstName25" ).focus() : $( "#AadhaarFirstName25" ).focus();
}

ResetAadhaarFirstNameError = () => {
    $('#AadhaarFirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AadhaarFirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarFirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAadhaarFirstNameError = () => {

    $('#AadhaarFirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AadhaarFirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarFirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleAadhaarMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName1" ).focus() : $( "#AadhaarMiddleName2" ).focus();
 }

handleAadhaarMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName2" ).focus() : $( "#AadhaarMiddleName3" ).focus();
   
}

handleAadhaarMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName3" ).focus() : $( "#AadhaarMiddleName4" ).focus();
}

handleAadhaarMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName4" ).focus() : $( "#AadhaarMiddleName5" ).focus();
}

handleAadhaarMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName5" ).focus() : $( "#AadhaarMiddleName6" ).focus();
}

handleAadhaarMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName6" ).focus() : $( "#AadhaarMiddleName7" ).focus();
}

handleAadhaarMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event); 
    (event.target.value === "") ? $( "#AadhaarMiddleName7" ).focus() : $( "#AadhaarMiddleName8" ).focus(); 
}

handleAadhaarMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);   
    (event.target.value === "") ? $( "#AadhaarMiddleName8" ).focus() : $( "#AadhaarMiddleName9" ).focus();
}

handleAadhaarMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName9" ).focus() : $( "#AadhaarMiddleName10" ).focus();
}

handleAadhaarMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName10" ).focus() : $( "#AadhaarMiddleName11" ).focus();
}

handleAadhaarMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName11" ).focus() : $( "#AadhaarMiddleName12" ).focus();
}

handleAadhaarMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName12" ).focus() : $( "#AadhaarMiddleName13" ).focus();
}

handleAadhaarMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event); 
    (event.target.value === "") ? $( "#AadhaarMiddleName13" ).focus() : $( "#AadhaarMiddleName14" ).focus(); 
}

handleAadhaarMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName14" ).focus() : $( "#AadhaarMiddleName15" ).focus();
}

handleAadhaarMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName15" ).focus() : $( "#AadhaarMiddleName16" ).focus();
}

handleAadhaarMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName16" ).focus() : $( "#AadhaarMiddleName17" ).focus();
}

handleAadhaarMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName17" ).focus() : $( "#AadhaarMiddleName18" ).focus();
}

handleAadhaarMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName18" ).focus() : $( "#AadhaarMiddleName19" ).focus();
}

handleAadhaarMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName19" ).focus() : $( "#AadhaarMiddleName20" ).focus();
}

handleAadhaarMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName20" ).focus() : $( "#AadhaarMiddleName21" ).focus();
}

handleAadhaarMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName21" ).focus() : $( "#AadhaarMiddleName22" ).focus();
}

handleAadhaarMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName22" ).focus() : $( "#AadhaarMiddleName23" ).focus();
}

handleAadhaarMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName23" ).focus() : $( "#AadhaarMiddleName24" ).focus();
}

handleAadhaarMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName24" ).focus() : $( "#AadhaarMiddleName25" ).focus();
}

handleAadhaarMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarMiddleName(event);  
    (event.target.value === "") ? $( "#AadhaarMiddleName25" ).focus() : $( "#AadhaarMiddleName25" ).focus();
}

ResetAadhaarMiddleNameError = () => {
    $('#AadhaarMiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AadhaarMiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarMiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAadhaarMiddleNameError = () => {

    $('#AadhaarMiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AadhaarMiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarMiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 


handleRALastName1 = (event) => {  
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName1" ).focus() : $( "#RALastName2" ).focus();
 }

handleRALastName2 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName2" ).focus() : $( "#RALastName3" ).focus();
   
}

handleRALastName3 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName3" ).focus() : $( "#RALastName4" ).focus();
}

handleRALastName4 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName4" ).focus() : $( "#RALastName5" ).focus();
}

handleRALastName5 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName5" ).focus() : $( "#RALastName6" ).focus();
}

handleRALastName6 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName6" ).focus() : $( "#RALastName7" ).focus();
}

handleRALastName7 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event); 
    (event.target.value === "") ? $( "#RALastName7" ).focus() : $( "#RALastName8" ).focus(); 
}

handleRALastName8 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);   
    (event.target.value === "") ? $( "#RALastName8" ).focus() : $( "#RALastName9" ).focus();
}

handleRALastName9 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName9" ).focus() : $( "#RALastName10" ).focus();
}

handleRALastName10 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName10" ).focus() : $( "#RALastName11" ).focus();
}

handleRALastName11 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName11" ).focus() : $( "#RALastName12" ).focus();
}

handleRALastName12 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName12" ).focus() : $( "#RALastName13" ).focus();
}

handleRALastName13 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event); 
    (event.target.value === "") ? $( "#RALastName13" ).focus() : $( "#RALastName14" ).focus(); 
}

handleRALastName14 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName14" ).focus() : $( "#RALastName15" ).focus();
}

handleRALastName15 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName15" ).focus() : $( "#RALastName16" ).focus();
}

handleRALastName16 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName16" ).focus() : $( "#RALastName17" ).focus();
}

handleRALastName17 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName17" ).focus() : $( "#RALastName18" ).focus();
}

handleRALastName18 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName18" ).focus() : $( "#RALastName19" ).focus();
}

handleRALastName19 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName19" ).focus() : $( "#RALastName20" ).focus();
}

handleRALastName20 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName20" ).focus() : $( "#RALastName21" ).focus();
}

handleRALastName21 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName21" ).focus() : $( "#RALastName22" ).focus();
}

handleRALastName22 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName22" ).focus() : $( "#RALastName23" ).focus();
}

handleRALastName23 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName23" ).focus() : $( "#RALastName24" ).focus();
}

handleRALastName24 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName24" ).focus() : $( "#RALastName25" ).focus();
}

handleRALastName25 = (event) => {    
    this.handleInput(event);
    this.validateRALastName(event);  
    (event.target.value === "") ? $( "#RALastName25" ).focus() : $( "#RALastName25" ).focus();
}

ResetRALastNameError = () => {
    $('#RALastName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RALastName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RALastName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRALastNameError = () => {

    $('#RALastName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RALastName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RALastName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 


handleRAFirstName1 = (event) => {  
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName1" ).focus() : $( "#RAFirstName2" ).focus();
 }

handleRAFirstName2 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName2" ).focus() : $( "#RAFirstName3" ).focus();
   
}

handleRAFirstName3 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName3" ).focus() : $( "#RAFirstName4" ).focus();
}

handleRAFirstName4 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName4" ).focus() : $( "#RAFirstName5" ).focus();
}

handleRAFirstName5 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName5" ).focus() : $( "#RAFirstName6" ).focus();
}

handleRAFirstName6 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName6" ).focus() : $( "#RAFirstName7" ).focus();
}

handleRAFirstName7 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event); 
    (event.target.value === "") ? $( "#RAFirstName7" ).focus() : $( "#RAFirstName8" ).focus(); 
}

handleRAFirstName8 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);   
    (event.target.value === "") ? $( "#RAFirstName8" ).focus() : $( "#RAFirstName9" ).focus();
}

handleRAFirstName9 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName9" ).focus() : $( "#RAFirstName10" ).focus();
}

handleRAFirstName10 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName10" ).focus() : $( "#RAFirstName11" ).focus();
}

handleRAFirstName11 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName11" ).focus() : $( "#RAFirstName12" ).focus();
}

handleRAFirstName12 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName12" ).focus() : $( "#RAFirstName13" ).focus();
}

handleRAFirstName13 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event); 
    (event.target.value === "") ? $( "#RAFirstName13" ).focus() : $( "#RAFirstName14" ).focus(); 
}

handleRAFirstName14 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName14" ).focus() : $( "#RAFirstName15" ).focus();
}

handleRAFirstName15 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName15" ).focus() : $( "#RAFirstName16" ).focus();
}

handleRAFirstName16 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName16" ).focus() : $( "#RAFirstName17" ).focus();
}

handleRAFirstName17 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName17" ).focus() : $( "#RAFirstName18" ).focus();
}

handleRAFirstName18 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName18" ).focus() : $( "#RAFirstName19" ).focus();
}

handleRAFirstName19 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName19" ).focus() : $( "#RAFirstName20" ).focus();
}

handleRAFirstName20 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName20" ).focus() : $( "#RAFirstName21" ).focus();
}

handleRAFirstName21 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName21" ).focus() : $( "#RAFirstName22" ).focus();
}

handleRAFirstName22 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName22" ).focus() : $( "#RAFirstName23" ).focus();
}

handleRAFirstName23 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName23" ).focus() : $( "#RAFirstName24" ).focus();
}

handleRAFirstName24 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName24" ).focus() : $( "#RAFirstName25" ).focus();
}

handleRAFirstName25 = (event) => {    
    this.handleInput(event);
    this.validateRAFirstName(event);  
    (event.target.value === "") ? $( "#RAFirstName25" ).focus() : $( "#RAFirstName25" ).focus();
}

ResetRAFirstNameError = () => {
    $('#RAFirstName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAFirstName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFirstName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRAFirstNameError = () => {

    $('#RAFirstName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAFirstName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFirstName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

 

handleRAMiddleName1 = (event) => {  
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName1" ).focus() : $( "#RAMiddleName2" ).focus();
 }

handleRAMiddleName2 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName2" ).focus() : $( "#RAMiddleName3" ).focus();
   
}

handleRAMiddleName3 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName3" ).focus() : $( "#RAMiddleName4" ).focus();
}

handleRAMiddleName4 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName4" ).focus() : $( "#RAMiddleName5" ).focus();
}

handleRAMiddleName5 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName5" ).focus() : $( "#RAMiddleName6" ).focus();
}

handleRAMiddleName6 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName6" ).focus() : $( "#RAMiddleName7" ).focus();
}

handleRAMiddleName7 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event); 
    (event.target.value === "") ? $( "#RAMiddleName7" ).focus() : $( "#RAMiddleName8" ).focus(); 
}

handleRAMiddleName8 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);   
    (event.target.value === "") ? $( "#RAMiddleName8" ).focus() : $( "#RAMiddleName9" ).focus();
}

handleRAMiddleName9 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName9" ).focus() : $( "#RAMiddleName10" ).focus();
}

handleRAMiddleName10 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName10" ).focus() : $( "#RAMiddleName11" ).focus();
}

handleRAMiddleName11 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName11" ).focus() : $( "#RAMiddleName12" ).focus();
}

handleRAMiddleName12 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName12" ).focus() : $( "#RAMiddleName13" ).focus();
}

handleRAMiddleName13 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event); 
    (event.target.value === "") ? $( "#RAMiddleName13" ).focus() : $( "#RAMiddleName14" ).focus(); 
}

handleRAMiddleName14 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName14" ).focus() : $( "#RAMiddleName15" ).focus();
}

handleRAMiddleName15 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName15" ).focus() : $( "#RAMiddleName16" ).focus();
}

handleRAMiddleName16 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName16" ).focus() : $( "#RAMiddleName17" ).focus();
}

handleRAMiddleName17 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName17" ).focus() : $( "#RAMiddleName18" ).focus();
}

handleRAMiddleName18 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName18" ).focus() : $( "#RAMiddleName19" ).focus();
}

handleRAMiddleName19 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName19" ).focus() : $( "#RAMiddleName20" ).focus();
}

handleRAMiddleName20 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName20" ).focus() : $( "#RAMiddleName21" ).focus();
}

handleRAMiddleName21 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName21" ).focus() : $( "#RAMiddleName22" ).focus();
}

handleRAMiddleName22 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName22" ).focus() : $( "#RAMiddleName23" ).focus();
}

handleRAMiddleName23 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName23" ).focus() : $( "#RAMiddleName24" ).focus();
}

handleRAMiddleName24 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName24" ).focus() : $( "#RAMiddleName25" ).focus();
}

handleRAMiddleName25 = (event) => {    
    this.handleInput(event);
    this.validateRAMiddleName(event);  
    (event.target.value === "") ? $( "#RAMiddleName25" ).focus() : $( "#RAMiddleName25" ).focus();
}

ResetRAMiddleNameError = () => {
    $('#RAMiddleName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAMiddleName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAMiddleName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRAMiddleNameError = () => {

    $('#RAMiddleName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAMiddleName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAMiddleName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleResidenceFlat1 = (event) => {  
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat1" ).focus() : $( "#ResidenceFlat2" ).focus();
 }

handleResidenceFlat2 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat2" ).focus() : $( "#ResidenceFlat3" ).focus();
   
}

handleResidenceFlat3 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat3" ).focus() : $( "#ResidenceFlat4" ).focus();
}

handleResidenceFlat4 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat4" ).focus() : $( "#ResidenceFlat5" ).focus();
}

handleResidenceFlat5 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat5" ).focus() : $( "#ResidenceFlat6" ).focus();
}

handleResidenceFlat6 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat6" ).focus() : $( "#ResidenceFlat7" ).focus();
}

handleResidenceFlat7 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event); 
    (event.target.value === "") ? $( "#ResidenceFlat7" ).focus() : $( "#ResidenceFlat8" ).focus(); 
}

handleResidenceFlat8 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);   
    (event.target.value === "") ? $( "#ResidenceFlat8" ).focus() : $( "#ResidenceFlat9" ).focus();
}

handleResidenceFlat9 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat9" ).focus() : $( "#ResidenceFlat10" ).focus();
}

handleResidenceFlat10 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat10" ).focus() : $( "#ResidenceFlat11" ).focus();
}

handleResidenceFlat11 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat11" ).focus() : $( "#ResidenceFlat12" ).focus();
}

handleResidenceFlat12 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat12" ).focus() : $( "#ResidenceFlat13" ).focus();
}

handleResidenceFlat13 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event); 
    (event.target.value === "") ? $( "#ResidenceFlat13" ).focus() : $( "#ResidenceFlat14" ).focus(); 
}

handleResidenceFlat14 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat14" ).focus() : $( "#ResidenceFlat15" ).focus();
}

handleResidenceFlat15 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat15" ).focus() : $( "#ResidenceFlat16" ).focus();
}

handleResidenceFlat16 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat16" ).focus() : $( "#ResidenceFlat17" ).focus();
}

handleResidenceFlat17 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat17" ).focus() : $( "#ResidenceFlat18" ).focus();
}

handleResidenceFlat18 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat18" ).focus() : $( "#ResidenceFlat19" ).focus();
}

handleResidenceFlat19 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat19" ).focus() : $( "#ResidenceFlat20" ).focus();
}

handleResidenceFlat20 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat20" ).focus() : $( "#ResidenceFlat21" ).focus();
}

handleResidenceFlat21 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat21" ).focus() : $( "#ResidenceFlat22" ).focus();
}

handleResidenceFlat22 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat22" ).focus() : $( "#ResidenceFlat23" ).focus();
}

handleResidenceFlat23 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat23" ).focus() : $( "#ResidenceFlat24" ).focus();
}

handleResidenceFlat24 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat24" ).focus() : $( "#ResidenceFlat25" ).focus();
}

handleResidenceFlat25 = (event) => {    
    this.handleInput(event);
    this.validateResidenceFlat(event);  
    (event.target.value === "") ? $( "#ResidenceFlat25" ).focus() : $( "#ResidenceFlat25" ).focus();
}

ResetResidenceFlatError = () => {
    $('#ResidenceFlat1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidenceFlat2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceFlat25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightResidenceFlatError = () => {

    $('#ResidenceFlat1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidenceFlat2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceFlat25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleResidencePremises1 = (event) => {  
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises1" ).focus() : $( "#ResidencePremises2" ).focus();
 }

handleResidencePremises2 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises2" ).focus() : $( "#ResidencePremises3" ).focus();
   
}

handleResidencePremises3 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises3" ).focus() : $( "#ResidencePremises4" ).focus();
}

handleResidencePremises4 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises4" ).focus() : $( "#ResidencePremises5" ).focus();
}

handleResidencePremises5 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises5" ).focus() : $( "#ResidencePremises6" ).focus();
}

handleResidencePremises6 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises6" ).focus() : $( "#ResidencePremises7" ).focus();
}

handleResidencePremises7 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event); 
    (event.target.value === "") ? $( "#ResidencePremises7" ).focus() : $( "#ResidencePremises8" ).focus(); 
}

handleResidencePremises8 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);   
    (event.target.value === "") ? $( "#ResidencePremises8" ).focus() : $( "#ResidencePremises9" ).focus();
}

handleResidencePremises9 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises9" ).focus() : $( "#ResidencePremises10" ).focus();
}

handleResidencePremises10 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises10" ).focus() : $( "#ResidencePremises11" ).focus();
}

handleResidencePremises11 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises11" ).focus() : $( "#ResidencePremises12" ).focus();
}

handleResidencePremises12 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises12" ).focus() : $( "#ResidencePremises13" ).focus();
}

handleResidencePremises13 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event); 
    (event.target.value === "") ? $( "#ResidencePremises13" ).focus() : $( "#ResidencePremises14" ).focus(); 
}

handleResidencePremises14 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises14" ).focus() : $( "#ResidencePremises15" ).focus();
}

handleResidencePremises15 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises15" ).focus() : $( "#ResidencePremises16" ).focus();
}

handleResidencePremises16 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises16" ).focus() : $( "#ResidencePremises17" ).focus();
}

handleResidencePremises17 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises17" ).focus() : $( "#ResidencePremises18" ).focus();
}

handleResidencePremises18 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises18" ).focus() : $( "#ResidencePremises19" ).focus();
}

handleResidencePremises19 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises19" ).focus() : $( "#ResidencePremises20" ).focus();
}

handleResidencePremises20 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises20" ).focus() : $( "#ResidencePremises21" ).focus();
}

handleResidencePremises21 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises21" ).focus() : $( "#ResidencePremises22" ).focus();
}

handleResidencePremises22 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises22" ).focus() : $( "#ResidencePremises23" ).focus();
}

handleResidencePremises23 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises23" ).focus() : $( "#ResidencePremises24" ).focus();
}

handleResidencePremises24 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises24" ).focus() : $( "#ResidencePremises25" ).focus();
}

handleResidencePremises25 = (event) => {    
    this.handleInput(event);
    this.validateResidencePremises(event);  
    (event.target.value === "") ? $( "#ResidencePremises25" ).focus() : $( "#ResidencePremises25" ).focus();
}


ResetResidencePremisesError = () => {
    $('#ResidencePremises1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidencePremises2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidencePremises25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightResidencePremisesError = () => {

    $('#ResidencePremises1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidencePremises2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidencePremises25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleResidenceRoad1 = (event) => {  
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad1" ).focus() : $( "#ResidenceRoad2" ).focus();
 }

handleResidenceRoad2 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad2" ).focus() : $( "#ResidenceRoad3" ).focus();
   
}

handleResidenceRoad3 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad3" ).focus() : $( "#ResidenceRoad4" ).focus();
}

handleResidenceRoad4 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad4" ).focus() : $( "#ResidenceRoad5" ).focus();
}

handleResidenceRoad5 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad5" ).focus() : $( "#ResidenceRoad6" ).focus();
}

handleResidenceRoad6 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad6" ).focus() : $( "#ResidenceRoad7" ).focus();
}

handleResidenceRoad7 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event); 
    (event.target.value === "") ? $( "#ResidenceRoad7" ).focus() : $( "#ResidenceRoad8" ).focus(); 
}

handleResidenceRoad8 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);   
    (event.target.value === "") ? $( "#ResidenceRoad8" ).focus() : $( "#ResidenceRoad9" ).focus();
}

handleResidenceRoad9 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad9" ).focus() : $( "#ResidenceRoad10" ).focus();
}

handleResidenceRoad10 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad10" ).focus() : $( "#ResidenceRoad11" ).focus();
}

handleResidenceRoad11 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad11" ).focus() : $( "#ResidenceRoad12" ).focus();
}

handleResidenceRoad12 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad12" ).focus() : $( "#ResidenceRoad13" ).focus();
}

handleResidenceRoad13 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event); 
    (event.target.value === "") ? $( "#ResidenceRoad13" ).focus() : $( "#ResidenceRoad14" ).focus(); 
}

handleResidenceRoad14 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad14" ).focus() : $( "#ResidenceRoad15" ).focus();
}

handleResidenceRoad15 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad15" ).focus() : $( "#ResidenceRoad16" ).focus();
}

handleResidenceRoad16 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad16" ).focus() : $( "#ResidenceRoad17" ).focus();
}

handleResidenceRoad17 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad17" ).focus() : $( "#ResidenceRoad18" ).focus();
}

handleResidenceRoad18 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad18" ).focus() : $( "#ResidenceRoad19" ).focus();
}

handleResidenceRoad19 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad19" ).focus() : $( "#ResidenceRoad20" ).focus();
}

handleResidenceRoad20 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad20" ).focus() : $( "#ResidenceRoad21" ).focus();
}

handleResidenceRoad21 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad21" ).focus() : $( "#ResidenceRoad22" ).focus();
}

handleResidenceRoad22 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad22" ).focus() : $( "#ResidenceRoad23" ).focus();
}

handleResidenceRoad23 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad23" ).focus() : $( "#ResidenceRoad24" ).focus();
}

handleResidenceRoad24 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad24" ).focus() : $( "#ResidenceRoad25" ).focus();
}

handleResidenceRoad25 = (event) => {    
    this.handleInput(event);
    this.validateResidenceRoad(event);  
    (event.target.value === "") ? $( "#ResidenceRoad25" ).focus() : $( "#ResidenceRoad25" ).focus();
}

ResetResidenceRoadError = () => {
    $('#ResidenceRoad1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidenceRoad2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceRoad25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightResidenceRoadError = () => {

    $('#ResidenceRoad1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidenceRoad2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceRoad25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleResidenceArea1 = (event) => {  
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea1" ).focus() : $( "#ResidenceArea2" ).focus();
 }

handleResidenceArea2 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea2" ).focus() : $( "#ResidenceArea3" ).focus();
   
}

handleResidenceArea3 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea3" ).focus() : $( "#ResidenceArea4" ).focus();
}

handleResidenceArea4 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea4" ).focus() : $( "#ResidenceArea5" ).focus();
}

handleResidenceArea5 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea5" ).focus() : $( "#ResidenceArea6" ).focus();
}

handleResidenceArea6 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea6" ).focus() : $( "#ResidenceArea7" ).focus();
}

handleResidenceArea7 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event); 
    (event.target.value === "") ? $( "#ResidenceArea7" ).focus() : $( "#ResidenceArea8" ).focus(); 
}

handleResidenceArea8 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);   
    (event.target.value === "") ? $( "#ResidenceArea8" ).focus() : $( "#ResidenceArea9" ).focus();
}

handleResidenceArea9 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea9" ).focus() : $( "#ResidenceArea10" ).focus();
}

handleResidenceArea10 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea10" ).focus() : $( "#ResidenceArea11" ).focus();
}

handleResidenceArea11 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea11" ).focus() : $( "#ResidenceArea12" ).focus();
}

handleResidenceArea12 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea12" ).focus() : $( "#ResidenceArea13" ).focus();
}

handleResidenceArea13 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event); 
    (event.target.value === "") ? $( "#ResidenceArea13" ).focus() : $( "#ResidenceArea14" ).focus(); 
}

handleResidenceArea14 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea14" ).focus() : $( "#ResidenceArea15" ).focus();
}

handleResidenceArea15 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea15" ).focus() : $( "#ResidenceArea16" ).focus();
}

handleResidenceArea16 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea16" ).focus() : $( "#ResidenceArea17" ).focus();
}

handleResidenceArea17 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea17" ).focus() : $( "#ResidenceArea18" ).focus();
}

handleResidenceArea18 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea18" ).focus() : $( "#ResidenceArea19" ).focus();
}

handleResidenceArea19 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea19" ).focus() : $( "#ResidenceArea20" ).focus();
}

handleResidenceArea20 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea20" ).focus() : $( "#ResidenceArea21" ).focus();
}

handleResidenceArea21 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea21" ).focus() : $( "#ResidenceArea22" ).focus();
}

handleResidenceArea22 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea22" ).focus() : $( "#ResidenceArea23" ).focus();
}

handleResidenceArea23 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea23" ).focus() : $( "#ResidenceArea24" ).focus();
}

handleResidenceArea24 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea24" ).focus() : $( "#ResidenceArea25" ).focus();
}

handleResidenceArea25 = (event) => {    
    this.handleInput(event);
    this.validateResidenceArea(event);  
    (event.target.value === "") ? $( "#ResidenceArea25" ).focus() : $( "#ResidenceArea25" ).focus();
}

ResetResidenceAreaError = () => {
    $('#ResidenceArea1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidenceArea2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceArea25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightResidenceAreaError = () => {

    $('#ResidenceArea1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidenceArea2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceArea25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleResidenceTown1 = (event) => {  
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown1" ).focus() : $( "#ResidenceTown2" ).focus();
 }

handleResidenceTown2 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown2" ).focus() : $( "#ResidenceTown3" ).focus();
   
}

handleResidenceTown3 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown3" ).focus() : $( "#ResidenceTown4" ).focus();
}

handleResidenceTown4 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown4" ).focus() : $( "#ResidenceTown5" ).focus();
}

handleResidenceTown5 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown5" ).focus() : $( "#ResidenceTown6" ).focus();
}

handleResidenceTown6 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown6" ).focus() : $( "#ResidenceTown7" ).focus();
}

handleResidenceTown7 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event); 
    (event.target.value === "") ? $( "#ResidenceTown7" ).focus() : $( "#ResidenceTown8" ).focus(); 
}

handleResidenceTown8 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);   
    (event.target.value === "") ? $( "#ResidenceTown8" ).focus() : $( "#ResidenceTown9" ).focus();
}

handleResidenceTown9 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown9" ).focus() : $( "#ResidenceTown10" ).focus();
}

handleResidenceTown10 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown10" ).focus() : $( "#ResidenceTown11" ).focus();
}

handleResidenceTown11 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown11" ).focus() : $( "#ResidenceTown12" ).focus();
}

handleResidenceTown12 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown12" ).focus() : $( "#ResidenceTown13" ).focus();
}

handleResidenceTown13 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event); 
    (event.target.value === "") ? $( "#ResidenceTown13" ).focus() : $( "#ResidenceTown14" ).focus(); 
}

handleResidenceTown14 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown14" ).focus() : $( "#ResidenceTown15" ).focus();
}

handleResidenceTown15 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown15" ).focus() : $( "#ResidenceTown16" ).focus();
}

handleResidenceTown16 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown16" ).focus() : $( "#ResidenceTown17" ).focus();
}

handleResidenceTown17 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown17" ).focus() : $( "#ResidenceTown18" ).focus();
}

handleResidenceTown18 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown18" ).focus() : $( "#ResidenceTown19" ).focus();
}

handleResidenceTown19 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown19" ).focus() : $( "#ResidenceTown20" ).focus();
}

handleResidenceTown20 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown20" ).focus() : $( "#ResidenceTown21" ).focus();
}

handleResidenceTown21 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown21" ).focus() : $( "#ResidenceTown22" ).focus();
}

handleResidenceTown22 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown22" ).focus() : $( "#ResidenceTown23" ).focus();
}

handleResidenceTown23 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown23" ).focus() : $( "#ResidenceTown24" ).focus();
}

handleResidenceTown24 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown24" ).focus() : $( "#ResidenceTown25" ).focus();
}

handleResidenceTown25 = (event) => {    
    this.handleInput(event);
    this.validateResidenceTown(event);  
    (event.target.value === "") ? $( "#ResidenceTown25" ).focus() : $( "#ResidenceTown25" ).focus();
}

ResetResidenceTownError = () => {
    $('#ResidenceTown1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidenceTown2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#ResidenceTown25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightResidenceTownError = () => {

    $('#ResidenceTown1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidenceTown2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#ResidenceTown25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleOfficeName1 = (event) => {  
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName1" ).focus() : $( "#OfficeName2" ).focus();
 }

handleOfficeName2 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName2" ).focus() : $( "#OfficeName3" ).focus();
   
}

handleOfficeName3 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName3" ).focus() : $( "#OfficeName4" ).focus();
}

handleOfficeName4 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName4" ).focus() : $( "#OfficeName5" ).focus();
}

handleOfficeName5 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName5" ).focus() : $( "#OfficeName6" ).focus();
}

handleOfficeName6 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName6" ).focus() : $( "#OfficeName7" ).focus();
}

handleOfficeName7 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event); 
    (event.target.value === "") ? $( "#OfficeName7" ).focus() : $( "#OfficeName8" ).focus(); 
}

handleOfficeName8 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);   
    (event.target.value === "") ? $( "#OfficeName8" ).focus() : $( "#OfficeName9" ).focus();
}

handleOfficeName9 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName9" ).focus() : $( "#OfficeName10" ).focus();
}

handleOfficeName10 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName10" ).focus() : $( "#OfficeName11" ).focus();
}

handleOfficeName11 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName11" ).focus() : $( "#OfficeName12" ).focus();
}

handleOfficeName12 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName12" ).focus() : $( "#OfficeName13" ).focus();
}

handleOfficeName13 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event); 
    (event.target.value === "") ? $( "#OfficeName13" ).focus() : $( "#OfficeName14" ).focus(); 
}

handleOfficeName14 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName14" ).focus() : $( "#OfficeName15" ).focus();
}

handleOfficeName15 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName15" ).focus() : $( "#OfficeName16" ).focus();
}

handleOfficeName16 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName16" ).focus() : $( "#OfficeName17" ).focus();
}

handleOfficeName17 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName17" ).focus() : $( "#OfficeName18" ).focus();
}

handleOfficeName18 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName18" ).focus() : $( "#OfficeName19" ).focus();
}

handleOfficeName19 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName19" ).focus() : $( "#OfficeName20" ).focus();
}

handleOfficeName20 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName20" ).focus() : $( "#OfficeName21" ).focus();
}

handleOfficeName21 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName21" ).focus() : $( "#OfficeName22" ).focus();
}

handleOfficeName22 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName22" ).focus() : $( "#OfficeName23" ).focus();
}

handleOfficeName23 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName23" ).focus() : $( "#OfficeName24" ).focus();
}

handleOfficeName24 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName24" ).focus() : $( "#OfficeName25" ).focus();
}

handleOfficeName25 = (event) => {    
    this.handleInput(event);
    this.validateOfficeName(event);  
    (event.target.value === "") ? $( "#OfficeName25" ).focus() : $( "#OfficeName25" ).focus();
}

ResetOfficeNameError = () => {
    $('#OfficeName1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficeName2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeName25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficeNameError = () => {

    $('#OfficeName1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficeName2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeName25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleOfficeFlat1 = (event) => {  
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (this.state.data.OfficeFlat1 === "") ? $( "#OfficeFlat1" ).focus() : $( "#OfficeFlat2" ).focus();
 }

handleOfficeFlat2 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (this.state.data.OfficeFlat2 === "") ? $( "#OfficeFlat2" ).focus() : $( "#OfficeFlat3" ).focus();
   
}

handleOfficeFlat3 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (this.state.data.OfficeFlat3 === "") ? $( "#OfficeFlat3" ).focus() : $( "#OfficeFlat4" ).focus();
}

handleOfficeFlat4 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat4" ).focus() : $( "#OfficeFlat5" ).focus();
}

handleOfficeFlat5 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat5" ).focus() : $( "#OfficeFlat6" ).focus();
}

handleOfficeFlat6 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat6" ).focus() : $( "#OfficeFlat7" ).focus();
}

handleOfficeFlat7 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event); 
    (event.target.value === "") ? $( "#OfficeFlat7" ).focus() : $( "#OfficeFlat8" ).focus(); 
}

handleOfficeFlat8 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);   
    (event.target.value === "") ? $( "#OfficeFlat8" ).focus() : $( "#OfficeFlat9" ).focus();
}

handleOfficeFlat9 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat9" ).focus() : $( "#OfficeFlat10" ).focus();
}

handleOfficeFlat10 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat10" ).focus() : $( "#OfficeFlat11" ).focus();
}

handleOfficeFlat11 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat11" ).focus() : $( "#OfficeFlat12" ).focus();
}

handleOfficeFlat12 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat12" ).focus() : $( "#OfficeFlat13" ).focus();
}

handleOfficeFlat13 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event); 
    (event.target.value === "") ? $( "#OfficeFlat13" ).focus() : $( "#OfficeFlat14" ).focus(); 
}

handleOfficeFlat14 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat14" ).focus() : $( "#OfficeFlat15" ).focus();
}

handleOfficeFlat15 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat15" ).focus() : $( "#OfficeFlat16" ).focus();
}

handleOfficeFlat16 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat16" ).focus() : $( "#OfficeFlat17" ).focus();
}

handleOfficeFlat17 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat17" ).focus() : $( "#OfficeFlat18" ).focus();
}

handleOfficeFlat18 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat18" ).focus() : $( "#OfficeFlat19" ).focus();
}

handleOfficeFlat19 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat19" ).focus() : $( "#OfficeFlat20" ).focus();
}

handleOfficeFlat20 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat20" ).focus() : $( "#OfficeFlat21" ).focus();
}

handleOfficeFlat21 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat21" ).focus() : $( "#OfficeFlat22" ).focus();
}

handleOfficeFlat22 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat22" ).focus() : $( "#OfficeFlat23" ).focus();
}

handleOfficeFlat23 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat23" ).focus() : $( "#OfficeFlat24" ).focus();
}

handleOfficeFlat24 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat24" ).focus() : $( "#OfficeFlat25" ).focus();
}

handleOfficeFlat25 = (event) => {    
    this.handleInput(event);
    this.validateOfficeFlat(event);  
    (event.target.value === "") ? $( "#OfficeFlat25" ).focus() : $( "#OfficeFlat25" ).focus();
}

ResetOfficeFlatError = () => {
    $('#OfficeFlat1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficeFlat2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeFlat25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficeFlatError = () => {

    $('#OfficeFlat1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficeFlat2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeFlat25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleOfficePremises1 = (event) => {  
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises1" ).focus() : $( "#OfficePremises2" ).focus();
 }

handleOfficePremises2 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises2" ).focus() : $( "#OfficePremises3" ).focus();
   
}

handleOfficePremises3 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises3" ).focus() : $( "#OfficePremises4" ).focus();
}

handleOfficePremises4 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises4" ).focus() : $( "#OfficePremises5" ).focus();
}

handleOfficePremises5 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises5" ).focus() : $( "#OfficePremises6" ).focus();
}

handleOfficePremises6 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises6" ).focus() : $( "#OfficePremises7" ).focus();
}

handleOfficePremises7 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event); 
    (event.target.value === "") ? $( "#OfficePremises7" ).focus() : $( "#OfficePremises8" ).focus(); 
}

handleOfficePremises8 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);   
    (event.target.value === "") ? $( "#OfficePremises8" ).focus() : $( "#OfficePremises9" ).focus();
}

handleOfficePremises9 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises9" ).focus() : $( "#OfficePremises10" ).focus();
}

handleOfficePremises10 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises10" ).focus() : $( "#OfficePremises11" ).focus();
}

handleOfficePremises11 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises11" ).focus() : $( "#OfficePremises12" ).focus();
}

handleOfficePremises12 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises12" ).focus() : $( "#OfficePremises13" ).focus();
}

handleOfficePremises13 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event); 
    (event.target.value === "") ? $( "#OfficePremises13" ).focus() : $( "#OfficePremises14" ).focus(); 
}

handleOfficePremises14 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises14" ).focus() : $( "#OfficePremises15" ).focus();
}

handleOfficePremises15 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises15" ).focus() : $( "#OfficePremises16" ).focus();
}

handleOfficePremises16 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises16" ).focus() : $( "#OfficePremises17" ).focus();
}

handleOfficePremises17 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises17" ).focus() : $( "#OfficePremises18" ).focus();
}

handleOfficePremises18 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises18" ).focus() : $( "#OfficePremises19" ).focus();
}

handleOfficePremises19 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises19" ).focus() : $( "#OfficePremises20" ).focus();
}

handleOfficePremises20 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises20" ).focus() : $( "#OfficePremises21" ).focus();
}

handleOfficePremises21 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises21" ).focus() : $( "#OfficePremises22" ).focus();
}

handleOfficePremises22 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises22" ).focus() : $( "#OfficePremises23" ).focus();
}

handleOfficePremises23 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises23" ).focus() : $( "#OfficePremises24" ).focus();
}

handleOfficePremises24 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises24" ).focus() : $( "#OfficePremises25" ).focus();
}

handleOfficePremises25 = (event) => {    
    this.handleInput(event);
    this.validateOfficePremises(event);  
    (event.target.value === "") ? $( "#OfficePremises25" ).focus() : $( "#OfficePremises25" ).focus();
}

ResetOfficePremisesError = () => {
    $('#OfficePremises1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficePremises2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises15').css({'border-top-color': '',  'border-bottom-color': ''})
    $('#OfficePremises16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficePremises25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficePremisesError = () => {

    $('#OfficePremises1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficePremises2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficePremises25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleOfficeRoad1 = (event) => {  
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad1" ).focus() : $( "#OfficeRoad2" ).focus();
 }

handleOfficeRoad2 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad2" ).focus() : $( "#OfficeRoad3" ).focus();
   
}

handleOfficeRoad3 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad3" ).focus() : $( "#OfficeRoad4" ).focus();
}

handleOfficeRoad4 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad4" ).focus() : $( "#OfficeRoad5" ).focus();
}

handleOfficeRoad5 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad5" ).focus() : $( "#OfficeRoad6" ).focus();
}

handleOfficeRoad6 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad6" ).focus() : $( "#OfficeRoad7" ).focus();
}

handleOfficeRoad7 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event); 
    (event.target.value === "") ? $( "#OfficeRoad7" ).focus() : $( "#OfficeRoad8" ).focus(); 
}

handleOfficeRoad8 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);   
    (event.target.value === "") ? $( "#OfficeRoad8" ).focus() : $( "#OfficeRoad9" ).focus();
}

handleOfficeRoad9 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad9" ).focus() : $( "#OfficeRoad10" ).focus();
}

handleOfficeRoad10 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad10" ).focus() : $( "#OfficeRoad11" ).focus();
}

handleOfficeRoad11 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad11" ).focus() : $( "#OfficeRoad12" ).focus();
}

handleOfficeRoad12 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad12" ).focus() : $( "#OfficeRoad13" ).focus();
}

handleOfficeRoad13 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event); 
    (event.target.value === "") ? $( "#OfficeRoad13" ).focus() : $( "#OfficeRoad14" ).focus(); 
}

handleOfficeRoad14 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad14" ).focus() : $( "#OfficeRoad15" ).focus();
}

handleOfficeRoad15 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad15" ).focus() : $( "#OfficeRoad16" ).focus();
}

handleOfficeRoad16 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad16" ).focus() : $( "#OfficeRoad17" ).focus();
}

handleOfficeRoad17 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad17" ).focus() : $( "#OfficeRoad18" ).focus();
}

handleOfficeRoad18 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad18" ).focus() : $( "#OfficeRoad19" ).focus();
}

handleOfficeRoad19 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad19" ).focus() : $( "#OfficeRoad20" ).focus();
}

handleOfficeRoad20 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad20" ).focus() : $( "#OfficeRoad21" ).focus();
}

handleOfficeRoad21 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad21" ).focus() : $( "#OfficeRoad22" ).focus();
}

handleOfficeRoad22 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad22" ).focus() : $( "#OfficeRoad23" ).focus();
}

handleOfficeRoad23 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad23" ).focus() : $( "#OfficeRoad24" ).focus();
}

handleOfficeRoad24 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad24" ).focus() : $( "#OfficeRoad25" ).focus();
}

handleOfficeRoad25 = (event) => {    
    this.handleInput(event);
    this.validateOfficeRoad(event);  
    (event.target.value === "") ? $( "#OfficeRoad25" ).focus() : $( "#OfficeRoad25" ).focus();
}

ResetOfficeRoadError = () => {
    $('#OfficeRoad1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficeRoad2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeRoad25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficeRoadError = () => {

    $('#OfficeRoad1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficeRoad2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeRoad25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleOfficeArea1 = (event) => {  
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea1" ).focus() : $( "#OfficeArea2" ).focus();
 }

handleOfficeArea2 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea2" ).focus() : $( "#OfficeArea3" ).focus();
   
}

handleOfficeArea3 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea3" ).focus() : $( "#OfficeArea4" ).focus();
}

handleOfficeArea4 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea4" ).focus() : $( "#OfficeArea5" ).focus();
}

handleOfficeArea5 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea5" ).focus() : $( "#OfficeArea6" ).focus();
}

handleOfficeArea6 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea6" ).focus() : $( "#OfficeArea7" ).focus();
}

handleOfficeArea7 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event); 
    (event.target.value === "") ? $( "#OfficeArea7" ).focus() : $( "#OfficeArea8" ).focus(); 
}

handleOfficeArea8 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);   
    (event.target.value === "") ? $( "#OfficeArea8" ).focus() : $( "#OfficeArea9" ).focus();
}

handleOfficeArea9 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea9" ).focus() : $( "#OfficeArea10" ).focus();
}

handleOfficeArea10 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea10" ).focus() : $( "#OfficeArea11" ).focus();
}

handleOfficeArea11 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea11" ).focus() : $( "#OfficeArea12" ).focus();
}

handleOfficeArea12 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea12" ).focus() : $( "#OfficeArea13" ).focus();
}

handleOfficeArea13 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event); 
    (event.target.value === "") ? $( "#OfficeArea13" ).focus() : $( "#OfficeArea14" ).focus(); 
}

handleOfficeArea14 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea14" ).focus() : $( "#OfficeArea15" ).focus();
}

handleOfficeArea15 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea15" ).focus() : $( "#OfficeArea16" ).focus();
}

handleOfficeArea16 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea16" ).focus() : $( "#OfficeArea17" ).focus();
}

handleOfficeArea17 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea17" ).focus() : $( "#OfficeArea18" ).focus();
}

handleOfficeArea18 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea18" ).focus() : $( "#OfficeArea19" ).focus();
}

handleOfficeArea19 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea19" ).focus() : $( "#OfficeArea20" ).focus();
}

handleOfficeArea20 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea20" ).focus() : $( "#OfficeArea21" ).focus();
}

handleOfficeArea21 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea21" ).focus() : $( "#OfficeArea22" ).focus();
}

handleOfficeArea22 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea22" ).focus() : $( "#OfficeArea23" ).focus();
}

handleOfficeArea23 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea23" ).focus() : $( "#OfficeArea24" ).focus();
}

handleOfficeArea24 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea24" ).focus() : $( "#OfficeArea25" ).focus();
}

handleOfficeArea25 = (event) => {    
    this.handleInput(event);
    this.validateOfficeArea(event);  
    (event.target.value === "") ? $( "#OfficeArea25" ).focus() : $( "#OfficeArea25" ).focus();
}

ResetOfficeAreaError = () => {
    $('#OfficeArea1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficeArea2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeArea25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficeAreaError = () => {

    $('#OfficeArea1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficeArea2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeArea25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleOfficeTown1 = (event) => {  
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown1" ).focus() : $( "#OfficeTown2" ).focus();
 }

handleOfficeTown2 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown2" ).focus() : $( "#OfficeTown3" ).focus();
   
}

handleOfficeTown3 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown3" ).focus() : $( "#OfficeTown4" ).focus();
}

handleOfficeTown4 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown4" ).focus() : $( "#OfficeTown5" ).focus();
}

handleOfficeTown5 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown5" ).focus() : $( "#OfficeTown6" ).focus();
}

handleOfficeTown6 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown6" ).focus() : $( "#OfficeTown7" ).focus();
}

handleOfficeTown7 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event); 
    (event.target.value === "") ? $( "#OfficeTown7" ).focus() : $( "#OfficeTown8" ).focus(); 
}

handleOfficeTown8 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);   
    (event.target.value === "") ? $( "#OfficeTown8" ).focus() : $( "#OfficeTown9" ).focus();
}

handleOfficeTown9 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown9" ).focus() : $( "#OfficeTown10" ).focus();
}

handleOfficeTown10 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown10" ).focus() : $( "#OfficeTown11" ).focus();
}

handleOfficeTown11 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown11" ).focus() : $( "#OfficeTown12" ).focus();
}

handleOfficeTown12 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown12" ).focus() : $( "#OfficeTown13" ).focus();
}

handleOfficeTown13 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event); 
    (event.target.value === "") ? $( "#OfficeTown13" ).focus() : $( "#OfficeTown14" ).focus(); 
}

handleOfficeTown14 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown14" ).focus() : $( "#OfficeTown15" ).focus();
}

handleOfficeTown15 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown15" ).focus() : $( "#OfficeTown16" ).focus();
}

handleOfficeTown16 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown16" ).focus() : $( "#OfficeTown17" ).focus();
}

handleOfficeTown17 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown17" ).focus() : $( "#OfficeTown18" ).focus();
}

handleOfficeTown18 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown18" ).focus() : $( "#OfficeTown19" ).focus();
}

handleOfficeTown19 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown19" ).focus() : $( "#OfficeTown20" ).focus();
}

handleOfficeTown20 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown20" ).focus() : $( "#OfficeTown21" ).focus();
}

handleOfficeTown21 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown21" ).focus() : $( "#OfficeTown22" ).focus();
}

handleOfficeTown22 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown22" ).focus() : $( "#OfficeTown23" ).focus();
}

handleOfficeTown23 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown23" ).focus() : $( "#OfficeTown24" ).focus();
}

handleOfficeTown24 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown24" ).focus() : $( "#OfficeTown25" ).focus();
}

handleOfficeTown25 = (event) => {    
    this.handleInput(event);
    this.validateOfficeTown(event);  
    (event.target.value === "") ? $( "#OfficeTown25" ).focus() : $( "#OfficeTown25" ).focus();
}

ResetOfficeTownError = () => {
    $('#OfficeTown1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficeTown2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#OfficeTown25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightOfficeTownError = () => {

    $('#OfficeTown1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficeTown2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#OfficeTown25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleRAFlat1 = (event) => {  
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat1" ).focus() : $( "#RAFlat2" ).focus();
 }

handleRAFlat2 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat2" ).focus() : $( "#RAFlat3" ).focus();
   
}

handleRAFlat3 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value=== "") ? $( "#RAFlat3" ).focus() : $( "#RAFlat4" ).focus();
}

handleRAFlat4 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat4" ).focus() : $( "#RAFlat5" ).focus();
}

handleRAFlat5 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat5" ).focus() : $( "#RAFlat6" ).focus();
}

handleRAFlat6 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat6" ).focus() : $( "#RAFlat7" ).focus();
}

handleRAFlat7 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event); 
    (event.target.value === "") ? $( "#RAFlat7" ).focus() : $( "#RAFlat8" ).focus(); 
}

handleRAFlat8 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);   
    (event.target.value === "") ? $( "#RAFlat8" ).focus() : $( "#RAFlat9" ).focus();
}

handleRAFlat9 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat9" ).focus() : $( "#RAFlat10" ).focus();
}

handleRAFlat10 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat10" ).focus() : $( "#RAFlat11" ).focus();
}

handleRAFlat11 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat11" ).focus() : $( "#RAFlat12" ).focus();
}

handleRAFlat12 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat12" ).focus() : $( "#RAFlat13" ).focus();
}

handleRAFlat13 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event); 
    (event.target.value === "") ? $( "#RAFlat13" ).focus() : $( "#RAFlat14" ).focus(); 
}

handleRAFlat14 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat14" ).focus() : $( "#RAFlat15" ).focus();
}

handleRAFlat15 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat15" ).focus() : $( "#RAFlat16" ).focus();
}

handleRAFlat16 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat16" ).focus() : $( "#RAFlat17" ).focus();
}

handleRAFlat17 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat17" ).focus() : $( "#RAFlat18" ).focus();
}

handleRAFlat18 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat18" ).focus() : $( "#RAFlat19" ).focus();
}

handleRAFlat19 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat19" ).focus() : $( "#RAFlat20" ).focus();
}

handleRAFlat20 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat20" ).focus() : $( "#RAFlat21" ).focus();
}

handleRAFlat21 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat21" ).focus() : $( "#RAFlat22" ).focus();
}

handleRAFlat22 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat22" ).focus() : $( "#RAFlat23" ).focus();
}

handleRAFlat23 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat23" ).focus() : $( "#RAFlat24" ).focus();
}

handleRAFlat24 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat24" ).focus() : $( "#RAFlat25" ).focus();
}

handleRAFlat25 = (event) => {    
    this.handleInput(event);
    this.validateRAFlat(event);  
    (event.target.value === "") ? $( "#RAFlat25" ).focus() : $( "#RAFlat25" ).focus();
}

ResetRAFlatError = () => {
    $('#RAFlat1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAFlat2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAFlat25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRAFlatError = () => {

    $('#RAFlat1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAFlat2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAFlat25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleRAPremises1 = (event) => {  
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value  === "") ? $( "#RAPremises1" ).focus() : $( "#RAPremises2" ).focus();
 }

handleRAPremises2 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value  === "") ? $( "#RAPremises2" ).focus() : $( "#RAPremises3" ).focus();
   
}

handleRAPremises3 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value  === "") ? $( "#RAPremises3" ).focus() : $( "#RAPremises4" ).focus();
}

handleRAPremises4 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises4" ).focus() : $( "#RAPremises5" ).focus();
}

handleRAPremises5 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises5" ).focus() : $( "#RAPremises6" ).focus();
}

handleRAPremises6 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises6" ).focus() : $( "#RAPremises7" ).focus();
}

handleRAPremises7 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event); 
    (event.target.value === "") ? $( "#RAPremises7" ).focus() : $( "#RAPremises8" ).focus(); 
}

handleRAPremises8 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);   
    (event.target.value === "") ? $( "#RAPremises8" ).focus() : $( "#RAPremises9" ).focus();
}

handleRAPremises9 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises9" ).focus() : $( "#RAPremises10" ).focus();
}

handleRAPremises10 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises10" ).focus() : $( "#RAPremises11" ).focus();
}

handleRAPremises11 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises11" ).focus() : $( "#RAPremises12" ).focus();
}

handleRAPremises12 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises12" ).focus() : $( "#RAPremises13" ).focus();
}

handleRAPremises13 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event); 
    (event.target.value === "") ? $( "#RAPremises13" ).focus() : $( "#RAPremises14" ).focus(); 
}

handleRAPremises14 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises14" ).focus() : $( "#RAPremises15" ).focus();
}

handleRAPremises15 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises15" ).focus() : $( "#RAPremises16" ).focus();
}

handleRAPremises16 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises16" ).focus() : $( "#RAPremises17" ).focus();
}

handleRAPremises17 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises17" ).focus() : $( "#RAPremises18" ).focus();
}

handleRAPremises18 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises18" ).focus() : $( "#RAPremises19" ).focus();
}

handleRAPremises19 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises19" ).focus() : $( "#RAPremises20" ).focus();
}

handleRAPremises20 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises20" ).focus() : $( "#RAPremises21" ).focus();
}

handleRAPremises21 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises21" ).focus() : $( "#RAPremises22" ).focus();
}

handleRAPremises22 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises22" ).focus() : $( "#RAPremises23" ).focus();
}

handleRAPremises23 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises23" ).focus() : $( "#RAPremises24" ).focus();
}

handleRAPremises24 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises24" ).focus() : $( "#RAPremises25" ).focus();
}

handleRAPremises25 = (event) => {    
    this.handleInput(event);
    this.validateRAPremises(event);  
    (event.target.value === "") ? $( "#RAPremises25" ).focus() : $( "#RAPremises25" ).focus();
}

ResetRAPremisesError = () => {
    $('#RAPremises1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAPremises2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAPremises25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRAPremisesError = () => {

    $('#RAPremises1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAPremises2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAPremises25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleRARoad1 = (event) => {  
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value  === "") ? $( "#RARoad1" ).focus() : $( "#RARoad2" ).focus();
 }

handleRARoad2 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad2" ).focus() : $( "#RARoad3" ).focus();
   
}

handleRARoad3 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value  === "") ? $( "#RARoad3" ).focus() : $( "#RARoad4" ).focus();
}

handleRARoad4 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad4" ).focus() : $( "#RARoad5" ).focus();
}

handleRARoad5 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad5" ).focus() : $( "#RARoad6" ).focus();
}

handleRARoad6 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad6" ).focus() : $( "#RARoad7" ).focus();
}

handleRARoad7 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event); 
    (event.target.value === "") ? $( "#RARoad7" ).focus() : $( "#RARoad8" ).focus(); 
}

handleRARoad8 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);   
    (event.target.value === "") ? $( "#RARoad8" ).focus() : $( "#RARoad9" ).focus();
}

handleRARoad9 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad9" ).focus() : $( "#RARoad10" ).focus();
}

handleRARoad10 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad10" ).focus() : $( "#RARoad11" ).focus();
}

handleRARoad11 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad11" ).focus() : $( "#RARoad12" ).focus();
}

handleRARoad12 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad12" ).focus() : $( "#RARoad13" ).focus();
}

handleRARoad13 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event); 
    (event.target.value === "") ? $( "#RARoad13" ).focus() : $( "#RARoad14" ).focus(); 
}

handleRARoad14 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad14" ).focus() : $( "#RARoad15" ).focus();
}

handleRARoad15 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad15" ).focus() : $( "#RARoad16" ).focus();
}

handleRARoad16 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad16" ).focus() : $( "#RARoad17" ).focus();
}

handleRARoad17 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad17" ).focus() : $( "#RARoad18" ).focus();
}

handleRARoad18 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad18" ).focus() : $( "#RARoad19" ).focus();
}

handleRARoad19 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad19" ).focus() : $( "#RARoad20" ).focus();
}

handleRARoad20 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad20" ).focus() : $( "#RARoad21" ).focus();
}

handleRARoad21 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad21" ).focus() : $( "#RARoad22" ).focus();
}

handleRARoad22 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad22" ).focus() : $( "#RARoad23" ).focus();
}

handleRARoad23 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad23" ).focus() : $( "#RARoad24" ).focus();
}

handleRARoad24 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad24" ).focus() : $( "#RARoad25" ).focus();
}

handleRARoad25 = (event) => {    
    this.handleInput(event);
    this.validateRARoad(event);  
    (event.target.value === "") ? $( "#RARoad25" ).focus() : $( "#RARoad25" ).focus();
}

ResetRARoadError = () => {
    $('#RARoad1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RARoad2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RARoad25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRARoadError = () => {

    $('#RARoad1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RARoad2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RARoad25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleRAArea1 = (event) => {  
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea1" ).focus() : $( "#RAArea2" ).focus();
 }

handleRAArea2 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value  === "") ? $( "#RAArea2" ).focus() : $( "#RAArea3" ).focus();
   
}

handleRAArea3 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea3" ).focus() : $( "#RAArea4" ).focus();
}

handleRAArea4 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea4" ).focus() : $( "#RAArea5" ).focus();
}

handleRAArea5 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea5" ).focus() : $( "#RAArea6" ).focus();
}

handleRAArea6 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea6" ).focus() : $( "#RAArea7" ).focus();
}

handleRAArea7 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event); 
    (event.target.value === "") ? $( "#RAArea7" ).focus() : $( "#RAArea8" ).focus(); 
}

handleRAArea8 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);   
    (event.target.value === "") ? $( "#RAArea8" ).focus() : $( "#RAArea9" ).focus();
}

handleRAArea9 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea9" ).focus() : $( "#RAArea10" ).focus();
}

handleRAArea10 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea10" ).focus() : $( "#RAArea11" ).focus();
}

handleRAArea11 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea11" ).focus() : $( "#RAArea12" ).focus();
}

handleRAArea12 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea12" ).focus() : $( "#RAArea13" ).focus();
}

handleRAArea13 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event); 
    (event.target.value === "") ? $( "#RAArea13" ).focus() : $( "#RAArea14" ).focus(); 
}

handleRAArea14 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea14" ).focus() : $( "#RAArea15" ).focus();
}

handleRAArea15 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea15" ).focus() : $( "#RAArea16" ).focus();
}

handleRAArea16 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea16" ).focus() : $( "#RAArea17" ).focus();
}

handleRAArea17 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea17" ).focus() : $( "#RAArea18" ).focus();
}

handleRAArea18 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea18" ).focus() : $( "#RAArea19" ).focus();
}

handleRAArea19 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea19" ).focus() : $( "#RAArea20" ).focus();
}

handleRAArea20 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea20" ).focus() : $( "#RAArea21" ).focus();
}

handleRAArea21 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea21" ).focus() : $( "#RAArea22" ).focus();
}

handleRAArea22 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea22" ).focus() : $( "#RAArea23" ).focus();
}

handleRAArea23 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea23" ).focus() : $( "#RAArea24" ).focus();
}

handleRAArea24 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea24" ).focus() : $( "#RAArea25" ).focus();
}

handleRAArea25 = (event) => {    
    this.handleInput(event);
    this.validateRAArea(event);  
    (event.target.value === "") ? $( "#RAArea25" ).focus() : $( "#RAArea25" ).focus();
}

ResetRAAreaError = () => {
    $('#RAArea1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAArea2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RAArea25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRAAreaError = () => {

    $('#RAArea1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAArea2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RAArea25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}

handleRATown1 = (event) => {  
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown1" ).focus() : $( "#RATown2" ).focus();
 }

handleRATown2 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
   (event.target.value === "") ? $( "#RATown2" ).focus() : $( "#RATown3" ).focus();
   
}

handleRATown3 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown3" ).focus() : $( "#RATown4" ).focus();
}

handleRATown4 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown4" ).focus() : $( "#RATown5" ).focus();
}

handleRATown5 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown5" ).focus() : $( "#RATown6" ).focus();
}

handleRATown6 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown6" ).focus() : $( "#RATown7" ).focus();
}

handleRATown7 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event); 
    (event.target.value === "") ? $( "#RATown7" ).focus() : $( "#RATown8" ).focus(); 
}

handleRATown8 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);   
    (event.target.value === "") ? $( "#RATown8" ).focus() : $( "#RATown9" ).focus();
}

handleRATown9 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown9" ).focus() : $( "#RATown10" ).focus();
}

handleRATown10 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown10" ).focus() : $( "#RATown11" ).focus();
}

handleRATown11 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown11" ).focus() : $( "#RATown12" ).focus();
}

handleRATown12 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown12" ).focus() : $( "#RATown13" ).focus();
}

handleRATown13 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event); 
    (event.target.value === "") ? $( "#RATown13" ).focus() : $( "#RATown14" ).focus(); 
}

handleRATown14 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown14" ).focus() : $( "#RATown15" ).focus();
}

handleRATown15 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown15" ).focus() : $( "#RATown16" ).focus();
}

handleRATown16 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown16" ).focus() : $( "#RATown17" ).focus();
}

handleRATown17 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown17" ).focus() : $( "#RATown18" ).focus();
}

handleRATown18 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown18" ).focus() : $( "#RATown19" ).focus();
}

handleRATown19 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown19" ).focus() : $( "#RATown20" ).focus();
}

handleRATown20 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown20" ).focus() : $( "#RATown21" ).focus();
}

handleRATown21 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown21" ).focus() : $( "#RATown22" ).focus();
}

handleRATown22 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown22" ).focus() : $( "#RATown23" ).focus();
}

handleRATown23 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown23" ).focus() : $( "#RATown24" ).focus();
}

handleRATown24 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown24" ).focus() : $( "#RATown25" ).focus();
}

handleRATown25 = (event) => {    
    this.handleInput(event);
    this.validateRATown(event);  
    (event.target.value === "") ? $( "#RATown25" ).focus() : $( "#RATown25" ).focus();
}

ResetRATownError = () => {
    $('#RATown1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RATown2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RATown25').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRATownError = () => {

    $('#RATown1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RATown2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RATown25').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



handleDay1 = (event) => {    
    this.handleInput(event);
    this.validateDay(event);  
    (event.target.value === "") ? $( "#Day1" ).focus() : $( "#Day2" ).focus();
}

handleDay2 = (event) => {    
    this.handleInput(event);
    this.validateDay(event);  
    (event.target.value === "") ? $( "#Day1" ).focus() : $( "#Day2" ).focus();
}

ResetDayError = () => {
    $('#Day1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#Day2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightDayError = () => {

    $('#Day1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#Day2').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



handleMonth1 = (event) => {    
    this.handleInput(event);
    this.validateMonth(event);  
    (event.target.value === "") ? $( "#Month1" ).focus() : $( "#Month2" ).focus();
}

handleMonth2 = (event) => {    
    this.handleInput(event);
    this.validateMonth(event);  
    (event.target.value === "") ? $( "#Month1" ).focus() : $( "#Month2" ).focus();
}

ResetMonthError = () => {
    $('#Month1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#Month2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightMonthError = () => {

    $('#Month1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#Month2').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleYear1 = (event) => {    
    this.handleInput(event);
    this.validateYear(event);  
    (event.target.value === "") ? $( "#Year1" ).focus() : $( "#Year2" ).focus();
}

handleYear2 = (event) => {    
    this.handleInput(event);
    this.validateYear(event);  
    (event.target.value === "") ? $( "#Year2" ).focus() : $( "#Year3" ).focus();
}

handleYear3 = (event) => {    
    this.handleInput(event);
    this.validateYear(event);  
    (event.target.value === "") ? $( "#Year3" ).focus() : $( "#Year4" ).focus();
}

handleYear4 = (event) => {    
    this.handleInput(event);
    this.validateYear(event);  
    (event.target.value === "") ? $( "#Year4" ).focus() : $( "#Year4" ).focus();
}

ResetYearError = () => {
    $('#Year1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#Year2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#Year3').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#Year4').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightYearError = () => {

    $('#Year1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#Year2').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#Year3').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#Year4').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleResidencePincode1 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode1" ).focus() : $( "#ResidencePincode2" ).focus();
}

handleResidencePincode2 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode2" ).focus() : $( "#ResidencePincode3" ).focus();
}

handleResidencePincode3 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode3" ).focus() : $( "#ResidencePincode4" ).focus();
}

handleResidencePincode4 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode4" ).focus() : $( "#ResidencePincode5" ).focus();
}

handleResidencePincode5 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode5" ).focus() : $( "#ResidencePincode6" ).focus();
}

handleResidencePincode6 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode6" ).focus() : $( "#ResidencePincode7" ).focus();
}

handleResidencePincode7 = (event) => {    
    this.handleInput(event);
    this.validateResidencePincode(event);  
    (event.target.value === "") ? $( "#ResidencePincode7" ).focus() : $( "#ResidencePincode7" ).focus();
}

ResetResidencePincodeError = () => {
    $('#ResidencePincode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidencePincode2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#ResidencePincode3').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidencePincode4').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#ResidencePincode5').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#ResidencePincode6').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#ResidencePincode7').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightResidencePincodeError = () => {

    $('#ResidencePincode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#ResidencePincode2').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#ResidencePincode3').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#ResidencePincode4').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#ResidencePincode5').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#ResidencePincode6').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#ResidencePincode7').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



handleOfficePincode1 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode1" ).focus() : $( "#OfficePincode2" ).focus();
}

handleOfficePincode2 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode2" ).focus() : $( "#OfficePincode3" ).focus();
}

handleOfficePincode3 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode3" ).focus() : $( "#OfficePincode4" ).focus();
}

handleOfficePincode4 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode4" ).focus() : $( "#OfficePincode5" ).focus();
}

handleOfficePincode5 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event); 
    (event.target.value === "") ? $( "#OfficePincode5" ).focus() : $( "#OfficePincode6" ).focus();
}

handleOfficePincode6 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode6" ).focus() : $( "#OfficePincode7" ).focus();
}

handleOfficePincode7 = (event) => {    
    this.handleInput(event);
    this.validateOfficePincode(event);  
    (event.target.value === "") ? $( "#OfficePincode7" ).focus() : $( "#OfficePincode7" ).focus();
}

ResetOfficePincodeError = () => {
    $('#OfficePincode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficePincode2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#OfficePincode3').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficePincode4').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#OfficePincode5').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#OfficePincode6').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#OfficePincode7').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightOfficePincodeError = () => {

    $('#OfficePincode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#OfficePincode2').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#OfficePincode3').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#OfficePincode4').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#OfficePincode5').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#OfficePincode6').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#OfficePincode7').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



handleRAPincode1 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode1" ).focus() : $( "#RAPincode2" ).focus();
}

handleRAPincode2 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode2" ).focus() : $( "#RAPincode3" ).focus();
}

handleRAPincode3 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode3" ).focus() : $( "#RAPincode4" ).focus();
}

handleRAPincode4 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode4" ).focus() : $( "#RAPincode5" ).focus();
}

handleRAPincode5 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode5" ).focus() : $( "#RAPincode6" ).focus();
}

handleRAPincode6 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode6" ).focus() : $( "#RAPincode7" ).focus();
}

handleRAPincode7 = (event) => {    
    this.handleInput(event);
    this.validateRAPincode(event);  
    (event.target.value === "") ? $( "#RAPincode7" ).focus() : $( "#RAPincode7" ).focus();
}

ResetRAPincodeError = () => {
    $('#RAPincode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAPincode2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#RAPincode3').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAPincode4').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#RAPincode5').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    $('#RAPincode6').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RAPincode7').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightRAPincodeError = () => {

    $('#RAPincode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RAPincode2').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#RAPincode3').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#RAPincode4').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#RAPincode5').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#RAPincode6').css({'border-top-color': "red", 'border-bottom-color': "red" })
    $('#RAPincode7').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleRegistrationNumber1 = (event) => {  
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (this.state.data.RegistrationNumber1 === "") ? $( "#RegistrationNumber1" ).focus() : $( "#RegistrationNumber2" ).focus();
 }

handleRegistrationNumber2 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (this.state.data.RegistrationNumber2 === "") ? $( "#RegistrationNumber2" ).focus() : $( "#RegistrationNumber3" ).focus();
    $('#RegistrationNumber2').attr('autofocus' , 'true');
   
}

handleRegistrationNumber3 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (this.state.data.RegistrationNumber3 === "") ? $( "#RegistrationNumber3" ).focus() : $( "#RegistrationNumber4" ).focus();
    $('#RegistrationNumber3').attr('autofocus' , 'true');
}

handleRegistrationNumber4 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber4" ).focus() : $( "#RegistrationNumber5" ).focus();
}

handleRegistrationNumber5 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber5" ).focus() : $( "#RegistrationNumber6" ).focus();
}

handleRegistrationNumber6 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber6" ).focus() : $( "#RegistrationNumber7" ).focus();
}

handleRegistrationNumber7 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event); 
    (event.target.value === "") ? $( "#RegistrationNumber7" ).focus() : $( "#RegistrationNumber8" ).focus(); 
}

handleRegistrationNumber8 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);   
    (event.target.value === "") ? $( "#RegistrationNumber8" ).focus() : $( "#RegistrationNumber9" ).focus();
}

handleRegistrationNumber9 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber9" ).focus() : $( "#RegistrationNumber10" ).focus();
}

handleRegistrationNumber10 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber10" ).focus() : $( "#RegistrationNumber11" ).focus();
}

handleRegistrationNumber11 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber11" ).focus() : $( "#RegistrationNumber12" ).focus();
}

handleRegistrationNumber12 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber12" ).focus() : $( "#RegistrationNumber13" ).focus();
}

handleRegistrationNumber13 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event); 
    (event.target.value === "") ? $( "#RegistrationNumber13" ).focus() : $( "#RegistrationNumber14" ).focus(); 
}

handleRegistrationNumber14 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber14" ).focus() : $( "#RegistrationNumber15" ).focus();
}

handleRegistrationNumber15 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber15" ).focus() : $( "#RegistrationNumber16" ).focus();
}

handleRegistrationNumber16 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber16" ).focus() : $( "#RegistrationNumber17" ).focus();
}

handleRegistrationNumber17 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber17" ).focus() : $( "#RegistrationNumber18" ).focus();
}

handleRegistrationNumber18 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber18" ).focus() : $( "#RegistrationNumber19" ).focus();
}

handleRegistrationNumber19 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber19" ).focus() : $( "#RegistrationNumber20" ).focus();
}

handleRegistrationNumber20 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber20" ).focus() : $( "#RegistrationNumber21" ).focus();
}

handleRegistrationNumber21 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber21" ).focus() : $( "#RegistrationNumber22" ).focus();
}

handleRegistrationNumber22 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber22" ).focus() : $( "#RegistrationNumber23" ).focus();
}

handleRegistrationNumber23 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber23" ).focus() : $( "#RegistrationNumber24" ).focus();
}

handleRegistrationNumber24 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber24" ).focus() : $( "#RegistrationNumber25" ).focus();
}

handleRegistrationNumber25 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber25" ).focus() : $( "#RegistrationNumber26" ).focus();
}

handleRegistrationNumber26 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber26" ).focus() : $( "#RegistrationNumber27" ).focus();
}

handleRegistrationNumber27 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber27" ).focus() : $( "#RegistrationNumber28" ).focus();
}

handleRegistrationNumber28 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber28" ).focus() : $( "#RegistrationNumber29" ).focus();
}

handleRegistrationNumber29 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber29" ).focus() : $( "#RegistrationNumber30" ).focus();
}

handleRegistrationNumber30 = (event) => {    
    this.handleInput(event);
    this.validateRegistrationNumber(event);  
    (event.target.value === "") ? $( "#RegistrationNumber30" ).focus() : $( "#RegistrationNumber30" ).focus();
}

 

ResetRegistrationNumberError = () => {
    $('#RegistrationNumber1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#RegistrationNumber2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber25').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber26').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber27').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber28').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber29').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#RegistrationNumber30').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightRegistrationNumberError = () => {

    $('#RegistrationNumber1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#RegistrationNumber2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber25').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber26').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber27').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber28').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber29').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#RegistrationNumber30').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleEnrolmentId1 = (event) => {  
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (this.state.data.EnrolmentId1 === "") ? $( "#EnrolmentId1" ).focus() : $( "#EnrolmentId2" ).focus();
 }

handleEnrolmentId2 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (this.state.data.EnrolmentId2 === "") ? $( "#EnrolmentId2" ).focus() : $( "#EnrolmentId3" ).focus();
    $('#EnrolmentId2').attr('autofocus' , 'true');
   
}

handleEnrolmentId3 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (this.state.data.EnrolmentId3 === "") ? $( "#EnrolmentId3" ).focus() : $( "#EnrolmentId4" ).focus();
    $('#EnrolmentId3').attr('autofocus' , 'true');
}

handleEnrolmentId4 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId4" ).focus() : $( "#EnrolmentId5" ).focus();
}

handleEnrolmentId5 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId5" ).focus() : $( "#EnrolmentId6" ).focus();
}

handleEnrolmentId6 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId6" ).focus() : $( "#EnrolmentId7" ).focus();
}

handleEnrolmentId7 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event); 
    (event.target.value === "") ? $( "#EnrolmentId7" ).focus() : $( "#EnrolmentId8" ).focus(); 
}

handleEnrolmentId8 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);   
    (event.target.value === "") ? $( "#EnrolmentId8" ).focus() : $( "#EnrolmentId9" ).focus();
}

handleEnrolmentId9 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId9" ).focus() : $( "#EnrolmentId10" ).focus();
}

handleEnrolmentId10 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId10" ).focus() : $( "#EnrolmentId11" ).focus();
}

handleEnrolmentId11 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId11" ).focus() : $( "#EnrolmentId12" ).focus();
}

handleEnrolmentId12 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId12" ).focus() : $( "#EnrolmentId13" ).focus();
}

handleEnrolmentId13 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event); 
    (event.target.value === "") ? $( "#EnrolmentId13" ).focus() : $( "#EnrolmentId14" ).focus(); 
}

handleEnrolmentId14 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId14" ).focus() : $( "#EnrolmentId15" ).focus();
}

handleEnrolmentId15 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId15" ).focus() : $( "#EnrolmentId16" ).focus();
}

handleEnrolmentId16 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId16" ).focus() : $( "#EnrolmentId17" ).focus();
}

handleEnrolmentId17 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId17" ).focus() : $( "#EnrolmentId18" ).focus();
}

handleEnrolmentId18 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId18" ).focus() : $( "#EnrolmentId19" ).focus();
}

handleEnrolmentId19 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId19" ).focus() : $( "#EnrolmentId20" ).focus();
}

handleEnrolmentId20 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId20" ).focus() : $( "#EnrolmentId21" ).focus();
}

handleEnrolmentId21 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId21" ).focus() : $( "#EnrolmentId22" ).focus();
}

handleEnrolmentId22 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId22" ).focus() : $( "#EnrolmentId23" ).focus();
}

handleEnrolmentId23 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId23" ).focus() : $( "#EnrolmentId24" ).focus();
}

handleEnrolmentId24 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId24" ).focus() : $( "#EnrolmentId25" ).focus();
}

handleEnrolmentId25 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId25" ).focus() : $( "#EnrolmentId26" ).focus();
}

handleEnrolmentId26 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId26" ).focus() : $( "#EnrolmentId27" ).focus();
}

handleEnrolmentId27 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId27" ).focus() : $( "#EnrolmentId28" ).focus();
}

handleEnrolmentId28 = (event) => {    
    this.handleInput(event);
    this.validateEnrolmentId(event);  
    (event.target.value === "") ? $( "#EnrolmentId28" ).focus() : $( "#EnrolmentId28" ).focus();
}

 
 

ResetEnrolmentIdError = () => {
    $('#EnrolmentId1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#EnrolmentId2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId13').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId14').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId15').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId16').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId17').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId18').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId19').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId20').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId21').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId22').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId23').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId24').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId25').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId26').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId27').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#EnrolmentId28').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightEnrolmentIdError = () => {

    $('#EnrolmentId1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#EnrolmentId2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId13').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId14').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId15').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId16').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId17').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId18').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId19').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId20').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId21').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId22').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId23').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId24').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId25').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId26').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId27').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#EnrolmentId28').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleAadhaarNumber1 = (event) => {  
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (this.state.data.AadhaarNumber1 === "") ? $( "#AadhaarNumber1" ).focus() : $( "#AadhaarNumber2" ).focus();
 }

handleAadhaarNumber2 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (this.state.data.AadhaarNumber2 === "") ? $( "#AadhaarNumber2" ).focus() : $( "#AadhaarNumber3" ).focus();
    $('#AadhaarNumber2').attr('autofocus' , 'true');
   
}

handleAadhaarNumber3 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (this.state.data.AadhaarNumber3 === "") ? $( "#AadhaarNumber3" ).focus() : $( "#AadhaarNumber4" ).focus();
    $('#AadhaarNumber3').attr('autofocus' , 'true');
}

handleAadhaarNumber4 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber4" ).focus() : $( "#AadhaarNumber5" ).focus();
}

handleAadhaarNumber5 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber5" ).focus() : $( "#AadhaarNumber6" ).focus();
}

handleAadhaarNumber6 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber6" ).focus() : $( "#AadhaarNumber7" ).focus();
}

handleAadhaarNumber7 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event); 
    (event.target.value === "") ? $( "#AadhaarNumber7" ).focus() : $( "#AadhaarNumber8" ).focus(); 
}

handleAadhaarNumber8 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);   
    (event.target.value === "") ? $( "#AadhaarNumber8" ).focus() : $( "#AadhaarNumber9" ).focus();
}

handleAadhaarNumber9 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber9" ).focus() : $( "#AadhaarNumber10" ).focus();
}

handleAadhaarNumber10 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber10" ).focus() : $( "#AadhaarNumber11" ).focus();
}

handleAadhaarNumber11 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber11" ).focus() : $( "#AadhaarNumber12" ).focus();
}

handleAadhaarNumber12 = (event) => {    
    this.handleInput(event);
    this.validateAadhaarNumber(event);  
    (event.target.value === "") ? $( "#AadhaarNumber12" ).focus() : $( "#AadhaarNumber12" ).focus();
}

 
 

ResetAadhaarNumberError = () => {
    $('#AadhaarNumber1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#AadhaarNumber2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#AadhaarNumber12').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightAadhaarNumberError = () => {

    $('#AadhaarNumber1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#AadhaarNumber2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#AadhaarNumber12').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handlePhoneNumber1 = (event) => {  
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (this.state.data.PhoneNumber1 === "") ? $( "#PhoneNumber1" ).focus() : $( "#PhoneNumber2" ).focus();
 }

handlePhoneNumber2 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (this.state.data.PhoneNumber2 === "") ? $( "#PhoneNumber2" ).focus() : $( "#PhoneNumber3" ).focus();
    $('#PhoneNumber2').attr('autofocus' , 'true');
   
}

handlePhoneNumber3 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (this.state.data.PhoneNumber3 === "") ? $( "#PhoneNumber3" ).focus() : $( "#PhoneNumber4" ).focus();
    $('#PhoneNumber3').attr('autofocus' , 'true');
}

handlePhoneNumber4 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber4" ).focus() : $( "#PhoneNumber5" ).focus();
}

handlePhoneNumber5 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber5" ).focus() : $( "#PhoneNumber6" ).focus();
}

handlePhoneNumber6 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber6" ).focus() : $( "#PhoneNumber7" ).focus();
}

handlePhoneNumber7 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event); 
    (event.target.value === "") ? $( "#PhoneNumber7" ).focus() : $( "#PhoneNumber8" ).focus(); 
}

handlePhoneNumber8 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);   
    (event.target.value === "") ? $( "#PhoneNumber8" ).focus() : $( "#PhoneNumber9" ).focus();
}

handlePhoneNumber9 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber9" ).focus() : $( "#PhoneNumber10" ).focus();
}

handlePhoneNumber10 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber10" ).focus() : $( "#PhoneNumber11" ).focus();
}

handlePhoneNumber11 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber11" ).focus() : $( "#PhoneNumber12" ).focus();
}

handlePhoneNumber12 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event);  
    (event.target.value === "") ? $( "#PhoneNumber12" ).focus() : $( "#PhoneNumber13" ).focus();
}

handlePhoneNumber13 = (event) => {    
    this.handleInput(event);
    this.validatePhoneNumber(event); 
    (event.target.value === "") ? $( "#PhoneNumber13" ).focus() : $( "#PhoneNumber13" ).focus(); 
}

 
ResetPhoneNumberError = () => {
    $('#PhoneNumber1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#PhoneNumber2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber7').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber8').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber9').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber10').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber11').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber12').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#PhoneNumber13').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightPhoneNumberError = () => {

    $('#PhoneNumber1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#PhoneNumber2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber7').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber8').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber9').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber10').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber11').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber12').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#PhoneNumber13').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



handleStdCode1 = (event) => {  
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode1" ).focus() : $( "#StdCode2" ).focus();
 }

handleStdCode2 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode2" ).focus() : $( "#StdCode3" ).focus();
   
}

handleStdCode3 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode3" ).focus() : $( "#StdCode4" ).focus();
}

handleStdCode4 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode4" ).focus() : $( "#StdCode5" ).focus();
}

handleStdCode5 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode5" ).focus() : $( "#StdCode6" ).focus();
}

handleStdCode6 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event);  
    (event.target.value === "") ? $( "#StdCode6" ).focus() : $( "#StdCode7" ).focus();
}

handleStdCode7 = (event) => {    
    this.handleInput(event);
    this.validateStdCode(event); 
    (event.target.value === "") ? $( "#StdCode7" ).focus() : $( "#StdCode7" ).focus(); 
}
 

 
ResetStdCodeError = () => {
    $('#StdCode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#StdCode2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#StdCode3').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#StdCode4').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#StdCode5').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#StdCode6').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#StdCode7').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightStdCodeError = () => {

    $('#StdCode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#StdCode2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#StdCode3').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#StdCode4').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#StdCode5').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#StdCode6').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#StdCode7').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}


handleCountryCode1 = (event) => {  
    this.handleInput(event);
    this.validateCountryCode(event);  
    (this.state.data.CountryCode1 === "") ? $( "#CountryCode1" ).focus() : $( "#CountryCode2" ).focus();
 }

handleCountryCode2 = (event) => {    
    this.handleInput(event);
    this.validateCountryCode(event);  
    (this.state.data.CountryCode2 === "") ? $( "#CountryCode2" ).focus() : $( "#CountryCode3" ).focus();
   
}

handleCountryCode3 = (event) => {    
    this.handleInput(event);
    this.validateCountryCode(event);  
    (this.state.data.CountryCode3 === "") ? $( "#CountryCode3" ).focus() : $( "#CountryCode3" ).focus();
}

 
ResetCountryCodeError = () => {
    $('#CountryCode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#CountryCode2').css({'border-top-color': '', 'border-bottom-color': ''})
    $('#CountryCode3').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})
    

}

HighlightCountryCodeError = () => {

    $('#CountryCode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#CountryCode2').css({'border-top-color': "red", 'border-bottom-color': "red"})
    $('#CountryCode3').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
}




  async validateLastName(event) {
  
    this.state.data.LastName = this.state.data.LastName1 + this.state.data.LastName2 +
         this.state.data.LastName3 + this.state.data.LastName4 + this.state.data.LastName5 + 
         this.state.data.LastName6 + this.state.data.LastName7 + this.state.data.LastName8 +
         this.state.data.LastName9 + this.state.data.LastName10 + this.state.data.LastName11 + 
         this.state.data.LastName12 + this.state.data.LastName13 + this.state.data.LastName14 + 
         this.state.data.LastName15 + this.state.data.LastName16 + this.state.data.LastName17 + 
         this.state.data.LastName18 + this.state.data.LastName19 + this.state.data.LastName20 +
         this.state.data.LastName21 + this.state.data.LastName22 + this.state.data.LastName23 + 
         this.state.data.LastName24 + this.state.data.LastName25 ;
     
    let val = this.state.data.LastName;
    this.setState({val})

    let errors = this.state.errors;
    let name = "LastName";
    this.setState(errors);
    errors[name] = "";
 
    this.ResetLastNameError();
    
  
    if(this.state.data.LastName === "" || (isNaN(this.state.data.LastName) === false))
    { 

        let errors = this.state.errors;
        let name = "LastName";
        this.setState(errors);
        errors[name] = "*Please enter your LastName"; 

        this.state.isModalEnabled =  false;  
        this.HighlightLastNameError();      
    }
    else if (typeof  this.state.data.LastName !== "undefined") {
        if (!this.state.data.LastName.match(/^[a-zA-Z ]*$/)) {

            let errors = this.state.errors;
            let name = "LastName";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only."; 
     
            this.state.isModalEnabled =  false;
            this.HighlightLastNameError();
        }
    }
    
     
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   }
 
   async validateFirstName(event) {

     this.state.data.FirstName = this.state.data.FirstName1 + this.state.data.FirstName2 +
         this.state.data.FirstName3 + this.state.data.FirstName4 + this.state.data.FirstName5 + 
         this.state.data.FirstName6 + this.state.data.FirstName7 + this.state.data.FirstName8 +
         this.state.data.FirstName9 + this.state.data.FirstName10 + this.state.data.FirstName11 + 
         this.state.data.FirstName12 + this.state.data.FirstName13 + this.state.data.FirstName14 + 
         this.state.data.FirstName15 + this.state.data.FirstName16 + this.state.data.FirstName17 + 
         this.state.data.FirstName18 + this.state.data.FirstName19 + this.state.data.FirstName20 +
         this.state.data.FirstName21 + this.state.data.FirstName22 + this.state.data.FirstName23 + 
         this.state.data.FirstName24 + this.state.data.FirstName25 ;
      
      
         let errors = this.state.errors;
         let name = "FirstName";
         this.setState(errors);
         errors[name] = "";
    this.ResetFirstNameError();
  
    if(this.state.data.FirstName === "" || (isNaN(this.state.data.FirstName) === false))
    {  
        let errors = this.state.errors;
        let name = "FirstName";
        this.setState(errors);
        errors[name] = "*Please enter your Firstname";
        this.state.isModalEnabled =  false;
        this.HighlightFirstNameError();
    }
    else if (typeof  this.state.data.FirstName !== "undefined") {
        if (!this.state.data.FirstName.match(/^[a-zA-Z ]*$/)) {


            let errors = this.state.errors;
            let name = "FirstName";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only.";
            this.state.isModalEnabled =  false;
            this.HighlightFirstNameError();
        }
    }
    
    
     
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 async validateMiddleName(event) {

    this.state.data.MiddleName = this.state.data.MiddleName1 + this.state.data.MiddleName2 +
         this.state.data.MiddleName3 + this.state.data.MiddleName4 + this.state.data.MiddleName5 + 
         this.state.data.MiddleName6 + this.state.data.MiddleName7 + this.state.data.MiddleName8 +
         this.state.data.MiddleName9 + this.state.data.MiddleName10 + this.state.data.MiddleName11 + 
         this.state.data.MiddleName12 + this.state.data.MiddleName13 + this.state.data.MiddleName14 + 
         this.state.data.MiddleName15 + this.state.data.MiddleName16 + this.state.data.MiddleName17 + 
         this.state.data.MiddleName18 + this.state.data.MiddleName19 + this.state.data.MiddleName20 +
         this.state.data.MiddleName21 + this.state.data.MiddleName22 + this.state.data.MiddleName23 + 
         this.state.data.MiddleName24 + this.state.data.MiddleName25 ;
          

         let errors = this.state.errors;
         let name = "MiddleName";
         this.setState(errors);
         errors[name] = "";
        this.ResetMiddleNameError();
    
    if (typeof  this.state.data.MiddleName !== "undefined") {
        if (!this.state.data.MiddleName.match(/^[a-zA-Z ]*$/)) {

            let errors = this.state.errors;
            let name = "MiddleName";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only.";
             
            this.state.isModalEnabled =  false;
            this.HighlightMiddleNameError();
        }
    }
 
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 async validateAbbreviationOne(event) {
          
    this.state.data.AbbreviationOne = this.state.data.AbbreviationOne1 + this.state.data.AbbreviationTwo2 +
         this.state.data.AbbreviationOne3 + this.state.data.AbbreviationOne4 + this.state.data.AbbreviationOne5 + 
         this.state.data.AbbreviationOne6 + this.state.data.AbbreviationOne7 + this.state.data.AbbreviationOne8 +
         this.state.data.AbbreviationOne9 + this.state.data.AbbreviationOne10 + this.state.data.AbbreviationOne11 + 
         this.state.data.AbbreviationOne12 + this.state.data.AbbreviationOne13 + this.state.data.AbbreviationOne14 + 
         this.state.data.AbbreviationOne15 + this.state.data.AbbreviationOne16 + this.state.data.AbbreviationOne17 + 
         this.state.data.AbbreviationOne18 + this.state.data.AbbreviationOne19 + this.state.data.AbbreviationOne20 +
         this.state.data.AbbreviationOne21 + this.state.data.AbbreviationOne22 + this.state.data.AbbreviationOne23 + 
         this.state.data.AbbreviationOne24 + this.state.data.AbbreviationOne25 + this.state.data.AbbreviationOne26 + 
         this.state.data.AbbreviationOne27 + this.state.data.AbbreviationOne28 + this.state.data.AbbreviationOne29 + 
         this.state.data.AbbreviationOne30 + this.state.data.AbbreviationOne31 + this.state.data.AbbreviationOne32 + 
         this.state.data.AbbreviationOne33 + this.state.data.AbbreviationOne34 + this.state.data.AbbreviationOne35 + 
         this.state.data.AbbreviationOne36 + this.state.data.AbbreviationOne37;

         let errors = this.state.errors;
         let name = "AbbreviationOne";
         this.setState(errors);
         errors[name] = "";
    
    this.ResetAbbreviationOneError();    
   
    if (typeof  this.state.data.AbbreviationOne !== "undefined") {
        if (!this.state.data.AbbreviationOne.match(/^[a-zA-Z ]*$/)) {

            let errors = this.state.errors;
            let name = "AbbreviationOne";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only.";
 
            this.state.isModalEnabled =  false;
            this.HighlightAbbreviationOneError();
        }
    }
  
     
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 
 async validateAbbreviationTwo(event) {
    
     
     this.state.data.AbbreviationTwo = this.state.data.AbbreviationTwo1 + this.state.data.AbbreviationTwo2 +
         this.state.data.AbbreviationTwo3 + this.state.data.AbbreviationTwo4 + this.state.data.AbbreviationTwo5 + 
         this.state.data.AbbreviationTwo6 + this.state.data.AbbreviationTwo7 + this.state.data.AbbreviationTwo8 +
         this.state.data.AbbreviationTwo9 + this.state.data.AbbreviationTwo10 + this.state.data.AbbreviationTwo11 + 
         this.state.data.AbbreviationTwo12 + this.state.data.AbbreviationTwo13 + this.state.data.AbbreviationTwo14 + 
         this.state.data.AbbreviationTwo15 + this.state.data.AbbreviationTwo16 + this.state.data.AbbreviationTwo17 + 
         this.state.data.AbbreviationTwo18 + this.state.data.AbbreviationTwo19 + this.state.data.AbbreviationTwo20 +
         this.state.data.AbbreviationTwo21 + this.state.data.AbbreviationTwo22 + this.state.data.AbbreviationTwo23 + 
         this.state.data.AbbreviationTwo24 + this.state.data.AbbreviationTwo25 + this.state.data.AbbreviationTwo26 + 
         this.state.data.AbbreviationTwo27 + this.state.data.AbbreviationTwo28 + this.state.data.AbbreviationTwo29 + 
         this.state.data.AbbreviationTwo30 + this.state.data.AbbreviationTwo31 + this.state.data.AbbreviationTwo32 + 
         this.state.data.AbbreviationTwo33 + this.state.data.AbbreviationTwo34 + this.state.data.AbbreviationTwo35 + 
         this.state.data.AbbreviationTwo36 + this.state.data.AbbreviationTwo37;

         let errors = this.state.errors;
         let name = "AbbreviationTwo";
         this.setState(errors);
         errors[name] = "";
    
    this.ResetAbbreviationTwoError();
    
    if (typeof  this.state.data.AbbreviationTwo !== "undefined") {
        if (!this.state.data.AbbreviationTwo.match(/^[a-zA-Z ]*$/)) {


         let errors = this.state.errors;
         let name = "AbbreviationTwo";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
    
 
            this.state.isModalEnabled =  false;
            this.HighlightAbbreviationTwoError();
        }
    }
     
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 async validateOtherLastName(event) {
    
    this.state.data.OtherLastName = this.state.data.OtherLastName1 + this.state.data.OtherLastName2 +
         this.state.data.OtherLastName3 + this.state.data.OtherLastName4 + this.state.data.OtherLastName5 + 
         this.state.data.OtherLastName6 + this.state.data.OtherLastName7 + this.state.data.OtherLastName8 +
         this.state.data.OtherLastName9 + this.state.data.OtherLastName10 + this.state.data.OtherLastName11 + 
         this.state.data.OtherLastName12 + this.state.data.OtherLastName13 + this.state.data.OtherLastName14 + 
         this.state.data.OtherLastName15 + this.state.data.OtherLastName16 + this.state.data.OtherLastName17 + 
         this.state.data.OtherLastName18 + this.state.data.OtherLastName19 + this.state.data.OtherLastName20 +
         this.state.data.OtherLastName21 + this.state.data.OtherLastName22 + this.state.data.OtherLastName23 + 
         this.state.data.OtherLastName24 + this.state.data.OtherLastName25 ; 
         
         
         let errors = this.state.errors;
         let name = "OtherLastName";
         this.setState(errors);
         errors[name] = "";
 
    this.ResetOtherLastNameError();
    
    if(this.state.data.OtherLastName === "" || (isNaN(this.state.data.OtherLastName) === false))
    {  
        let errors = this.state.errors;
        let name = "OtherLastName";
        this.setState(errors);
        errors[name] = "*Please enter your Other LastName";

        this.state.isModalEnabled =  false;
        this.HighlightOtherLastNameError();
    }
    else if (typeof  this.state.data.OtherLastName !== "undefined") {
        if (!this.state.data.OtherLastName.match(/^[a-zA-Z ]*$/)) {

            let errors = this.state.errors;
            let name = "OtherLastName";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only.";
 
            this.state.isModalEnabled =  false;
            this.HighlightOtherLastNameError();
        }
    }
  
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 async validateOtherFirstName(event) {
          
    this.state.data.OtherFirstName = this.state.data.OtherFirstName1 + this.state.data.OtherFirstName2 +
         this.state.data.OtherFirstName3 + this.state.data.OtherFirstName4 + this.state.data.OtherFirstName5 + 
         this.state.data.OtherFirstName6 + this.state.data.OtherFirstName7 + this.state.data.OtherFirstName8 +
         this.state.data.OtherFirstName9 + this.state.data.OtherFirstName10 + this.state.data.OtherFirstName11 + 
         this.state.data.OtherFirstName12 + this.state.data.OtherFirstName13 + this.state.data.OtherFirstName14 + 
         this.state.data.OtherFirstName15 + this.state.data.OtherFirstName16 + this.state.data.OtherFirstName17 + 
         this.state.data.OtherFirstName18 + this.state.data.OtherFirstName19 + this.state.data.OtherFirstName20 +
         this.state.data.OtherFirstName21 + this.state.data.OtherFirstName22 + this.state.data.OtherFirstName23 + 
         this.state.data.OtherFirstName24 + this.state.data.OtherFirstName25 ;

         let errors = this.state.errors;
         let name = "OtherFirstName";
         this.setState(errors);
         errors[name] = "";
    this.ResetOtherFirstNameError();    
  
    if(this.state.data.OtherFirstName === "" || (isNaN(this.state.data.OtherFirstName) === false))
    { 
        let errors = this.state.errors;
        let name = "OtherFirstName";
        this.setState(errors);
        errors[name] = "*Please enter your Other FirstName";
 
        this.state.isModalEnabled =  false;
        this.HighlightOtherFirstNameError();
    }
    else if (typeof  this.state.data.OtherFirstName !== "undefined") {
        if (!this.state.data.OtherFirstName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "OtherFirstName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
          
            this.state.isModalEnabled =  false;
            this.HighlightOtherFirstNameError();
        }
    }
  
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 
 async validateOtherMiddleName(event) {
          
    this.state.data.OtherMiddleName = this.state.data.OtherMiddleName1 + this.state.data.OtherMiddleName2 +
         this.state.data.OtherMiddleName3 + this.state.data.OtherMiddleName4 + this.state.data.OtherMiddleName5 + 
         this.state.data.OtherMiddleName6 + this.state.data.OtherMiddleName7 + this.state.data.OtherMiddleName8 +
         this.state.data.OtherMiddleName9 + this.state.data.OtherMiddleName10 + this.state.data.OtherMiddleName11 + 
         this.state.data.OtherMiddleName12 + this.state.data.OtherMiddleName13 + this.state.data.OtherMiddleName14 + 
         this.state.data.OtherMiddleName15 + this.state.data.OtherMiddleName16 + this.state.data.OtherMiddleName17 + 
         this.state.data.OtherMiddleName18 + this.state.data.OtherMiddleName19 + this.state.data.OtherMiddleName20 +
         this.state.data.OtherMiddleName21 + this.state.data.OtherMiddleName22 + this.state.data.OtherMiddleName23 + 
         this.state.data.OtherMiddleName24 + this.state.data.OtherMiddleName25 ;

        let errors = this.state.errors;
        let name = "OtherMiddleName";
        this.setState(errors);
        errors[name] = "";
    
    this.ResetOtherMiddleNameError();
    

    if (typeof  this.state.data.OtherMiddleName !== "undefined") {
        if (!this.state.data.OtherMiddleName.match(/^[a-zA-Z ]*$/)) {

            let errors = this.state.errors;
            let name = "OtherMiddleName";
            this.setState(errors);
            errors[name] = "*Please enter alphabet characters only.";
            
            this.state.isModalEnabled =  false;
            this.HighlightOtherMiddleNameError();
        }
    }
 
  
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 

async validateFatherFirstName(event) {
         
  this.state.data.FatherFirstName = this.state.data.FatherFirstName1 + this.state.data.FatherFirstName2 +
         this.state.data.FatherFirstName3 + this.state.data.FatherFirstName4 + this.state.data.FatherFirstName5 + 
         this.state.data.FatherFirstName6 + this.state.data.FatherFirstName7 + this.state.data.FatherFirstName8 +
         this.state.data.FatherFirstName9 + this.state.data.FatherFirstName10 + this.state.data.FatherFirstName11 + 
         this.state.data.FatherFirstName12 + this.state.data.FatherFirstName13 + this.state.data.FatherFirstName14 + 
         this.state.data.FatherFirstName15 + this.state.data.FatherFirstName16 + this.state.data.FatherFirstName17 + 
         this.state.data.FatherFirstName18 + this.state.data.FatherFirstName19 + this.state.data.FatherFirstName20 +
         this.state.data.FatherFirstName21 + this.state.data.FatherFirstName22 + this.state.data.FatherFirstName23 + 
         this.state.data.FatherFirstName24 + this.state.data.FatherFirstName25 ;

         let errors = this.state.errors;
         let name = "FatherFirstName";
         this.setState(errors);
         errors[name] = "";
   this.ResetFatherFirstNameError();

   if(this.state.data.FatherFirstName === "" || (isNaN(this.state.data.FatherFirstName) === false))
   { 
    let errors = this.state.errors;
    let name = "FatherFirstName";
    this.setState(errors);
    errors[name] = "*Please enter your Father's FirstName";
 
       this.state.isModalEnabled =  false;
       this.HighlightFatherFirstNameError();
   }
   else if (typeof  this.state.data.FatherFirstName !== "undefined") {
       if (!this.state.data.FatherFirstName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "FatherFirstName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
        
           this.state.isModalEnabled =  false;
           this.HighlightFatherFirstNameError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateFatherLastName(event) {
         
  this.state.data.FatherLastName = this.state.data.FatherLastName1 + this.state.data.FatherLastName2 +
         this.state.data.FatherLastName3 + this.state.data.FatherLastName4 + this.state.data.FatherLastName5 + 
         this.state.data.FatherLastName6 + this.state.data.FatherLastName7 + this.state.data.FatherLastName8 +
         this.state.data.FatherLastName9 + this.state.data.FatherLastName10 + this.state.data.FatherLastName11 + 
         this.state.data.FatherLastName12 + this.state.data.FatherLastName13 + this.state.data.FatherLastName14 + 
         this.state.data.FatherLastName15 + this.state.data.FatherLastName16 + this.state.data.FatherLastName17 + 
         this.state.data.FatherLastName18 + this.state.data.FatherLastName19 + this.state.data.FatherLastName20 +
         this.state.data.FatherLastName21 + this.state.data.FatherLastName22 + this.state.data.FatherLastName23 + 
         this.state.data.FatherLastName24 + this.state.data.FatherLastName25 ;

         let errors = this.state.errors;
         let name = "FatherLastName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetFatherLastNameError();

   if(this.state.data.FatherLastName === "" || (isNaN(this.state.data.FatherLastName) === false))
   { 
    let errors = this.state.errors;
    let name = "FatherLastName";
    this.setState(errors);
    errors[name] = "*Please enter your Father's LastName";
 
       this.state.isModalEnabled =  false;
       this.HighlightFatherLastNameError();
   }
   else if (typeof  this.state.data.FatherLastName !== "undefined") {
       if (!this.state.data.FatherLastName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "FatherLastName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";

         
           this.state.isModalEnabled =  false;
           this.HighlightFatherLastNameError();
       }
   }

   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateFatherMiddleName(event) {
         
   this.state.data.FatherMiddleName = this.state.data.FatherMiddleName1 + this.state.data.FatherMiddleName2 +
         this.state.data.FatherMiddleName3 + this.state.data.FatherMiddleName4 + this.state.data.FatherMiddleName5 + 
         this.state.data.FatherMiddleName6 + this.state.data.FatherMiddleName7 + this.state.data.FatherMiddleName8 +
         this.state.data.FatherMiddleName9 + this.state.data.FatherMiddleName10 + this.state.data.FatherMiddleName11 + 
         this.state.data.FatherMiddleName12 + this.state.data.FatherMiddleName13 + this.state.data.FatherMiddleName14 + 
         this.state.data.FatherMiddleName15 + this.state.data.FatherMiddleName16 + this.state.data.FatherMiddleName17 + 
         this.state.data.FatherMiddleName18 + this.state.data.FatherMiddleName19 + this.state.data.FatherMiddleName20 +
         this.state.data.FatherMiddleName21 + this.state.data.FatherMiddleName22 + this.state.data.FatherMiddleName23 + 
         this.state.data.FatherMiddleName24 + this.state.data.FatherMiddleName25 ;

         let errors = this.state.errors;
         let name = "FatherMiddleName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetFatherMiddleNameError();

   if (typeof  this.state.data.FatherMiddleName !== "undefined") {
       if (!this.state.data.FatherMiddleName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "FatherMiddleName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
         
           this.state.isModalEnabled =  false;
           this.HighlightFatherMiddleNameError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateMotherFirstName(event) {
         
   this.state.data.MotherFirstName = this.state.data.MotherFirstName1 + this.state.data.MotherFirstName2 +
         this.state.data.MotherFirstName3 + this.state.data.MotherFirstName4 + this.state.data.MotherFirstName5 + 
         this.state.data.MotherFirstName6 + this.state.data.MotherFirstName7 + this.state.data.MotherFirstName8 +
         this.state.data.MotherFirstName9 + this.state.data.MotherFirstName10 + this.state.data.MotherFirstName11 + 
         this.state.data.MotherFirstName12 + this.state.data.MotherFirstName13 + this.state.data.MotherFirstName14 + 
         this.state.data.MotherFirstName15 + this.state.data.MotherFirstName16 + this.state.data.MotherFirstName17 + 
         this.state.data.MotherFirstName18 + this.state.data.MotherFirstName19 + this.state.data.MotherFirstName20 +
         this.state.data.MotherFirstName21 + this.state.data.MotherFirstName22 + this.state.data.MotherFirstName23 + 
         this.state.data.MotherFirstName24 + this.state.data.MotherFirstName25 ;

         let errors = this.state.errors;
         let name = "MotherFirstName";
         this.setState(errors);
         errors[name] = "";

  
   this.ResetMotherFirstNameError();

   if(this.state.data.ParentName === "15")
   {  
    if(this.state.data.MotherFirstName === "" || (isNaN(this.state.data.MotherFirstName) === false))
    { 
     let errors = this.state.errors;
     let name = "MotherFirstName";
     this.setState(errors);
     errors[name] = "*Please enter Mother's name";
  
        this.state.isModalEnabled =  false;
        this.HighlightMotherFirstNameError();
    }
    if (typeof  this.state.data.MotherFirstName !== "undefined") {
        if (!this.state.data.MotherFirstName.match(/^[a-zA-Z ]*$/)) {
 
         let errors = this.state.errors;
         let name = "MotherFirstName";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
  
            this.state.isModalEnabled =  false;
            this.HighlightMotherFirstNameError();
        }
    }
          
   }
   else if (typeof  this.state.data.MotherFirstName !== "undefined") {
       if (!this.state.data.MotherFirstName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "MotherFirstName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightMotherFirstNameError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateMotherLastName(event) {
         
   this.state.data.MotherLastName = this.state.data.MotherLastName1 + this.state.data.MotherLastName2 +
         this.state.data.MotherLastName3 + this.state.data.MotherLastName4 + this.state.data.MotherLastName5 + 
         this.state.data.MotherLastName6 + this.state.data.MotherLastName7 + this.state.data.MotherLastName8 +
         this.state.data.MotherLastName9 + this.state.data.MotherLastName10 + this.state.data.MotherLastName11 + 
         this.state.data.MotherLastName12 + this.state.data.MotherLastName13 + this.state.data.MotherLastName14 + 
         this.state.data.MotherLastName15 + this.state.data.MotherLastName16 + this.state.data.MotherLastName17 + 
         this.state.data.MotherLastName18 + this.state.data.MotherLastName19 + this.state.data.MotherLastName20 +
         this.state.data.MotherLastName21 + this.state.data.MotherLastName22 + this.state.data.MotherLastName23 + 
         this.state.data.MotherLastName24 + this.state.data.MotherLastName25 ;


         let errors = this.state.errors;
         let name = "MotherLastName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetMotherLastNameError();

   if(this.state.data.ParentName === "15")
   {  
    // console.log("error")
    if(this.state.data.MotherLastName === "" || (isNaN(this.state.data.MotherLastName) === false))
    { 
     let errors = this.state.errors;
     let name = "MotherLastName";
     this.setState(errors);
     errors[name] = "*Please enter Mother's name";
  
        this.state.isModalEnabled =  false;
        this.HighlightMotherLastNameError();
    }
    if (typeof  this.state.data.MotherLastName !== "undefined") {
        if (!this.state.data.MotherLastName.match(/^[a-zA-Z ]*$/)) {
 
 
         let errors = this.state.errors;
         let name = "MotherLastName";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
           
            this.state.isModalEnabled =  false;
            this.HighlightMotherLastNameError();
        }
    }
          
   }
   else if (typeof  this.state.data.MotherLastName !== "undefined") {
       if (!this.state.data.MotherLastName.match(/^[a-zA-Z ]*$/)) {


        let errors = this.state.errors;
        let name = "MotherLastName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
          
           this.state.isModalEnabled =  false;
           this.HighlightMotherLastNameError();
       }
   }

   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateMotherMiddleName(event) {
         
   this.state.data.MotherMiddleName = this.state.data.MotherMiddleName1 + this.state.data.MotherMiddleName2 +
         this.state.data.MotherMiddleName3 + this.state.data.MotherMiddleName4 + this.state.data.MotherMiddleName5 + 
         this.state.data.MotherMiddleName6 + this.state.data.MotherMiddleName7 + this.state.data.MotherMiddleName8 +
         this.state.data.MotherMiddleName9 + this.state.data.MotherMiddleName10 + this.state.data.MotherMiddleName11 + 
         this.state.data.MotherMiddleName12 + this.state.data.MotherMiddleName13 + this.state.data.MotherMiddleName14 + 
         this.state.data.MotherMiddleName15 + this.state.data.MotherMiddleName16 + this.state.data.MotherMiddleName17 + 
         this.state.data.MotherMiddleName18 + this.state.data.MotherMiddleName19 + this.state.data.MotherMiddleName20 +
         this.state.data.MotherMiddleName21 + this.state.data.MotherMiddleName22 + this.state.data.MotherMiddleName23 + 
         this.state.data.MotherMiddleName24 + this.state.data.MotherMiddleName25 ;

         let errors = this.state.errors;
         let name = "MotherMiddleName";
         this.setState(errors);
         errors[name] = "";
   
   this.ResetMotherMiddleNameError();
 
   if (typeof  this.state.data.MotherMiddleName !== "undefined") {
       if (!this.state.data.MotherMiddleName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "MotherMiddleName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightMotherMiddleNameError();
       }
   }

   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRALastName(event) {
         
   this.state.data.RALastName = this.state.data.RALastName1 + this.state.data.RALastName2 +
         this.state.data.RALastName3 + this.state.data.RALastName4 + this.state.data.RALastName5 + 
         this.state.data.RALastName6 + this.state.data.RALastName7 + this.state.data.RALastName8 +
         this.state.data.RALastName9 + this.state.data.RALastName10 + this.state.data.RALastName11 + 
         this.state.data.RALastName12 + this.state.data.RALastName13 + this.state.data.RALastName14 + 
         this.state.data.RALastName15 + this.state.data.RALastName16 + this.state.data.RALastName17 + 
         this.state.data.RALastName18 + this.state.data.RALastName19 + this.state.data.RALastName20 +
         this.state.data.RALastName21 + this.state.data.RALastName22 + this.state.data.RALastName23 + 
         this.state.data.RALastName24 + this.state.data.RALastName25 ;

         let errors = this.state.errors;
         let name = "RALastName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetRALastNameError();
 
   if(this.state.data.RALastName === "" || isNaN(this.state.data.RALastName) === false)
   { 

    let errors = this.state.errors;
    let name = "RALastName";
    this.setState(errors);
    errors[name] = "*Please enter your Representative Aseessee's LastName";
 
       this.state.isModalEnabled =  false;
       this.HighlightRALastNameError();
   }
   else if (typeof  this.state.data.RALastName !== "undefined") {
       if (!this.state.data.RALastName.match(/^[a-zA-Z ]*$/)) {
        let errors = this.state.errors;
        let name = "RALastName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";

         
           this.state.isModalEnabled =  false;
           this.HighlightRALastNameError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRAFirstName(event) {
      
   this.state.data.RAFirstName = this.state.data.RAFirstName1 + this.state.data.RAFirstName2 +
         this.state.data.RAFirstName3 + this.state.data.RAFirstName4 + this.state.data.RAFirstName5 + 
         this.state.data.RAFirstName6 + this.state.data.RAFirstName7 + this.state.data.RAFirstName8 +
         this.state.data.RAFirstName9 + this.state.data.RAFirstName10 + this.state.data.RAFirstName11 + 
         this.state.data.RAFirstName12 + this.state.data.RAFirstName13 + this.state.data.RAFirstName14 + 
         this.state.data.RAFirstName15 + this.state.data.RAFirstName16 + this.state.data.RAFirstName17 + 
         this.state.data.RAFirstName18 + this.state.data.RAFirstName19 + this.state.data.RAFirstName20 +
         this.state.data.RAFirstName21 + this.state.data.RAFirstName22 + this.state.data.RAFirstName23 + 
         this.state.data.RAFirstName24 + this.state.data.RAFirstName25 ;


         let errors = this.state.errors;
         let name = "RAFirstName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetRAFirstNameError();
 
   if(this.state.data.RAFirstName === "" || (isNaN(this.state.data.RAFirstName) === false))
   { 

    let errors = this.state.errors;
    let name = "RAFirstName";
    this.setState(errors);
    errors[name] = "*Please enter your Representative Aseessee's FirstName";
 
       this.state.isModalEnabled =  false;
       this.HighlightRAFirstNameError();
   }
   else if (typeof  this.state.data.RAFirstName !== "undefined") {
       if (!this.state.data.RAFirstName.match(/^[a-zA-Z ]*$/)) {


        let errors = this.state.errors;
        let name = "RAFirstName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightRAFirstNameError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRAMiddleName(event) {
         
  this.state.data.RAMiddleName = this.state.data.RAMiddleName1 + this.state.data.RAMiddleName2 +
         this.state.data.RAMiddleName3 + this.state.data.RAMiddleName4 + this.state.data.RAMiddleName5 + 
         this.state.data.RAMiddleName6 + this.state.data.RAMiddleName7 + this.state.data.RAMiddleName8 +
         this.state.data.RAMiddleName9 + this.state.data.RAMiddleName10 + this.state.data.RAMiddleName11 + 
         this.state.data.RAMiddleName12 + this.state.data.RAMiddleName13 + this.state.data.RAMiddleName14 + 
         this.state.data.RAMiddleName15 + this.state.data.RAMiddleName16 + this.state.data.RAMiddleName17 + 
         this.state.data.RAMiddleName18 + this.state.data.RAMiddleName19 + this.state.data.RAMiddleName20 +
         this.state.data.RAMiddleName21 + this.state.data.RAMiddleName22 + this.state.data.RAMiddleName23 + 
         this.state.data.RAMiddleName24 + this.state.data.RAMiddleName25 ;

         let errors = this.state.errors;
         let name = "RAMiddleName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetRAMiddleNameError();

 
   if (typeof  this.state.data.RAMiddleName !== "undefined") {
       if (!this.state.data.RAMiddleName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "RAMiddleName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
           
           this.state.isModalEnabled =  false;
           this.HighlightRAMiddleNameError();

       }
   }

    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateResidenceFlat(event) {

 this.state.data.ResidenceFlat = this.state.data.ResidenceFlat1 + this.state.data.ResidenceFlat2 +
    this.state.data.ResidenceFlat3 + this.state.data.ResidenceFlat4 + this.state.data.ResidenceFlat5 + 
    this.state.data.ResidenceFlat6 + this.state.data.ResidenceFlat7 + this.state.data.ResidenceFlat8 +
    this.state.data.ResidenceFlat9 + this.state.data.ResidenceFlat10 + this.state.data.ResidenceFlat11 + 
    this.state.data.ResidenceFlat12 + this.state.data.ResidenceFlat13 + this.state.data.ResidenceFlat14 + 
    this.state.data.ResidenceFlat15 + this.state.data.ResidenceFlat16 + this.state.data.ResidenceFlat17 + 
    this.state.data.ResidenceFlat18 + this.state.data.ResidenceFlat19 + this.state.data.ResidenceFlat20 +
    this.state.data.ResidenceFlat21 + this.state.data.ResidenceFlat22 + this.state.data.ResidenceFlat23 + 
    this.state.data.ResidenceFlat24 + this.state.data.ResidenceFlat25 ;

    let errors = this.state.errors;
    let name = "ResidenceFlat";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetResidenceFlatError();
 
   if(this.state.data.ResidenceFlat === "" || ((isNaN(this.state.data.ResidenceFlat) === false) 
   && (this.state.data.ResidenceFlat.match(/^[ ]*$/))))
   { 
    let errors = this.state.errors;
    let name = "ResidenceFlat";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Flat / Room / Door / Block No.";

       this.state.isModalEnabled =  false;
       this.HighlightResidenceFlatError();
   }
   else if (typeof  this.state.data.ResidenceFlat !== "undefined") {
       if (!this.state.data.ResidenceFlat.match(/^[a-zA-Z0-9'-/ ]*$/)) {

        let errors = this.state.errors;
        let name = "ResidenceFlat";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightResidenceFlatError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateResidencePremises(event) {
         
   this.state.data.ResidencePremises = this.state.data.ResidencePremises1 + this.state.data.ResidencePremises2 +
    this.state.data.ResidencePremises3 + this.state.data.ResidencePremises4 + this.state.data.ResidencePremises5 + 
    this.state.data.ResidencePremises6 + this.state.data.ResidencePremises7 + this.state.data.ResidencePremises8 +
    this.state.data.ResidencePremises9 + this.state.data.ResidencePremises10 + this.state.data.ResidencePremises11 + 
    this.state.data.ResidencePremises12 + this.state.data.ResidencePremises13 + this.state.data.ResidencePremises14 + 
    this.state.data.ResidencePremises15 + this.state.data.ResidencePremises16 + this.state.data.ResidencePremises17 + 
    this.state.data.ResidencePremises18 + this.state.data.ResidencePremises19 + this.state.data.ResidencePremises20 +
    this.state.data.ResidencePremises21 + this.state.data.ResidencePremises22 + this.state.data.ResidencePremises23 + 
    this.state.data.ResidencePremises24 + this.state.data.ResidencePremises25 ;


    let errors = this.state.errors;
    let name = "ResidencePremises";
    this.setState(errors);
    errors[name] = "";

   this.ResetResidencePremisesError();
 
   if(this.state.data.ResidencePremises === "" || ((isNaN(this.state.data.ResidencePremises) === false) 
   && (this.state.data.ResidencePremises.match(/^[ ]*$/))))
   { 

    let errors = this.state.errors;
    let name = "ResidencePremises";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Premises / Building / Village";
 
       this.state.isModalEnabled =  false;
       this.HighlightResidencePremisesError();
    }
   else if (typeof  this.state.data.ResidencePremises !== "undefined") {
       if (!this.state.data.ResidencePremises.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "ResidencePremises";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightResidencePremisesError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateResidenceRoad(event) {
         
 this.state.data.ResidenceRoad = this.state.data.ResidenceRoad1 + this.state.data.ResidenceRoad2 +
    this.state.data.ResidenceRoad3 + this.state.data.ResidenceRoad4 + this.state.data.ResidenceRoad5 + 
    this.state.data.ResidenceRoad6 + this.state.data.ResidenceRoad7 + this.state.data.ResidenceRoad8 +
    this.state.data.ResidenceRoad9 + this.state.data.ResidenceRoad10 + this.state.data.ResidenceRoad11 + 
    this.state.data.ResidenceRoad12 + this.state.data.ResidenceRoad13 + this.state.data.ResidenceRoad14 + 
    this.state.data.ResidenceRoad15 + this.state.data.ResidenceRoad16 + this.state.data.ResidenceRoad17 + 
    this.state.data.ResidenceRoad18 + this.state.data.ResidenceRoad19 + this.state.data.ResidenceRoad20 +
    this.state.data.ResidenceRoad21 + this.state.data.ResidenceRoad22 + this.state.data.ResidenceRoad23 + 
    this.state.data.ResidenceRoad24 + this.state.data.ResidenceRoad25 ;

    let errors = this.state.errors;
    let name = "ResidenceRoad";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetResidenceRoadError();

   if(this.state.data.ResidenceRoad === "" || ((isNaN(this.state.data.ResidenceRoad) === false) 
   && (this.state.data.ResidenceRoad.match(/^[ ]*$/))))
   { 
    let errors = this.state.errors;
    let name = "ResidenceRoad";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Road / Street / Lane / Post Office";

       this.state.isModalEnabled =  false;
       this.HighlightResidenceRoadError();
    }
   else if (typeof  this.state.data.ResidenceRoad !== "undefined") {
       if (!this.state.data.ResidenceRoad.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "ResidenceRoad";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightResidenceRoadError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateResidenceArea(event) {
         
 this.state.data.ResidenceArea = this.state.data.ResidenceArea1 + this.state.data.ResidenceArea2 +
    this.state.data.ResidenceArea3 + this.state.data.ResidenceArea4 + this.state.data.ResidenceArea5 + 
    this.state.data.ResidenceArea6 + this.state.data.ResidenceArea7 + this.state.data.ResidenceArea8 +
    this.state.data.ResidenceArea9 + this.state.data.ResidenceArea10 + this.state.data.ResidenceArea11 + 
    this.state.data.ResidenceArea12 + this.state.data.ResidenceArea13 + this.state.data.ResidenceArea14 + 
    this.state.data.ResidenceArea15 + this.state.data.ResidenceArea16 + this.state.data.ResidenceArea17 + 
    this.state.data.ResidenceArea18 + this.state.data.ResidenceArea19 + this.state.data.ResidenceArea20 +
    this.state.data.ResidenceArea21 + this.state.data.ResidenceArea22 + this.state.data.ResidenceArea23 + 
    this.state.data.ResidenceArea24 + this.state.data.ResidenceArea25 ;


    let errors = this.state.errors;
    let name = "ResidenceArea";
    this.setState(errors);
    errors[name] = "";

   this.ResetResidenceAreaError();
   
   if(this.state.data.ResidenceArea === "" || (isNaN(this.state.data.ResidenceArea) === false))
   { 

    let errors = this.state.errors;
    let name = "ResidenceArea";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Area / Locality / Taluka / Sub-division";

      
       this.state.isModalEnabled =  false;
       this.HighlightResidenceAreaError();
    }
   else if (typeof  this.state.data.ResidenceArea !== "undefined") {
       if (!this.state.data.ResidenceArea.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "ResidenceArea";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";

      
           this.state.isModalEnabled =  false;
           this.HighlightResidenceAreaError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateResidenceTown(event) {
         
this.state.data.ResidenceTown = this.state.data.ResidenceTown1 + this.state.data.ResidenceTown2 +
    this.state.data.ResidenceTown3 + this.state.data.ResidenceTown4 + this.state.data.ResidenceTown5 + 
    this.state.data.ResidenceTown6 + this.state.data.ResidenceTown7 + this.state.data.ResidenceTown8 +
    this.state.data.ResidenceTown9 + this.state.data.ResidenceTown10 + this.state.data.ResidenceTown11 + 
    this.state.data.ResidenceTown12 + this.state.data.ResidenceTown13 + this.state.data.ResidenceTown14 + 
    this.state.data.ResidenceTown15 + this.state.data.ResidenceTown16 + this.state.data.ResidenceTown17 + 
    this.state.data.ResidenceTown18 + this.state.data.ResidenceTown19 + this.state.data.ResidenceTown20 +
    this.state.data.ResidenceTown21 + this.state.data.ResidenceTown22 + this.state.data.ResidenceTown23 + 
    this.state.data.ResidenceTown24 + this.state.data.ResidenceTown25 ;

    let errors = this.state.errors;
    let name = "ResidenceTown";
    this.setState(errors);
    errors[name] = "";

   this.ResetResidenceTownError();

   if(this.state.data.ResidenceTown === "" || (isNaN(this.state.data.ResidenceTown) === false))
   { 

    let errors = this.state.errors;
    let name = "ResidenceTown";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Town / City / District";

       this.state.isModalEnabled =  false;
       this.HighlightResidenceTownError();
   }
   else if (typeof  this.state.data.ResidenceTown !== "undefined") {
       if (!this.state.data.ResidenceTown.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "ResidenceTown";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightResidenceTownError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateOfficeName(event) {
         
 this.state.data.OfficeName = this.state.data.OfficeName1 + this.state.data.OfficeName2 +
    this.state.data.OfficeName3 + this.state.data.OfficeName4 + this.state.data.OfficeName5 + 
    this.state.data.OfficeName6 + this.state.data.OfficeName7 + this.state.data.OfficeName8 +
    this.state.data.OfficeName9 + this.state.data.OfficeName10 + this.state.data.OfficeName11 + 
    this.state.data.OfficeName12 + this.state.data.OfficeName13 + this.state.data.OfficeName14 + 
    this.state.data.OfficeName15 + this.state.data.OfficeName16 + this.state.data.OfficeName17 + 
    this.state.data.OfficeName18 + this.state.data.OfficeName19 + this.state.data.OfficeName20 +
    this.state.data.OfficeName21 + this.state.data.OfficeName22 + this.state.data.OfficeName23 + 
    this.state.data.OfficeName24 + this.state.data.OfficeName25 ;

    let errors = this.state.errors;
    let name = "OfficeName";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetOfficeNameError();
        
    if(this.state.data.Communication === "17")
    {
        if(this.state.data.OfficeName === "" || ((isNaN(this.state.data.OfficeName) === false) 
        && (this.state.data.OfficeName.match(/^[ ]*$/))))
        { 
            let errors = this.state.errors;
            let name = "OfficeName";
            this.setState(errors);
            errors[name] = "*Please enter your Office's Name";

             this.state.isModalEnabled =  false;
             this.HighlightOfficeNameError();
        }
       if (typeof  this.state.data.OfficeName !== "undefined") {
       if (!this.state.data.OfficeName.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "OfficeName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightOfficeNameError();
       }
   }

    }
    else  if (typeof  this.state.data.OfficeName !== "undefined") {
        if (!this.state.data.OfficeName.match(/^[a-zA-Z0-9 ]*$/)) {
 
         let errors = this.state.errors;
         let name = "OfficeName";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
  
            this.state.isModalEnabled =  false;
            this.HighlightOfficeNameError();
        }
    }
    
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateOfficeFlat(event) {
this.state.data.OfficeFlat = this.state.data.OfficeFlat1 + this.state.data.OfficeFlat2 +
    this.state.data.OfficeFlat3 + this.state.data.OfficeFlat4 + this.state.data.OfficeFlat5 + 
    this.state.data.OfficeFlat6 + this.state.data.OfficeFlat7 + this.state.data.OfficeFlat8 +
    this.state.data.OfficeFlat9 + this.state.data.OfficeFlat10 + this.state.data.OfficeFlat11 + 
    this.state.data.OfficeFlat12 + this.state.data.OfficeFlat13 + this.state.data.OfficeFlat14 + 
    this.state.data.OfficeFlat15 + this.state.data.OfficeFlat16 + this.state.data.OfficeFlat17 + 
    this.state.data.OfficeFlat18 + this.state.data.OfficeFlat19 + this.state.data.OfficeFlat20 +
    this.state.data.OfficeFlat21 + this.state.data.OfficeFlat22 + this.state.data.OfficeFlat23 + 
    this.state.data.OfficeFlat24 + this.state.data.OfficeFlat25 ;

    let errors = this.state.errors;
    let name = "OfficeFlat";
    this.setState(errors);
    errors[name] = "";
   this.ResetOfficeFlatError();
 
    if(this.state.data.Communication === "17")
    {
        if(this.state.data.OfficeFlat === "" || ((isNaN(this.state.data.OfficeFlat) === false) 
        && (this.state.data.OfficeFlat.match(/^[ ]*$/))))
        { 
            let errors = this.state.errors;
            let name = "OfficeFlat";
            this.setState(errors);
            errors[name] = "*Please enter your Office Flat / Room / Door / Block No.";

            this.state.isModalEnabled =  false;
            this.HighlightOfficeFlatError();
        }
        if (typeof  this.state.data.OfficeFlat !== "undefined") {
            if (!this.state.data.OfficeFlat.match(/^[a-zA-Z0-9'-/ ]*$/)) {
             let errors = this.state.errors;
             let name = "OfficeFlat";
             this.setState(errors);
             errors[name] = "*Please enter alphanumeric characters only.";
      
                this.state.isModalEnabled =  false;
                this.HighlightOfficeFlatError();
            }
        }
    }
    else if (typeof  this.state.data.OfficeFlat !== "undefined") {
       if (!this.state.data.OfficeFlat.match(/^[a-zA-Z0-9'-/ ]*$/)) {
        let errors = this.state.errors;
        let name = "OfficeFlat";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightOfficeFlatError();
       }
   }
 

   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateOfficePremises(event) {

this.state.data.OfficePremises = this.state.data.OfficePremises1 + this.state.data.OfficePremises2 +
    this.state.data.OfficePremises3 + this.state.data.OfficePremises4 + this.state.data.OfficePremises5 + 
    this.state.data.OfficePremises6 + this.state.data.OfficePremises7 + this.state.data.OfficePremises8 +
    this.state.data.OfficePremises9 + this.state.data.OfficePremises10 + this.state.data.OfficePremises11 + 
    this.state.data.OfficePremises12 + this.state.data.OfficePremises13 + this.state.data.OfficePremises14 + 
    this.state.data.OfficePremises15 + this.state.data.OfficePremises16 + this.state.data.OfficePremises17 + 
    this.state.data.OfficePremises18 + this.state.data.OfficePremises19 + this.state.data.OfficePremises20 +
    this.state.data.OfficePremises21 + this.state.data.OfficePremises22 + this.state.data.OfficePremises23 + 
    this.state.data.OfficePremises24 + this.state.data.OfficePremises25 ;  
    
    let errors = this.state.errors;
    let name = "OfficePremises";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetOfficePremisesError();
 
   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficePremises === "" || ((isNaN(this.state.data.OfficePremises) === false) 
    && (this.state.data.OfficePremises.match(/^[ ]*$/))))
    { 

        let errors = this.state.errors;
        let name = "OfficePremises";
        this.setState(errors);
        errors[name] = "*Please enter your Office Premises / Building / Village";
  
        this.state.isModalEnabled =  false;
        this.HighlightOfficePremisesError();
    }

    if (typeof  this.state.data.OfficePremises !== "undefined") {
        if (!this.state.data.OfficePremises.match(/^[a-zA-Z0-9 ]*$/)) {
 
         let errors = this.state.errors;
         let name = "OfficePremises";
         this.setState(errors);
         errors[name] = "*Please enter alphanumeric characters only.";
   
            this.state.isModalEnabled =  false;
            this.HighlightOfficePremisesError();
        }
    }
   }
   else if (typeof  this.state.data.OfficePremises !== "undefined") {
       if (!this.state.data.OfficePremises.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "OfficePremises";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
  
           this.state.isModalEnabled =  false;
           this.HighlightOfficePremisesError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateOfficeRoad(event) {

this.state.data.OfficeRoad = this.state.data.OfficeRoad1 + this.state.data.OfficeRoad2 +
    this.state.data.OfficeRoad3 + this.state.data.OfficeRoad4 + this.state.data.OfficeRoad5 + 
    this.state.data.OfficeRoad6 + this.state.data.OfficeRoad7 + this.state.data.OfficeRoad8 +
    this.state.data.OfficeRoad9 + this.state.data.OfficeRoad10 + this.state.data.OfficeRoad11 + 
    this.state.data.OfficeRoad12 + this.state.data.OfficeRoad13 + this.state.data.OfficeRoad14 + 
    this.state.data.OfficeRoad15 + this.state.data.OfficeRoad16 + this.state.data.OfficeRoad17 + 
    this.state.data.OfficeRoad18 + this.state.data.OfficeRoad19 + this.state.data.OfficeRoad20 +
    this.state.data.OfficeRoad21 + this.state.data.OfficeRoad22 + this.state.data.OfficeRoad23 + 
    this.state.data.OfficeRoad24 + this.state.data.OfficeRoad25 ;   

    let errors = this.state.errors;
    let name = "OfficeRoad";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetOfficeRoadError();
   
   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficeRoad === "" || ((isNaN(this.state.data.OfficeRoad) === false) 
    && (this.state.data.OfficeRoad.match(/^[ ]*$/))))
    { 
        let errors = this.state.errors;
        let name = "OfficeRoad";
        this.setState(errors);
        errors[name] = "*Please enter your Office Road / Street / Lane / Post Office";
  
        this.state.isModalEnabled =  false;
        this.HighlightOfficeRoadError();
    }

    if (typeof  this.state.data.OfficeRoad !== "undefined") {
        if (!this.state.data.OfficeRoad.match(/^[a-zA-Z0-9 ]*$/)) {
 
         let errors = this.state.errors;
         let name = "OfficeRoad";
         this.setState(errors);
         errors[name] = "*Please enter alphanumeric characters only.";
  
            this.state.isModalEnabled =  false;
            this.HighlightOfficeRoadError();
        }
    }

   }
   else if (typeof  this.state.data.OfficeRoad !== "undefined") {
       if (!this.state.data.OfficeRoad.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "OfficeRoad";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightOfficeRoadError();
       }
   }

   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateOfficeArea(event) {

this.state.data.OfficeArea = this.state.data.OfficeArea1 + this.state.data.OfficeArea2 +
    this.state.data.OfficeArea3 + this.state.data.OfficeArea4 + this.state.data.OfficeArea5 + 
    this.state.data.OfficeArea6 + this.state.data.OfficeArea7 + this.state.data.OfficeArea8 +
    this.state.data.OfficeArea9 + this.state.data.OfficeArea10 + this.state.data.OfficeArea11 + 
    this.state.data.OfficeArea12 + this.state.data.OfficeArea13 + this.state.data.OfficeArea14 + 
    this.state.data.OfficeArea15 + this.state.data.OfficeArea16 + this.state.data.OfficeArea17 + 
    this.state.data.OfficeArea18 + this.state.data.OfficeArea19 + this.state.data.OfficeArea20 +
    this.state.data.OfficeArea21 + this.state.data.OfficeArea22 + this.state.data.OfficeArea23 + 
    this.state.data.OfficeArea24 + this.state.data.OfficeArea25 ; 
    
    let errors = this.state.errors;
    let name = "OfficeArea";
    this.setState(errors);
    errors[name] = "";
  
   this.ResetOfficeAreaError();

   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficeArea === "" || (isNaN(this.state.data.OfficeArea) === false))
    { 

        let errors = this.state.errors;
        let name = "OfficeArea";
        this.setState(errors);
        errors[name] = "*Please enter your Office Area / Locality / Taluka / Sub-division";
      
        this.state.isModalEnabled =  false;
        this.HighlightOfficeAreaError();
    }

    if (typeof  this.state.data.OfficeArea !== "undefined") {
        if (!this.state.data.OfficeArea.match(/^[a-zA-Z ]*$/)) {
 
         let errors = this.state.errors;
         let name = "OfficeArea";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
      
        
            this.state.isModalEnabled =  false;
            this.HighlightOfficeAreaError();
        }
    }

   }
   else if (typeof  this.state.data.OfficeArea !== "undefined") {
       if (!this.state.data.OfficeArea.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "OfficeArea";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
     
       
           this.state.isModalEnabled =  false;
           this.HighlightOfficeAreaError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateOfficeTown(event) {
         
   
 this.state.data.OfficeTown = this.state.data.OfficeTown1 + this.state.data.OfficeTown2 +
    this.state.data.OfficeTown3 + this.state.data.OfficeTown4 + this.state.data.OfficeTown5 + 
    this.state.data.OfficeTown6 + this.state.data.OfficeTown7 + this.state.data.OfficeTown8 +
    this.state.data.OfficeTown9 + this.state.data.OfficeTown10 + this.state.data.OfficeTown11 + 
    this.state.data.OfficeTown12 + this.state.data.OfficeTown13 + this.state.data.OfficeTown14 + 
    this.state.data.OfficeTown15 + this.state.data.OfficeTown16 + this.state.data.OfficeTown17 + 
    this.state.data.OfficeTown18 + this.state.data.OfficeTown19 + this.state.data.OfficeTown20 +
    this.state.data.OfficeTown21 + this.state.data.OfficeTown22 + this.state.data.OfficeTown23 + 
    this.state.data.OfficeTown24 + this.state.data.OfficeTown25 ; 
    
    let errors = this.state.errors;
    let name = "OfficeTown";
    this.setState(errors);
    errors[name] = "";
  
   this.ResetOfficeTownError();
 
   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficeTown === "" || (isNaN(this.state.data.OfficeTown) === false))
    { 
        let errors = this.state.errors;
        let name = "OfficeTown";
        this.setState(errors);
        errors[name] = "*Please enter your Office Town / City / District";
      
        this.state.isModalEnabled =  false;
        this.HighlightOfficeTownError();
    }

    if (typeof  this.state.data.OfficeTown !== "undefined") {
        if (!this.state.data.OfficeTown.match(/^[a-zA-Z ]*$/)) {
 
         let errors = this.state.errors;
         let name = "OfficeTown";
         this.setState(errors);
         errors[name] = "*Please enter alphabet characters only.";
      
            this.state.isModalEnabled =  false;
            this.HighlightOfficeTownError();
        }
    }
  
   }
   else if (typeof  this.state.data.OfficeTown !== "undefined") {
       if (!this.state.data.OfficeTown.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "OfficeTown";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
     
           this.state.isModalEnabled =  false;
           this.HighlightOfficeTownError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRAFlat(event) {
         
 this.state.data.RAFlat = this.state.data.RAFlat1 + this.state.data.RAFlat2 +
    this.state.data.RAFlat3 + this.state.data.RAFlat4 + this.state.data.RAFlat5 + 
    this.state.data.RAFlat6 + this.state.data.RAFlat7 + this.state.data.RAFlat8 +
    this.state.data.RAFlat9 + this.state.data.RAFlat10 + this.state.data.RAFlat11 + 
    this.state.data.RAFlat12 + this.state.data.RAFlat13 + this.state.data.RAFlat14 + 
    this.state.data.RAFlat15 + this.state.data.RAFlat16 + this.state.data.RAFlat17 + 
    this.state.data.RAFlat18 + this.state.data.RAFlat19 + this.state.data.RAFlat20 +
    this.state.data.RAFlat21 + this.state.data.RAFlat22 + this.state.data.RAFlat23 + 
    this.state.data.RAFlat24 + this.state.data.RAFlat25 ;   

    let errors = this.state.errors;
    let name = "RAFlat";
    this.setState(errors);
    errors[name] = "";
   this.ResetRAFlatError();
 
   if(this.state.data.RAFlat === "" || ((isNaN(this.state.data.RAFlat) === false) 
   && (this.state.data.RAFlat.match(/^[ ]*$/))))
   { 
    let errors = this.state.errors;
    let name = "RAFlat";
    this.setState(errors);
    errors[name] = "*Please enter your Representative assesssee Flat / Room / Door / Block No.";

       this.state.isModalEnabled =  false;
       this.HighlightRAFlatError();
    }
   else if (typeof  this.state.data.RAFlat !== "undefined") {
       if (!this.state.data.RAFlat.match(/^[a-zA-Z0-9'-/ ]*$/)) {

        let errors = this.state.errors;
        let name = "RAFlat";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightRAFlatError();
       }
   }

    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateRAPremises(event) {
         
 this.state.data.RAPremises = this.state.data.RAPremises1 + this.state.data.RAPremises2 +
    this.state.data.RAPremises3 + this.state.data.RAPremises4 + this.state.data.RAPremises5 + 
    this.state.data.RAPremises6 + this.state.data.RAPremises7 + this.state.data.RAPremises8 +
    this.state.data.RAPremises9 + this.state.data.RAPremises10 + this.state.data.RAPremises11 + 
    this.state.data.RAPremises12 + this.state.data.RAPremises13 + this.state.data.RAPremises14 + 
    this.state.data.RAPremises15 + this.state.data.RAPremises16 + this.state.data.RAPremises17 + 
    this.state.data.RAPremises18 + this.state.data.RAPremises19 + this.state.data.RAPremises20 +
    this.state.data.RAPremises21 + this.state.data.RAPremises22 + this.state.data.RAPremises23 + 
    this.state.data.RAPremises24 + this.state.data.RAPremises25 ;   

    let errors = this.state.errors;
    let name = "RAPremises";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetRAPremisesError();
 
   if(this.state.data.RAPremises === ""  || ((isNaN(this.state.data.RAPremises) === false) 
   && (this.state.data.RAPremises.match(/^[ ]*$/))))
   { 
    let errors = this.state.errors;
    let name = "RAPremises";
    this.setState(errors);
    errors[name] = "*Please enter your Representative assesssee Premises / Building / Village";
 
       this.state.isModalEnabled =  false;
       this.HighlightRAPremisesError();
    }
   else if (typeof  this.state.data.RAPremises !== "undefined") {
       if (!this.state.data.RAPremises.match(/^[a-zA-Z0-9 ]*$/)) {
        let errors = this.state.errors;
        let name = "RAPremises";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightRAPremisesError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRARoad(event) {
         
this.state.data.RARoad = this.state.data.RARoad1 + this.state.data.RARoad2 +
    this.state.data.RARoad3 + this.state.data.RARoad4 + this.state.data.RARoad5 + 
    this.state.data.RARoad6 + this.state.data.RARoad7 + this.state.data.RARoad8 +
    this.state.data.RARoad9 + this.state.data.RARoad10 + this.state.data.RARoad11 + 
    this.state.data.RARoad12 + this.state.data.RARoad13 + this.state.data.RARoad14 + 
    this.state.data.RARoad15 + this.state.data.RARoad16 + this.state.data.RARoad17 + 
    this.state.data.RARoad18 + this.state.data.RARoad19 + this.state.data.RARoad20 +
    this.state.data.RARoad21 + this.state.data.RARoad22 + this.state.data.RARoad23 + 
    this.state.data.RARoad24 + this.state.data.RARoad25 ;  
    let errors = this.state.errors;
    let name = "RARoad";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetRARoadError();
 
   if(this.state.data.RARoad === ""  || ((isNaN(this.state.data.RARoad) === false) 
   && (this.state.data.RARoad.match(/^[ ]*$/))))
   { 
    let errors = this.state.errors;
    let name = "RARoad";
    this.setState(errors);
    errors[name] = "*Please enter your Representative assesssee Road / Street / Lane / Post Office";
 
       this.state.isModalEnabled =  false;
       this.HighlightRARoadError();
    }
   else if (typeof  this.state.data.RARoad !== "undefined") {
       if (!this.state.data.RARoad.match(/^[a-zA-Z0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "RARoad";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";

           this.state.isModalEnabled =  false;
           this.HighlightRARoadError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateRAArea(event) {
         
 this.state.data.RAArea = this.state.data.RAArea1 + this.state.data.RAArea2 +
    this.state.data.RAArea3 + this.state.data.RAArea4 + this.state.data.RAArea5 + 
    this.state.data.RAArea6 + this.state.data.RAArea7 + this.state.data.RAArea8 +
    this.state.data.RAArea9 + this.state.data.RAArea10 + this.state.data.RAArea11 + 
    this.state.data.RAArea12 + this.state.data.RAArea13 + this.state.data.RAArea14 + 
    this.state.data.RAArea15 + this.state.data.RAArea16 + this.state.data.RAArea17 + 
    this.state.data.RAArea18 + this.state.data.RAArea19 + this.state.data.RAArea20 +
    this.state.data.RAArea21 + this.state.data.RAArea22 + this.state.data.RAArea23 + 
    this.state.data.RAArea24 + this.state.data.RAArea25 ;   

    let errors = this.state.errors;
    let name = "RAArea";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetRAAreaError();
 
   if(this.state.data.RAArea === "" || (isNaN(this.state.data.RAArea) === false))
   { 

    let errors = this.state.errors;
    let name = "RAArea";
    this.setState(errors);
    errors[name] = "*Please enter your Representative assesssee Area / Locality / Taluka / Sub-division";
 
       this.state.isModalEnabled =  false;
       this.HighlightRAAreaError();
    }
   else if (typeof  this.state.data.RAArea !== "undefined") {
       if (!this.state.data.RAArea.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "RAArea";
        this.setState(errors);
        errors[name] = "*Please enter alphanumeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightRAAreaError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateRATown(event) {
         
this.state.data.RATown = this.state.data.RATown1 + this.state.data.RATown2 +
    this.state.data.RATown3 + this.state.data.RATown4 + this.state.data.RATown5 + 
    this.state.data.RATown6 + this.state.data.RATown7 + this.state.data.RATown8 +
    this.state.data.RATown9 + this.state.data.RATown10 + this.state.data.RATown11 + 
    this.state.data.RATown12 + this.state.data.RATown13 + this.state.data.RATown14 + 
    this.state.data.RATown15 + this.state.data.RATown16 + this.state.data.RATown17 + 
    this.state.data.RATown18 + this.state.data.RATown19 + this.state.data.RATown20 +
    this.state.data.RATown21 + this.state.data.RATown22 + this.state.data.RATown23 + 
    this.state.data.RATown24 + this.state.data.RATown25 ;   

    let errors = this.state.errors;
    let name = "RATown";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetRATownError();
 
   if(this.state.data.RATown === "" || (isNaN(this.state.data.RATown) === false))
   { 
    let errors = this.state.errors;
    let name = "RATown";
    this.setState(errors);
    errors[name] = "*Please enter your Representative assesssee Town / City / District";
 
       this.state.isModalEnabled =  false;
       this.HighlightRATownError();
  }
   else if (typeof  this.state.data.RATown !== "undefined") {
       if (!this.state.data.RATown.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "RATown";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightRATownError();

       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   
}


async validateAadhaarFirstName(event) {
         

   this.state.data.AadhaarFirstName = this.state.data.AadhaarFirstName1 + this.state.data.AadhaarFirstName2 +
         this.state.data.AadhaarFirstName3 + this.state.data.AadhaarFirstName4 + this.state.data.AadhaarFirstName5 + 
         this.state.data.AadhaarFirstName6 + this.state.data.AadhaarFirstName7 + this.state.data.AadhaarFirstName8 +
         this.state.data.AadhaarFirstName9 + this.state.data.AadhaarFirstName10 + this.state.data.AadhaarFirstName11 + 
         this.state.data.AadhaarFirstName12 + this.state.data.AadhaarFirstName13 + this.state.data.AadhaarFirstName14 + 
         this.state.data.AadhaarFirstName15 + this.state.data.AadhaarFirstName16 + this.state.data.AadhaarFirstName17 + 
         this.state.data.AadhaarFirstName18 + this.state.data.AadhaarFirstName19 + this.state.data.AadhaarFirstName20 +
         this.state.data.AadhaarFirstName21 + this.state.data.AadhaarFirstName22 + this.state.data.AadhaarFirstName23 + 
         this.state.data.AadhaarFirstName24 + this.state.data.AadhaarFirstName25 ;

         let errors = this.state.errors;
         let name = "AadhaarFirstName";
         this.setState(errors);
         errors[name] = "";
  
   this.ResetAadhaarFirstNameError();

  if (typeof  this.state.data.AadhaarFirstName !== "undefined") {
       if (!this.state.data.AadhaarFirstName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "AadhaarFirstName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightAadhaarFirstNameError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateAadhaarLastName(event) {
         
  this.state.data.AadhaarLastName = this.state.data.AadhaarLastName1 + this.state.data.AadhaarLastName2 +
         this.state.data.AadhaarLastName3 + this.state.data.AadhaarLastName4 + this.state.data.AadhaarLastName5 + 
         this.state.data.AadhaarLastName6 + this.state.data.AadhaarLastName7 + this.state.data.AadhaarLastName8 +
         this.state.data.AadhaarLastName9 + this.state.data.AadhaarLastName10 + this.state.data.AadhaarLastName11 + 
         this.state.data.AadhaarLastName12 + this.state.data.AadhaarLastName13 + this.state.data.AadhaarLastName14 + 
         this.state.data.AadhaarLastName15 + this.state.data.AadhaarLastName16 + this.state.data.AadhaarLastName17 + 
         this.state.data.AadhaarLastName18 + this.state.data.AadhaarLastName19 + this.state.data.AadhaarLastName20 +
         this.state.data.AadhaarLastName21 + this.state.data.AadhaarLastName22 + this.state.data.AadhaarLastName23 + 
         this.state.data.AadhaarLastName24 + this.state.data.AadhaarLastName25 ;

         let errors = this.state.errors;
         let name = "AadhaarLastName";
         this.setState(errors);
         errors[name] = "";
   
   this.ResetAadhaarLastNameError();
   

   if(this.state.data.AadhaarLastName === "" || (isNaN(this.state.data.AadhaarLastName) === false))
   { 

    let errors = this.state.errors;
    let name = "AadhaarLastName";
    this.setState(errors);
    errors[name] = "*Please enter your Name as in Aadhaar Card or Enrolment Id";
 
       this.state.isModalEnabled =  false;
       this.HighlightAadhaarLastNameError();
    }
   else if (typeof  this.state.data.AadhaarLastName !== "undefined") {
       if (!this.state.data.AadhaarLastName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "AadhaarLastName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
  
           this.state.isModalEnabled =  false;
           this.HighlightAadhaarLastNameError();
        }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateAadhaarMiddleName(event) {
         
    this.state.data.AadhaarMiddleName = this.state.data.AadhaarMiddleName1 + this.state.data.AadhaarMiddleName2 +
         this.state.data.AadhaarMiddleName3 + this.state.data.AadhaarMiddleName4 + this.state.data.AadhaarMiddleName5 + 
         this.state.data.AadhaarMiddleName6 + this.state.data.AadhaarMiddleName7 + this.state.data.AadhaarMiddleName8 +
         this.state.data.AadhaarMiddleName9 + this.state.data.AadhaarMiddleName10 + this.state.data.AadhaarMiddleName11 + 
         this.state.data.AadhaarMiddleName12 + this.state.data.AadhaarMiddleName13 + this.state.data.AadhaarMiddleName14 + 
         this.state.data.AadhaarMiddleName15 + this.state.data.AadhaarMiddleName16 + this.state.data.AadhaarMiddleName17 + 
         this.state.data.AadhaarMiddleName18 + this.state.data.AadhaarMiddleName19 + this.state.data.AadhaarMiddleName20 +
         this.state.data.AadhaarMiddleName21 + this.state.data.AadhaarMiddleName22 + this.state.data.AadhaarMiddleName23 + 
         this.state.data.AadhaarMiddleName24 + this.state.data.AadhaarMiddleName25 ;

         let errors = this.state.errors;
         let name = "AadhaarMiddleName";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetAadhaarMiddleNameError();
   
   if (typeof  this.state.data.AadhaarMiddleName !== "undefined") {
       if (!this.state.data.AadhaarMiddleName.match(/^[a-zA-Z ]*$/)) {

        let errors = this.state.errors;
        let name = "AadhaarMiddleName";
        this.setState(errors);
        errors[name] = "*Please enter alphabet characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightAadhaarMiddleNameError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateAadhaarNumber(event) {
         
 this.state.data.AadhaarNumber = this.state.data.AadhaarNumber1 + this.state.data.AadhaarNumber2 +
    this.state.data.AadhaarNumber3 + this.state.data.AadhaarNumber4 + this.state.data.AadhaarNumber5 + 
    this.state.data.AadhaarNumber6 + this.state.data.AadhaarNumber7 + this.state.data.AadhaarNumber8 +
    this.state.data.AadhaarNumber9 + this.state.data.AadhaarNumber10 + this.state.data.AadhaarNumber11 + 
    this.state.data.AadhaarNumber12;

    let errors = this.state.errors;
    let name = "AadhaarNumber";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetAadhaarNumberError();
    
   if(this.state.errors.AadhaarNumber === "*Please enter your Aadhaar Number or Enrolment Id")
   {
    let errors = this.state.errors;
    let name = "AadhaarNumber";
    this.setState(errors);
    errors[name] = "";
    this.ResetAadhaarNumberError();
 
   }

   if(this.state.errors.EnrolmentId === "*Please enter your Aadhaar Number or Enrolment Id")
   {
    let errors1 = this.state.errors;
    let name1 = "EnrolmentId";
    this.setState(errors1);
    errors1[name1] = "";
    this.ResetEnrolmentIdError();
 
   }
   
   if(this.state.data.AadhaarNumber === "" || ((isNaN(this.state.data.AadhaarNumber) === false) 
   && (this.state.data.AadhaarNumber.match(/^[ ]*$/))))  
   { 
    let errors = this.state.errors;
    let name = "AadhaarNumber";
    this.setState(errors);
    errors[name] = "*Please enter your Aadhaar Number or Enrolment Id";
 
       this.state.isModalEnabled =  false;
       this.HighlightAadhaarNumberError();
   } 
   else if (typeof  this.state.data.AadhaarNumber !== "undefined") {
       if (!this.state.data.AadhaarNumber.match(/^([0-9]{12})*$/)) {

        let errors = this.state.errors;
        let name = "AadhaarNumber";
        this.setState(errors);
        errors[name] = "*Please enter numeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightAadhaarNumberError();
       }
       
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateEnrolmentId(event) {
         
    this.state.data.EnrolmentId = this.state.data.EnrolmentId1 + this.state.data.EnrolmentId2 +
    this.state.data.EnrolmentId3 + this.state.data.EnrolmentId4 + this.state.data.EnrolmentId5 + 
    this.state.data.EnrolmentId6 + this.state.data.EnrolmentId7 + this.state.data.EnrolmentId8 +
    this.state.data.EnrolmentId9 + this.state.data.EnrolmentId10 + this.state.data.EnrolmentId11 + 
    this.state.data.EnrolmentId12 + this.state.data.EnrolmentId13 + this.state.data.EnrolmentId14 + 
    this.state.data.EnrolmentId15 + this.state.data.EnrolmentId16 + this.state.data.EnrolmentId17 + 
    this.state.data.EnrolmentId18 + this.state.data.EnrolmentId19 + this.state.data.EnrolmentId20 +
    this.state.data.EnrolmentId21 + this.state.data.EnrolmentId22 + this.state.data.EnrolmentId23 + 
    this.state.data.EnrolmentId24 + this.state.data.EnrolmentId25 + this.state.data.EnrolmentId26 + 
    this.state.data.EnrolmentId27 + this.state.data.EnrolmentId28;

    let errors = this.state.errors;
    let name = "EnrolmentId";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetEnrolmentIdError();
   this.ResetAadhaarNumberError();

   if(this.state.errors.AadhaarNumber === "*Please enter your Aadhaar Number or Enrolment Id")
   {
    let errors = this.state.errors;
    let name = "AadhaarNumber";
    this.setState(errors);
    errors[name] = "";
    this.ResetAadhaarNumberError();
 
   }
   
   if((this.state.data.EnrolmentId === "") || ((isNaN(this.state.data.EnrolmentId) === false) 
   && (this.state.data.EnrolmentId.match(/^[ ]*$/))))  
   { 
    let errors = this.state.errors;
    let name = "EnrolmentId";
    this.setState(errors);
    errors[name] = "*Please enter your Aadhaar Number or Enrolment Id";
 
       this.state.isModalEnabled =  false;
       this.HighlightEnrolmentIdError();
   }
   else if (typeof  this.state.data.EnrolmentId !== "undefined") {
       if (!this.state.data.EnrolmentId.match(/^[0-9 ]*$/)) {

        let errors = this.state.errors;
        let name = "EnrolmentId";
        this.setState(errors);
        errors[name] = "*Please enter numeric characters only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightEnrolmentIdError();
       }
       
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
   
}


async validateRegistrationNumber(event) {
         
    this.state.data.RegistrationNumber = this.state.data.RegistrationNumber1 + this.state.data.RegistrationNumber2 +
         this.state.data.RegistrationNumber3 + this.state.data.RegistrationNumber4 + this.state.data.RegistrationNumber5 + 
         this.state.data.RegistrationNumber6 + this.state.data.RegistrationNumber7 + this.state.data.RegistrationNumber8 +
         this.state.data.RegistrationNumber9 + this.state.data.RegistrationNumber10 + this.state.data.RegistrationNumber11 + 
         this.state.data.RegistrationNumber12 + this.state.data.RegistrationNumber13 + this.state.data.RegistrationNumber14 + 
         this.state.data.RegistrationNumber15 + this.state.data.RegistrationNumber16 + this.state.data.RegistrationNumber17 + 
         this.state.data.RegistrationNumber18 + this.state.data.RegistrationNumber19 + this.state.data.RegistrationNumber20 +
         this.state.data.RegistrationNumber21 + this.state.data.RegistrationNumber22 + this.state.data.RegistrationNumber23 + 
         this.state.data.RegistrationNumber24 + this.state.data.RegistrationNumber25 + this.state.data.RegistrationNumber26 + 
         this.state.data.RegistrationNumber27 + this.state.data.RegistrationNumber28 + this.state.data.RegistrationNumber29 + 
         this.state.data.RegistrationNumber30 

         let errors = this.state.errors;
         let name = "RegistrationNumber";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetRegistrationNumberError();


   if((this.state.data.RegistrationNumber === "") || ((isNaN(this.state.data.RegistrationNumber) === false) 
   && (this.state.data.RegistrationNumber.match(/^[ ]*$/))))  
   { 
    let errors = this.state.errors;
    let name = "RegistrationNumber";
    this.setState(errors);
    errors[name] = "*Please enter valid RegistrationNumber";

       this.state.isModalEnabled =  false;
       this.HighlightRegistrationNumberError();
   
   }
   else if (typeof  this.state.data.RegistrationNumber !== "undefined") {
       if (!this.state.data.RegistrationNumber.match(/^[0-9]*$/)) {

        let errors = this.state.errors;
        let name = "RegistrationNumber";
        this.setState(errors);
        errors[name] = "*Please enter valid RegistrationNumber";
 
           this.state.isModalEnabled =  false;
           this.HighlightRegistrationNumberError();
       }
   }
   
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

 
async validateResidencePincode(event) {
         
this.state.data.ResidencePincode = this.state.data.ResidencePincode1 + this.state.data.ResidencePincode2 +
    this.state.data.ResidencePincode3 + this.state.data.ResidencePincode4 + this.state.data.ResidencePincode5 + 
    this.state.data.ResidencePincode6 + this.state.data.ResidencePincode7;

    let errors = this.state.errors;
    let name = "ResidencePincode";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetResidencePincodeError();
 
   if(this.state.data.ResidencePincode === "" )
   { 
    let errors = this.state.errors;
    let name = "ResidencePincode";
    this.setState(errors);
    errors[name] = "*Please enter your Residence Pincode";

       this.state.isModalEnabled =  false;
       this.HighlightResidencePincodeError();

   }
   else if (typeof  this.state.data.ResidencePincode !== "undefined") {
       if (!this.state.data.ResidencePincode.match(/^[1-9][0-9]*$/)) {

        let errors = this.state.errors;
        let name = "ResidencePincode";
        this.setState(errors);
        errors[name] = "*Please enter valid pincode";
 
           this.state.isModalEnabled =  false;
           // console.log(this.state.data.ResidencePincode)
           this.HighlightResidencePincodeError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}



async validateOfficePincode(event) {
         
 this.state.data.OfficePincode = this.state.data.OfficePincode1 + this.state.data.OfficePincode2 +
    this.state.data.OfficePincode3 + this.state.data.OfficePincode4 + this.state.data.OfficePincode5 + 
    this.state.data.OfficePincode6 + this.state.data.OfficePincode7 

    let errors = this.state.errors;
    let name = "OfficePincode";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetOfficePincodeError();
   
    if(this.state.data.Communication === "17")
    {
        if(this.state.data.OfficePincode === "" || (this.state.data.OfficePincode.match(/^[ ]*$/)))
        { 
            let errors = this.state.errors;
            let name = "OfficePincode";
            this.setState(errors);
            errors[name] = "*Please enter your Office Pincode";
 
            this.state.isModalEnabled =  false;
            this.HighlightOfficePincodeError();
        }

        if (typeof  this.state.data.OfficePincode !== "undefined") {
            if (!this.state.data.OfficePincode.match(/^[1-9][0-9]*$/)) {
             let errors = this.state.errors;
             let name = "OfficePincode";
             this.setState(errors);
             errors[name] = "*Please enter valid pincode";
      
                this.state.isModalEnabled =  false;
                this.HighlightOfficePincodeError();
            }
        }
    }
    else if (typeof  this.state.data.OfficePincode !== "undefined") {
       if (!this.state.data.OfficePincode.match(/^[1-9][0-9]*$/)) {
        let errors = this.state.errors;
        let name = "OfficePincode";
        this.setState(errors);
        errors[name] = "*Please enter valid pincode";
 
           this.state.isModalEnabled =  false;
           this.HighlightOfficePincodeError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

 

async validateRAPincode(event) {
         
 this.state.data.RAPincode = this.state.data.RAPincode1 + this.state.data.RAPincode2 +
    this.state.data.RAPincode3 + this.state.data.RAPincode4 + this.state.data.RAPincode5 + 
    this.state.data.RAPincode6 + this.state.data.RAPincode7 

    let errors = this.state.errors;
    let name = "RAPincode";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetRAPincodeError();
   
   if(this.state.data.RAPincode === "")
   { 
    let errors = this.state.errors;
    let name = "RAPincode";
    this.setState(errors);
    errors[name] = "*Please enter your Representative Assessee's Pincode";
 
       this.state.isModalEnabled =  false;
       this.HighlightRAPincodeError();
   }
   else if (typeof  this.state.data.RAPincode !== "undefined") {
       if (!this.state.data.RAPincode.match(/^[1-9][0-9]*$/)) {

        let errors = this.state.errors;
        let name = "RAPincode";
        this.setState(errors);
        errors[name] = "*Please enter valid pincode";
 
           this.state.isModalEnabled =  false;
           this.HighlightRAPincodeError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
}

async validateCountryCode(event) {
         
  this.state.data.CountryCode = this.state.data.CountryCode1 + this.state.data.CountryCode2 +
    this.state.data.CountryCode3;

    let errors = this.state.errors;
    let name = "CountryCode";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetCountryCodeError();
 
   if(this.state.data.CountryCode === "")
   { 
    let errors = this.state.errors;
    let name = "CountryCode";
    this.setState(errors);
    errors[name] = "*Please enter your Country Code";
 
       this.state.isModalEnabled =  false;
       this.HighlightCountryCodeError();
   }
   else if (typeof  this.state.data.CountryCode !== "undefined") {
       if (!this.state.data.CountryCode.match(/^[0-9]*$/)) {

        let errors = this.state.errors;
        let name = "CountryCode";
        this.setState(errors);
        errors[name] = "*Please enter numbers only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightCountryCodeError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validateStdCode(event) {
         
this.state.data.StdCode = this.state.data.StdCode1 + this.state.data.StdCode2 +
    this.state.data.StdCode3 + this.state.data.StdCode4 + this.state.data.StdCode5 + 
    this.state.data.StdCode6 + this.state.data.StdCode7 ;

    let errors = this.state.errors;
    let name = "StdCode";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetStdCodeError();
 
   if(this.state.data.StdCode === "")
   { 
    let errors = this.state.errors;
    let name = "StdCode";
    this.setState(errors);
    errors[name] = "*Please enter your Std Code";
 
       this.state.isModalEnabled =  false;
       this.HighlightStdCodeError();
   }
   else if (typeof  this.state.data.StdCode !== "undefined") {
       if (!this.state.data.StdCode.match(/^[0-9]*$/)) {

        let errors = this.state.errors;
        let name = "StdCode";
        this.setState(errors);
        errors[name] = "*Please enter numbers only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightStdCodeError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

}


async validatePhoneNumber(event) {
         
 this.state.data.PhoneNumber = this.state.data.PhoneNumber1 + this.state.data.PhoneNumber2 +
    this.state.data.PhoneNumber3 + this.state.data.PhoneNumber4 + this.state.data.PhoneNumber5 + 
    this.state.data.PhoneNumber6 + this.state.data.PhoneNumber7 + this.state.data.PhoneNumber8 +
    this.state.data.PhoneNumber9 + this.state.data.PhoneNumber10 + this.state.data.PhoneNumber11 + 
    this.state.data.PhoneNumber12 + this.state.data.PhoneNumber13 

    let errors = this.state.errors;
    let name = "PhoneNumber";
    this.setState(errors);
    errors[name] = "";
 
   this.ResetPhoneNumberError()
  
 
   if(this.state.data.PhoneNumber === "")
   { 
    let errors = this.state.errors;
    let name = "PhoneNumber";
    this.setState(errors);
    errors[name] = "*Please enter your Phone Number";
 
       this.state.isModalEnabled =  false;
       this.HighlightPhoneNumberError();
   }
   else if (typeof  this.state.data.PhoneNumber !== "undefined") {
       if (!this.state.data.PhoneNumber.match(/^([0-9+])*$/)) {
        let errors = this.state.errors;
        let name = "PhoneNumber";
        this.setState(errors);
        errors[name] = "*Please enter numbers only.";
 
           this.state.isModalEnabled =  false;
           this.HighlightPhoneNumberError();
       }
   }
 
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   
}

async validateDay(event) {
         
   this.state.data.Day = this.state.data.Day1 + this.state.data.Day2 ;

   let errors = this.state.errors;
   let name = "Day";
   this.setState(errors);
   errors[name] = "";
 
   this.ResetDayError();
   
   if(this.state.data.Day === "")
   { 
    let errors = this.state.errors;
    let name = "Day";
    this.setState(errors);
    errors[name] = "*Please enter your Birth Day";
 
       this.state.isModalEnabled =  false;
       this.HighlightDayError();
   }
   else if (typeof  this.state.data.Day !== "undefined") {
       if (!this.state.data.Day.match(/^(0?[1-9]|[12][0-9]|3[01])$/)) {

        let errors = this.state.errors;
        let name = "Day";
        this.setState(errors);
        errors[name] = "*Please enter valid Day";
       
           this.state.isModalEnabled =  false;
           this.HighlightDayError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}

async validateMonth(event) {
         
   this.state.data.Month = this.state.data.Month1 + this.state.data.Month2 ;

   let errors = this.state.errors;
   let name = "Month";
   this.setState(errors);
   errors[name] = "";
 
   this.ResetMonthError();
   
   
   if(this.state.data.Month === "")
   { 
    let errors = this.state.errors;
    let name = "Month";
    this.setState(errors);
    errors[name] = "*Please enter your Birth Month";
 
       this.state.isModalEnabled =  false;
       this.HighlightMonthError();
   }
   else if (typeof  this.state.data.Month !== "undefined") {
       if (!this.state.data.Month.match(/^(0[1-9]|1[0-2])$/)) {

        let errors = this.state.errors;
        let name = "Month";
        this.setState(errors);
        errors[name] = "*Please enter valid month";
 
           this.state.isModalEnabled =  false;
           this.HighlightMonthError();
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
}

async validateYear(event) {
         
    this.state.data.Year = this.state.data.Year1 + this.state.data.Year2 +
         this.state.data.Year3 + this.state.data.Year4;

         let errors = this.state.errors;
         let name = "Year";
         this.setState(errors);
         errors[name] = "";
 
   this.ResetYearError();
   
   if(this.state.data.Year === "")
   { 
    let errors = this.state.errors;
    let name = "Year";
    this.setState(errors);
    errors[name] = "*Please enter your Birth Year";
 
       this.state.isModalEnabled =  false;
       this.HighlightYearError();
   }
   else if (typeof  this.state.data.Year !== "undefined") {
       if (!this.state.data.Year.match(/^(19|20)\d{2}$/)) {

        let errors = this.state.errors;
        let name = "Year";
        this.setState(errors);
        errors[name] = "*Please enter valid Year";
 
           this.state.isModalEnabled =  false;
           this.HighlightYearError();
       }
   }
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
   
}


async validatephonenumber(event) {
         
   this.handleInput(event);

   let errors = this.state.errors;
   let name = "phonenumber";
   this.setState(errors);
   errors[name] = "";
 
   $('#phonenumber').css('border-color', '')
 
   if(this.state.data.phonenumber === "" )
   { 
    let errors = this.state.errors;
    let name = "phonenumber";
    this.setState(errors);
    errors[name] = "*Please enter your phonenumber";
 
       $('#phonenumber').css('border-color', "red")
   }
   else if (typeof  this.state.data.phonenumber !== "undefined") {
       if (!this.state.data.phonenumber.match(/^\d{4}$/)) {
        let errors = this.state.errors;
        let name = "phonenumber";
        this.setState(errors);
        errors[name] = "*Please enter valid phonenumber";
 
           $('#phonenumber').css('border-color', "red")
       }
   }
 
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

}

handleInput = (event) => {

   let temp = this.state.data;
   let {name,value} =event.target;
   temp[name] = value;
   this.setState({temp});

   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
  
 }


   
  handleResidenceState = (event) => {

    let ResidenceState = this.state.data;
    let {name,value} =event.target;
    this.setState(ResidenceState);
    ResidenceState[name] = value;  

    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));

    let errors = this.state.errors;
    let name1 = "ResidenceState";
    this.setState(errors);
    errors[name1] = "";
 
    let textPattern = /^[a-zA-Z ]*$/ 
    $('#ResidenceState').css('border-color', '')
   

    if(this.state.data.ResidenceState === "" || (isNaN(this.state.data.ResidenceState) === false))
    { 
        let errors = this.state.errors;
        let name1 = "ResidenceState";
        this.setState(errors);
        errors[name1] = "*Please enter your Residence State";
 
     
        let isModalEnabled = this.state.isModalEnabled;
        isModalEnabled = false;
        this.setState({isModalEnabled   });
        $('#ResidenceState').css('border-color', "red")
         
    }
    else if (typeof  this.state.data.ResidenceState !== "undefined") {
        if (!textPattern.test(this.state.data.ResidenceState)) {
            let errors = this.state.errors;
            let name1 = "ResidenceState";
            this.setState(errors);
            errors[name1] = "*Please enter alphabet characters only.";
     
            let isModalEnabled = this.state.isModalEnabled;
            isModalEnabled = false;
            this.setState({isModalEnabled});
            $('#ResidenceState').css('border-color', "red")

        }
    }
 
  }


  handleResidenceCountry = (event) => {

   let ResidenceCountry = this.state.data;
   let {name,value} =event.target;
   this.setState(ResidenceCountry);
   ResidenceCountry[name] = value;  
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
   let errors = this.state.errors;
   let name1 = "ResidenceCountry";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#ResidenceCountry').css('border-color', '')
  

   if(this.state.data.ResidenceCountry === "" || (isNaN(this.state.data.ResidenceCountry) === false))
   { 
    let errors = this.state.errors;
    let name1 = "ResidenceCountry";
    this.setState(errors);
    errors[name1] = "*Please enter your Residence Country";

    
       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#ResidenceCountry').css('border-color', "red")
   }
   else if (typeof  this.state.data.ResidenceCountry !== "undefined") {
       if (!textPattern.test(this.state.data.ResidenceCountry)) {
        let errors = this.state.errors;
        let name1 = "ResidenceCountry";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#ResidenceCountry').css('border-color', "red")
       }
   }
 
 }


 handleOfficeState = (event) => {

   let OfficeState = this.state.data;
   let {name,value} =event.target;
   this.setState(OfficeState);
   OfficeState[name] = value;  
   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1 = "OfficeState";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#OfficeState').css('border-color', '')
  

   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficeState === "" || (isNaN(this.state.data.OfficeState) === false))
    { 
        let errors = this.state.errors;
        let name1 = "OfficeState";
        this.setState(errors);
        errors[name1] = "*Please enter your Office State";
 
        let val = this.state.isModalEnabled;
        val = false;
        this.setState({val});
        $('#OfficeState').css('border-color', "red")
    }

    if (typeof  this.state.data.OfficeState !== "undefined") {
        if (!textPattern.test(this.state.data.OfficeState)) {
 
         let errors = this.state.errors;
         let name1 = "OfficeState";
         this.setState(errors);
         errors[name1] = "*Please enter alphabet characters only.";
           
            let val = this.state.isModalEnabled;
            val = false;
            this.setState({val});
            $('#OfficeState').css('border-color', "red")
        }
    }
  
   }
   else if (typeof  this.state.data.OfficeState !== "undefined") {
       if (!textPattern.test(this.state.data.OfficeState)) {

        let errors = this.state.errors;
        let name1 = "OfficeState";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
          
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#OfficeState').css('border-color', "red")
       }
   }
 
 }


 handleOfficeCountry = (event) => {

   let OfficeCountry = this.state.data;
   let {name,value} =event.target;
   this.setState(OfficeCountry);
   OfficeCountry[name] = value;  
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "OfficeCountry";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#OfficeCountry').css('border-color', '')
  
   if(this.state.data.Communication === "17")
   {
    if(this.state.data.OfficeCountry === "" || (isNaN(this.state.data.OfficeCountry) === false))
    { 
        let errors = this.state.errors;
        let name1= "OfficeCountry";
        this.setState(errors);
        errors[name1] = "*Please enter your OfficeCountry";

        this.state.isModalEnabled =  false;
        $('#OfficeCountry').css('border-color', "red")
    }

    if (typeof  this.state.data.OfficeCountry !== "undefined") {
        if (!textPattern.test(this.state.data.OfficeCountry)) {
 
         let errors = this.state.errors;
         let name1= "OfficeCountry";
         this.setState(errors);
         errors[name1] = "*Please enter alphabet characters only.";
  
            let val = this.state.isModalEnabled;
            val = false;
            this.setState({val});
            $('#OfficeCountry').css('border-color', "red")
        }
    }

   }
   else if (typeof  this.state.data.OfficeCountry !== "undefined") {
       if (!textPattern.test(this.state.data.OfficeCountry)) {

        let errors = this.state.errors;
        let name1= "OfficeCountry";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#OfficeCountry').css('border-color', "red")
       }
   }
}

 handleRAState = (event) => {

   let RAState = this.state.data;
   let {name,value} =event.target;
   this.setState(RAState);
   RAState[name] = value;  
   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "RAState";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#RAState').css('border-color', '')
  
   
   if(this.state.data.RAState === "" || (isNaN(this.state.data.RAState) === false))
   {
    let errors = this.state.errors;
    let name1= "RAState";
    this.setState(errors);
    errors[name1] = "*Please enter your Representative Assessee's State";
 
       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#RAState').css('border-color', "red")
   }
   else if (typeof  this.state.data.RAState !== "undefined") {
       if (!textPattern.test(this.state.data.RAState)) {

        let errors = this.state.errors;
        let name1= "RAState";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#RAState').css('border-color', "red")
       }
   }

 }


 handlePOI = (event) => {

   let POI = this.state.data;
   let {name,value} =event.target;
   this.setState(POI);
   POI[name] = value;  
   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "POI";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#POI').css('border-color', '')
  
   
   if(this.state.data.POI === "" || (isNaN(this.state.data.POI) === false))
   { 
    let errors = this.state.errors;
    let name1= "POI";
    this.setState(errors);
    errors[name1] = "*Please enter your Proof Of Identity";
 
       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#POI').css('border-color', "red")
   }
   else if (typeof  this.state.data.POI !== "undefined") {
       if (!textPattern.test(this.state.data.POI)) {
        let errors = this.state.errors;
        let name1= "POI";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";

           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#POI').css('border-color', "red")
       }
   }
 
 }


 handlePOA = (event) => {

   let POA = this.state.data;
   let {name,value} =event.target;
   this.setState(POA);
   POA[name] = value;  
    
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "POA";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#POA').css('border-color', '')
  
   
   if(this.state.data.POA === "" || (isNaN(this.state.data.POA) === false))
   { 
    let errors = this.state.errors;
    let name1= "POA";
    this.setState(errors);
    errors[name1] = "*Please enter your Proof Of Address";

       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#POA').css('border-color', "red")
   }
   else if (typeof  this.state.data.POA !== "undefined") {
       if (!textPattern.test(this.state.data.POA)) {
        let errors = this.state.errors;
        let name1= "POA";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 

           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#POA').css('border-color', "red")
       }
   }
 
 }


 handlePOB = (event) => {

   let POB = this.state.data;
   let {name,value} =event.target;
   this.setState(POB);
   POB[name] = value;  
     
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "POB";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#POB').css('border-color', '')
  
   
   if(this.state.data.POB === "" || (isNaN(this.state.data.POB) === false))
   {  
    let errors = this.state.errors;
    let name1= "POB";
    this.setState(errors);
    errors[name1] = "*Please enter your Proof Of Birth";

       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#POB').css('border-color', "red")
   }
   else if (typeof  this.state.data.POB !== "undefined") {
       if (!textPattern.test(this.state.data.POB)) {
        let errors = this.state.errors;
        let name1= "POB";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#POB').css('border-color', "red")
       }
   }

 }


 handleApplicant = (event) => {

   let Applicant = this.state.data;
   let {name,value} =event.target;
   this.setState(Applicant);
   Applicant[name] = value;  
   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

   let errors = this.state.errors;
   let name1= "Applicant";
   this.setState(errors);
   errors[name1] = "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#Applicant').css('border-color', '')
  
   
   if(this.state.data.Applicant === "" || (isNaN(this.state.data.Applicant) === false))
   { 
    let errors = this.state.errors;
    let name1= "Applicant";
    this.setState(errors);
    errors[name1] = "*Please enter your Applicant's name";

       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#Applicant').css('border-color', "red")
   }
   else if (typeof  this.state.data.Applicant !== "undefined") {
       if (!textPattern.test(this.state.data.Applicant)) {

        let errors = this.state.errors;
        let name1= "Applicant";
        this.setState(errors);
        errors[name1] = "*Please enter alphabet characters only.";
 
           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#Applicant').css('border-color', "red")
       }
   }
 
 }

 handleCapacity = (event) => {

   let temp = this.state.data;
   let {name,value} =event.target;
   this.setState(temp);
   temp[name] = value;  
   
   localStorage.setItem('localdata', JSON.stringify(this.state.data));
   localStorage.setItem('localerror', JSON.stringify(this.state.errors));

//    let errors = this.state.errors;
//    let name1= "Capacity";
//    this.setState(errors);
//    errors[name1] = "";
   this.state.errors.Capacity =  "";
 
   let textPattern = /^[a-zA-Z ]*$/ 
   $('#Capacity').css('border-color', '')
  
   
   if(this.state.data.Capacity === "" || this.state.data.Capacity === " " || ( (isNaN(this.state.data.Capacity ) === false) 
    && (this.state.data.Capacity.match(/^[ ]*$/))))
   { 
    
    // let errors = this.state.errors;
    // let name1= "Capacity";
    // this.setState(errors);
    // errors[name1] = "*Please enter your Capacity";
    // console.log("works")
    this.state.errors.Capacity =  "*Please enter your Capacity";
   
       let val = this.state.isModalEnabled;
       val = false;
       this.setState({val});
       $('#Capacity').css('border-color', "red")
   }
   else if (typeof  this.state.data.Capacity !== "undefined") {
       if (!textPattern.test(this.state.data.Capacity)) {

        // let errors = this.state.errors;
        // let name1= "Capacity";
        // this.setState(errors);
        // errors[name1] = "*Please enter alphabet characters only.";
        this.state.errors.Capacity = "*Please enter alphabet characters only.";

           let val = this.state.isModalEnabled;
           val = false;
           this.setState({val});
           $('#Capacity').css('border-color', "red")
       }
   }

   let error = this.state.errors.Capacity;
   this.setState({error});
 }


 handleEmail = (event) => {

  let Email = this.state.data;
  let {name,value} =event.target;
  this.setState(Email);
  Email[name] = value;
  
  localStorage.setItem('localdata', JSON.stringify(this.state.data));
  localStorage.setItem('localerror', JSON.stringify(this.state.errors));
 
  let errors = this.state.errors;
  let name1= "Email";
  this.setState(errors);
  errors[name1] = "";

  let textPattern = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-z\-0-9]+\.)+[a-z]{2,}))$/
  $('#Email').css('border-color', '')

  if(this.state.data.Email === "" || (isNaN(this.state.data.Email) === false))
  {
    let errors = this.state.errors;
    let name1= "Email";
    this.setState(errors);
    errors[name1] = "*Please enter your Email";

      this.state.isModalEnabled =  false;
      $('#Email').css('border-color', "red")
  }
  else if (typeof  this.state.data.Email !== "undefined") {
      if (!textPattern.test(this.state.data.Email)) {
        let errors = this.state.errors;
        let name1= "Email";
        this.setState(errors);
        errors[name1] = "*Please enter valid Email-id";

          this.state.isModalEnabled =  false;
          $('#Email').css('border-color', "red")
      }
  }

 
 }


handleBusinessCode1 = (event) => {    
    this.handleInput(event);
    this.validateBusinessCode(event);  
    (event.target.value === "") ? $( "#BusinessCode1" ).focus() : $( "#BusinessCode2" ).focus();
}

handleBusinessCode2 = (event) => {    
    this.handleInput(event);
    this.validateBusinessCode(event);  
    (event.target.value === "") ? $( "#BusinessCode1" ).focus() : $( "#BusinessCode2" ).focus();
}

ResetBusinessCodeError = () => {
    $('#BusinessCode1').css({'border-top-color': '', 'border-bottom-color': '' , 'border-left-color': ''})
    $('#BusinessCode2').css({'border-top-color': '', 'border-bottom-color': '', 'border-right-color': ''})

}

HighlightBusinessCodeError = () => {

    $('#BusinessCode1').css({'border-top-color': "red", 'border-bottom-color': "red" , 'border-left-color': "red"})
    $('#BusinessCode2').css({'border-top-color': "red", 'border-bottom-color': "red", 'border-right-color': "red"})
    
    
}



async validateBusinessCode(event) {
         
    this.state.data.BusinessCode = this.state.data.BusinessCode1 + this.state.data.BusinessCode2 ;
 
    let errors = this.state.errors;
    let name = "BusinessCode";
    this.setState(errors);
    errors[name] = "";
  
    this.ResetBusinessCodeError();
    
    if(this.state.data.BusinessCode === "")
    { 
     let errors = this.state.errors;
     let name = "BusinessCode";
     this.setState(errors);
     errors[name] = "*Please enter your BusinessCode";
  
        this.state.isModalEnabled =  false;
        this.HighlightBusinessCodeError();
    }
    else if (typeof  this.state.data.BusinessCode !== "undefined") {
        if (!this.state.data.BusinessCode.match(/^(((0|1)?[1-9])|20|10)$/)) {
 
         let errors = this.state.errors;
         let name = "BusinessCode";
         this.setState(errors);
         errors[name] = "*Please enter valid BusinessCode";
        
            this.state.isModalEnabled =  false;
            this.HighlightBusinessCodeError();
        }
    }
  
     
    localStorage.setItem('localdata', JSON.stringify(this.state.data));
    localStorage.setItem('localerror', JSON.stringify(this.state.errors));
    
 }
 


 

  render() {

    const { open } = this.state;
    return (
   <div className="fullcontent">
     <div className="nav">
      <div className="navbar">
       <label className="navtitle">Panform</label>
       <button  className="button button3 navbutton"  onClick={this.onOpenModal}>Download </button>
       <a href="/panform" className="button1 button3 navbutton resetbutton"  onClick={this.handleResetall}>Reset </a>
        </div>
        <Modal   open={open} onClose={this.onCloseModal} center>
            <br />
            <div className="modalhead container">
            <label>Enter your mobile number:</label><br />
            <div className="mobilenumber">
            <OtpInput
             className = ""
             id = "phonenumber"
             numValue={this.state.data.phonenumber}
             numInputs={10}
             onChange={otp => this.handleInputdata(otp,"phonenumber","1")}
           />

           </div>
           <span className="ErrorMsg">{this.state.errors.phonenumber}</span>
           <br />
           <button onClick={this.sendno}>Send OTP</button><br /><br />
           {this.state.check === 1 ?
             <div>
             <div className="otpnumber">
             <OtpInput
               className = ""
               value={this.state.data.otpnumber}
               onChange={otp => this.handleInputdata(otp,"otpnumber","1")}
               numInputs={6}
             />
              </div>
              <br />
              <button onClick={this.sendmsg}>Verify OTP</button><br /><br />
              {this.state.secondcheck === 1 ?
              <div>
               <button onClick={this.savepdf}>Save & Download</button>
                 
               </div>
               : 
               ""
               }
            </div> 
            :
            "" 
            }
            </div>
            </Modal>
                
            </div> <br />

        <div id = "Form1">    
        <div className="Form1" ><br />
           <div className = "box"> 

                <div>
                <table >
                
                 <tbody> 
                  <tr>
                    <td > 
                         <div className="tablebox1">  
                             <br/> <br/>
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> Only</label>  </div>  
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> ‘Individuals’ </label></div>   
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> to affix recent </label> </div> 
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> photograph</label> </div>
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> (3.5 cm x</label> </div> 
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> 2.5 cm)</label> </div>
                         </div>
                         <div className="tablebox11">
                             <div className = "tablebox11Label"> <label className = "tablebox11Label"> Sign / Left Thumb impression </label> </div>
                             <div className = "tablebox11Label"> <label className = "tablebox11Label"> across this photo</label> </div>
                         </div>
                    </td>
                    <td >
                    <div className="column2">
                      
                    <label className="row1"> Form No. 49A</label><br /> 
                    <label className="row2"> Application for Allotment of Permanent Account Number</label><br />
                    <label className="row3">[In the case of Indian Citizens/lndian Companies/Entities incorporated in India/</label><br />
                    <label className="row4">Unincorporated entities formed in India]</label><br />
                    <label className="row5">See Rule 114</label><br />
                    <label className="row6">To avoid mistake (s), please follow the accompanying instructions and examples before filling up the form</label>
                  
                  </div>  
                   </td>
                   <td>   
                       <div className="tablebox2">
                       <br/> <br/>
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> Only</label>  </div>  
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> ‘Individuals’ </label></div>   
                             <div className = "tablebox1Label"> <label className = "tablebox1Label"> to affix recent </label> </div> 
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> photograph</label> </div>
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> (3.5 cm x</label> </div> 
                             <div className = "tablebox1Label"><label className = "tablebox1Label"> 2.5 cm)</label> </div>
                       </div>
                   </td>
                  </tr>
                  </tbody>
                </table>
                <label className = "FirstLabel">Sir, </label> <br/>
                <label className = "FirstLabel">I/We hereby request that a permanent account number be alloted to me/us. </label> <br/>
                <label className = "FirstLabel">I/We give below necessary particulars: </label> <br/>
 
                </div>

                <div className = "content">  
 
                   {/* First Component...... */}
                   <div className = "ColouredLabel "> 
                      <label className = "ColouredLabel"> &nbsp; &nbsp; 1 &nbsp; Full Name (Full expanded name to be mentioned as appearing in proof of identity/date of birth/address documents: initials are not permitted)</label>
                   </div>
                   <br/>


                   <label className="FirstLabel"> Please select title,</label>
                   <label className="Label_with_no_space"> as applicable</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 

                    
                   <input 
                       type="checkbox" 
                       className="Check Check_align" 
                       id="1" 
                       name="NameTitleOne[1][]" 
                       value= "Shri" 
                       onClick={(e)=>this.handleNameTitleOneCheck(e,"NameTitleOne")}/>

                   <label className="Label_with_no_space Check_align"> Shri</label>

                   <input 
                      type="checkbox" 
                      className="Check Check_align"
                      id = "2"
                      name = "NameTitleOne[1][]"
                      value = "Smt."
                      onClick={(e)=>this.handleNameTitleOneCheck(e,"NameTitleOne")}/>

                   <label className="Label_with_no_space Check_align"> Smt.</label>

                   <input 
                      type="checkbox" 
                      className="Check Check_align"
                      id = "3"
                      name = "NameTitleOne[1][]"
                      value = "Kumari"
                      onClick={(e)=>this.handleNameTitleOneCheck(e,"NameTitleOne")}/>

                   <label className="Label_with_no_space Check_align"> Kumari</label>

                   <input 
                      type="checkbox" 
                      className="Check Check_align"
                      id = "4"
                      name = "NameTitleOne[1][]"
                      value = "M/s"
                      onClick={(e)=>this.handleNameTitleOneCheck(e,"NameTitleOne")}/>

                   <label className="Label_with_no_space Check_align"> M/s</label> <br /> 
                    
                
                  
                   <table>
                    <tbody> 
                      <tr>
                         <td className ="first_td">
                            {this.state.name.map((data, index) =>
                               <label className="elements"> {data} <br/> </label>   
                            )}
                         </td>

                         <td className = "secondtd"> 
 
 
                         <div> 
                         <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName1}
                               name = "LastName1"
                               id = "LastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName1", "#LastName1")}
                               onChange = {this.handleLastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName2}
                               name = "LastName2"
                               id = "LastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName1", "#LastName2")}
                               onChange = {this.handleLastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName3}
                               name = "LastName3"
                               id = "LastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName2", "#LastName3")}
                               onChange = {this.handleLastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName4}
                               name = "LastName4"
                               id = "LastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName3", "#LastName4")}
                               onChange = {this.handleLastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName5}
                               name = "LastName5"
                               id = "LastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName4", "#LastName5")}
                               onChange = {this.handleLastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName6}
                               name = "LastName6"
                               id = "LastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName5", "#LastName6")}
                               onChange = {this.handleLastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName7}
                               name = "LastName7"
                               id = "LastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName6", "#LastName7")}
                               onChange = {this.handleLastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName8}
                               name = "LastName8"
                               id = "LastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName7", "#LastName8")}
                               onChange = {this.handleLastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName9}
                               name = "LastName9"
                               id = "LastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName8", "#LastName9")}
                               onChange = {this.handleLastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName10}
                               name = "LastName10"
                               id = "LastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName9", "#LastName10")}
                               onChange = {this.handleLastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName11}
                               name = "LastName11"
                               id = "LastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName10", "#LastName11")}
                               onChange = {this.handleLastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName12}
                               name = "LastName12"
                               id = "LastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName11", "#LastName12")}
                               onChange = {this.handleLastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName13}
                               name = "LastName13"
                               id = "LastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName12", "#LastName13")}
                               onChange = {this.handleLastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName14}
                               name = "LastName14"
                               id = "LastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName13", "#LastName14")}
                               onChange = {this.handleLastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName15}
                               name = "LastName15"
                               id = "LastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName14", "#LastName15")}
                               onChange = {this.handleLastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName16}
                               name = "LastName16"
                               id = "LastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName15", "#LastName16")}
                               onChange = {this.handleLastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName17}
                               name = "LastName17"
                               id = "LastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName16", "#LastName17")}
                               onChange = {this.handleLastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName18}
                               name = "LastName18"
                               id = "LastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName17", "#LastName18")}
                               onChange = {this.handleLastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName19}
                               name = "LastName19"
                               id = "LastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName18", "#LastName19")}
                               onChange = {this.handleLastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName20}
                               name = "LastName20"
                               id = "LastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName19", "#LastName20")}
                               onChange = {this.handleLastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName21}
                               name = "LastName21"
                               id = "LastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName20", "#LastName21")}
                               onChange = {this.handleLastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName22}
                               name = "LastName22"
                               id = "LastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName21", "#LastName22")}
                               onChange = {this.handleLastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName23}
                               name = "LastName23"
                               id = "LastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName22", "#LastName23")}
                               onChange = {this.handleLastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName24}
                               name = "LastName24"
                               id = "LastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName23", "#LastName24")}
                               onChange = {this.handleLastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.LastName25}
                               name = "LastName25"
                               id = "LastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#LastName24", "#LastName25")}
                               onChange = {this.handleLastName25}/>
                           {this.state.isIndicatorEnabled === false ? 
                            <span  className="tooltip">
                            <img disabled = {!this.state.isIndicatorEnabled} src={indicator} alt = "img" style={{width:"3%",height:"3%", float: "right" , marginRight: "1%"}} />
                              <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                           </span>
                           : ""}
                            
                         <br/>

                          </div>
                          <div>
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName1}
                               name = "FirstName1"
                               id = "FirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName1", "#FirstName1")}
                               onChange = {this.handleFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName2}
                               name = "FirstName2"
                               id = "FirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName1", "#FirstName2")}
                               onChange = {this.handleFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName3}
                               name = "FirstName3"
                               id = "FirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName2", "#FirstName3")}
                               onChange = {this.handleFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName4}
                               name = "FirstName4"
                               id = "FirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName3", "#FirstName4")}
                               onChange = {this.handleFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName5}
                               name = "FirstName5"
                               id = "FirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName4", "#FirstName5")}
                               onChange = {this.handleFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName6}
                               name = "FirstName6"
                               id = "FirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName5", "#FirstName6")}
                               onChange = {this.handleFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName7}
                               name = "FirstName7"
                               id = "FirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName6", "#FirstName7")}
                               onChange = {this.handleFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName8}
                               name = "FirstName8"
                               id = "FirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName7", "#FirstName8")}
                               onChange = {this.handleFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName9}
                               name = "FirstName9"
                               id = "FirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName8", "#FirstName9")}
                               onChange = {this.handleFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName10}
                               name = "FirstName10"
                               id = "FirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName9", "#FirstName10")}
                               onChange = {this.handleFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName11}
                               name = "FirstName11"
                               id = "FirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName10", "#FirstName11")}
                               onChange = {this.handleFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName12}
                               name = "FirstName12"
                               id = "FirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName11", "#FirstName12")}
                               onChange = {this.handleFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName13}
                               name = "FirstName13"
                               id = "FirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName12", "#FirstName13")}
                               onChange = {this.handleFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName14}
                               name = "FirstName14"
                               id = "FirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName13", "#FirstName14")}
                               onChange = {this.handleFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName15}
                               name = "FirstName15"
                               id = "FirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName14", "#FirstName15")}
                               onChange = {this.handleFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName16}
                               name = "FirstName16"
                               id = "FirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName15", "#FirstName16")}
                               onChange = {this.handleFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName17}
                               name = "FirstName17"
                               id = "FirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName16", "#FirstName17")}
                               onChange = {this.handleFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName18}
                               name = "FirstName18"
                               id = "FirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName17", "#FirstName18")}
                               onChange = {this.handleFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName19}
                               name = "FirstName19"
                               id = "FirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName18", "#FirstName19")}
                               onChange = {this.handleFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName20}
                               name = "FirstName20"
                               id = "FirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName19", "#FirstName20")}
                               onChange = {this.handleFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName21}
                               name = "FirstName21"
                               id = "FirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName20", "#FirstName21")}
                               onChange = {this.handleFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName22}
                               name = "FirstName22"
                               id = "FirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName21", "#FirstName22")}
                               onChange = {this.handleFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName23}
                               name = "FirstName23"
                               id = "FirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName22", "#FirstName23")}
                               onChange = {this.handleFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName24}
                               name = "FirstName24"
                               id = "FirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName23", "#FirstName24")}
                               onChange = {this.handleFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FirstName25}
                               name = "FirstName25"
                               id = "FirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FirstName24", "#FirstName25")}
                               onChange = {this.handleFirstName25}/>

                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                         <br/>
                          </div>
                          
                           <div>   
                               <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName1}
                               name = "MiddleName1"
                               id = "MiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName1", "#MiddleName1")}
                               onChange = {this.handleMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName2}
                               name = "MiddleName2"
                               id = "MiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName1", "#MiddleName2")}
                               onChange = {this.handleMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName3}
                               name = "MiddleName3"
                               id = "MiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName2", "#MiddleName3")}
                               onChange = {this.handleMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName4}
                               name = "MiddleName4"
                               id = "MiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName3", "#MiddleName4")}
                               onChange = {this.handleMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName5}
                               name = "MiddleName5"
                               id = "MiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName4", "#MiddleName5")}
                               onChange = {this.handleMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName6}
                               name = "MiddleName6"
                               id = "MiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName5", "#MiddleName6")}
                               onChange = {this.handleMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName7}
                               name = "MiddleName7"
                               id = "MiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName6", "#MiddleName7")}
                               onChange = {this.handleMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName8}
                               name = "MiddleName8"
                               id = "MiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName7", "#MiddleName8")}
                               onChange = {this.handleMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName9}
                               name = "MiddleName9"
                               id = "MiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName8", "#MiddleName9")}
                               onChange = {this.handleMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName10}
                               name = "MiddleName10"
                               id = "MiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName9", "#MiddleName10")}
                               onChange = {this.handleMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName11}
                               name = "MiddleName11"
                               id = "MiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName10", "#MiddleName11")}
                               onChange = {this.handleMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName12}
                               name = "MiddleName12"
                               id = "MiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName11", "#MiddleName12")}
                               onChange = {this.handleMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName13}
                               name = "MiddleName13"
                               id = "MiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName12", "#MiddleName13")}
                               onChange = {this.handleMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName14}
                               name = "MiddleName14"
                               id = "MiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName13", "#MiddleName14")}
                               onChange = {this.handleMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName15}
                               name = "MiddleName15"
                               id = "MiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName14", "#MiddleName15")}
                               onChange = {this.handleMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName16}
                               name = "MiddleName16"
                               id = "MiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName15", "#MiddleName16")}
                               onChange = {this.handleMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName17}
                               name = "MiddleName17"
                               id = "MiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName16", "#MiddleName17")}
                               onChange = {this.handleMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName18}
                               name = "MiddleName18"
                               id = "MiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName17", "#MiddleName18")}
                               onChange = {this.handleMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName19}
                               name = "MiddleName19"
                               id = "MiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName18", "#MiddleName19")}
                               onChange = {this.handleMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName20}
                               name = "MiddleName20"
                               id = "MiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName19", "#MiddleName20")}
                               onChange = {this.handleMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName21}
                               name = "MiddleName21"
                               id = "MiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName20", "#MiddleName21")}
                               onChange = {this.handleMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName22}
                               name = "MiddleName22"
                               id = "MiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName21", "#MiddleName22")}
                               onChange = {this.handleMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName23}
                               name = "MiddleName23"
                               id = "MiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName22", "#MiddleName23")}
                               onChange = {this.handleMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName24}
                               name = "MiddleName24"
                               id = "MiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName23", "#MiddleName24")}
                               onChange = {this.handleMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MiddleName25}
                               name = "MiddleName25"
                               id = "MiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MiddleName24", "#MiddleName25")}
                               onChange = {this.handleMiddleName25}/>

                         {this.state.isIndicatorEnabled === false ? 
                          <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                         <br/>  
                            <span className="ErrorMsg">{this.state.errors.NameTitleOne}</span>
                            </div>
                         </td>
                      </tr>
                      </tbody>
                   </table>
                   

                   {/* Second Component */}

                   <div className = "ColouredLabel">
                      <label  className = "ColouredLabel"> &nbsp; &nbsp;2 &nbsp; Abbreviations of the above name, as you would like it, to be printed on the PAN card</label>
                      {this.state.isIndicatorEnabled === false ? 
                      <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"2.1%",height:"87%" , float: "right" , marginRight: "1%"}} />
                          <img src={namefield} alt = "img" className="tooltiptext tooltiptextAbbreviation" style={{width:"600px",height:"150px", textAlign: "right"}}  />
                         </span>
                      : ""}
                   </div>
                   <br/>
                   <div className = "box_left"> 
                       <div> 
                       <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne1}
                               name = "AbbreviationOne1"
                               id = "AbbreviationOne1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne1", "#AbbreviationOne1")}
                               onChange = {this.handleAbbreviationOne1}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne2}
                               name = "AbbreviationOne2"
                               id = "AbbreviationOne2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne1", "#AbbreviationOne2")}
                               onChange = {this.handleAbbreviationOne2}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne3}
                               name = "AbbreviationOne3"
                               id = "AbbreviationOne3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne2", "#AbbreviationOne3")}
                               onChange = {this.handleAbbreviationOne3}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne4}
                               name = "AbbreviationOne4"
                               id = "AbbreviationOne4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne3", "#AbbreviationOne4")}
                               onChange = {this.handleAbbreviationOne4}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne5}
                               name = "AbbreviationOne5"
                               id = "AbbreviationOne5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne4", "#AbbreviationOne5")}
                               onChange = {this.handleAbbreviationOne5}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne6}
                               name = "AbbreviationOne6"
                               id = "AbbreviationOne6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne5", "#AbbreviationOne6")}
                               onChange = {this.handleAbbreviationOne6}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne7}
                               name = "AbbreviationOne7"
                               id = "AbbreviationOne7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne6", "#AbbreviationOne7")}
                               onChange = {this.handleAbbreviationOne7}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne8}
                               name = "AbbreviationOne8"
                               id = "AbbreviationOne8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne7", "#AbbreviationOne8")}
                               onChange = {this.handleAbbreviationOne8}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne9}
                               name = "AbbreviationOne9"
                               id = "AbbreviationOne9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne8", "#AbbreviationOne9")}
                               onChange = {this.handleAbbreviationOne9}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne10}
                               name = "AbbreviationOne10"
                               id = "AbbreviationOne10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne9", "#AbbreviationOne10")}
                               onChange = {this.handleAbbreviationOne10}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne11}
                               name = "AbbreviationOne11"
                               id = "AbbreviationOne11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne10", "#AbbreviationOne11")}
                               onChange = {this.handleAbbreviationOne11}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne12}
                               name = "AbbreviationOne12"
                               id = "AbbreviationOne12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne11", "#AbbreviationOne12")}
                               onChange = {this.handleAbbreviationOne12}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne13}
                               name = "AbbreviationOne13"
                               id = "AbbreviationOne13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne12", "#AbbreviationOne13")}
                               onChange = {this.handleAbbreviationOne13}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne14}
                               name = "AbbreviationOne14"
                               id = "AbbreviationOne14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne13", "#AbbreviationOne14")}
                               onChange = {this.handleAbbreviationOne14}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne15}
                               name = "AbbreviationOne15"
                               id = "AbbreviationOne15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne14", "#AbbreviationOne15")}
                               onChange = {this.handleAbbreviationOne15}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne16}
                               name = "AbbreviationOne16"
                               id = "AbbreviationOne16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne15", "#AbbreviationOne16")}
                               onChange = {this.handleAbbreviationOne16}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne17}
                               name = "AbbreviationOne17"
                               id = "AbbreviationOne17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne16", "#AbbreviationOne17")}
                               onChange = {this.handleAbbreviationOne17}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne18}
                               name = "AbbreviationOne18"
                               id = "AbbreviationOne18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne17", "#AbbreviationOne18")}
                               onChange = {this.handleAbbreviationOne18}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne19}
                               name = "AbbreviationOne19"
                               id = "AbbreviationOne19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne18", "#AbbreviationOne19")}
                               onChange = {this.handleAbbreviationOne19}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne20}
                               name = "AbbreviationOne20"
                               id = "AbbreviationOne20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne19", "#AbbreviationOne20")}
                               onChange = {this.handleAbbreviationOne20}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne21}
                               name = "AbbreviationOne21"
                               id = "AbbreviationOne21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne20", "#AbbreviationOne21")}
                               onChange = {this.handleAbbreviationOne21}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne22}
                               name = "AbbreviationOne22"
                               id = "AbbreviationOne22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne21", "#AbbreviationOne22")}
                               onChange = {this.handleAbbreviationOne22}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne23}
                               name = "AbbreviationOne23"
                               id = "AbbreviationOne23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne22", "#AbbreviationOne23")}
                               onChange = {this.handleAbbreviationOne23}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne24}
                               name = "AbbreviationOne24"
                               id = "AbbreviationOne24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne23", "#AbbreviationOne24")}
                               onChange = {this.handleAbbreviationOne24}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne25}
                               name = "AbbreviationOne25"
                               id = "AbbreviationOne25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne24", "#AbbreviationOne25")}
                               onChange = {this.handleAbbreviationOne25}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne26}
                               name = "AbbreviationOne26"
                               id = "AbbreviationOne26"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne25", "#AbbreviationOne26")}
                               onChange = {this.handleAbbreviationOne26}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne27}
                               name = "AbbreviationOne27"
                               id = "AbbreviationOne27"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne26", "#AbbreviationOne27")}
                               onChange = {this.handleAbbreviationOne27}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne28}
                               name = "AbbreviationOne28"
                               id = "AbbreviationOne28"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne27", "#AbbreviationOne28")}
                               onChange = {this.handleAbbreviationOne28}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne29}
                               name = "AbbreviationOne29"
                               id = "AbbreviationOne29"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne28", "#AbbreviationOne29")}
                               onChange = {this.handleAbbreviationOne29}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne30}
                               name = "AbbreviationOne30"
                               id = "AbbreviationOne30"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne29", "#AbbreviationOne30")}
                               onChange = {this.handleAbbreviationOne30}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne31}
                               name = "AbbreviationOne31"
                               id = "AbbreviationOne31"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne30", "#AbbreviationOne31")}
                               onChange = {this.handleAbbreviationOne31}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne32}
                               name = "AbbreviationOne32"
                               id = "AbbreviationOne32"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne31", "#AbbreviationOne32")}
                               onChange = {this.handleAbbreviationOne32}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne33}
                               name = "AbbreviationOne33"
                               id = "AbbreviationOne33"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne32", "#AbbreviationOne33")}
                               onChange = {this.handleAbbreviationOne33}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne34}
                               name = "AbbreviationOne34"
                               id = "AbbreviationOne34"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne33", "#AbbreviationOne34")}
                               onChange = {this.handleAbbreviationOne34}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne35}
                               name = "AbbreviationOne35"
                               id = "AbbreviationOne35"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne34", "#AbbreviationOne35")}
                               onChange = {this.handleAbbreviationOne35}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne36}
                               name = "AbbreviationOne36"
                               id = "AbbreviationOne36"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne35", "#AbbreviationOne36")}
                               onChange = {this.handleAbbreviationOne36}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationOne37}
                               name = "AbbreviationOne37"
                               id = "AbbreviationOne37"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationOne36", "#AbbreviationOne37")}
                               onChange = {this.handleAbbreviationOne37}/>

                        
                          <br/>
                        </div>
                            
                        <div>
                       <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo1}
                               name = "AbbreviationTwo1"
                               id = "AbbreviationTwo1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo1", "#AbbreviationTwo1")}
                               onChange = {this.handleAbbreviationTwo1}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo2}
                               name = "AbbreviationTwo2"
                               id = "AbbreviationTwo2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo1", "#AbbreviationTwo2")}
                               onChange = {this.handleAbbreviationTwo2}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo3}
                               name = "AbbreviationTwo3"
                               id = "AbbreviationTwo3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo2", "#AbbreviationTwo3")}
                               onChange = {this.handleAbbreviationTwo3}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo4}
                               name = "AbbreviationTwo4"
                               id = "AbbreviationTwo4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo3", "#AbbreviationTwo4")}
                               onChange = {this.handleAbbreviationTwo4}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo5}
                               name = "AbbreviationTwo5"
                               id = "AbbreviationTwo5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo4", "#AbbreviationTwo5")}
                               onChange = {this.handleAbbreviationTwo5}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo6}
                               name = "AbbreviationTwo6"
                               id = "AbbreviationTwo6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo5", "#AbbreviationTwo6")}
                               onChange = {this.handleAbbreviationTwo6}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo7}
                               name = "AbbreviationTwo7"
                               id = "AbbreviationTwo7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo6", "#AbbreviationTwo7")}
                               onChange = {this.handleAbbreviationTwo7}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo8}
                               name = "AbbreviationTwo8"
                               id = "AbbreviationTwo8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo7", "#AbbreviationTwo8")}
                               onChange = {this.handleAbbreviationTwo8}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo9}
                               name = "AbbreviationTwo9"
                               id = "AbbreviationTwo9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo8", "#AbbreviationTwo9")}
                               onChange = {this.handleAbbreviationTwo9}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo10}
                               name = "AbbreviationTwo10"
                               id = "AbbreviationTwo10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo9", "#AbbreviationTwo10")}
                               onChange = {this.handleAbbreviationTwo10}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo11}
                               name = "AbbreviationTwo11"
                               id = "AbbreviationTwo11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo10", "#AbbreviationTwo11")}
                               onChange = {this.handleAbbreviationTwo11}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo12}
                               name = "AbbreviationTwo12"
                               id = "AbbreviationTwo12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo11", "#AbbreviationTwo12")}
                               onChange = {this.handleAbbreviationTwo12}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo13}
                               name = "AbbreviationTwo13"
                               id = "AbbreviationTwo13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo12", "#AbbreviationTwo13")}
                               onChange = {this.handleAbbreviationTwo13}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo14}
                               name = "AbbreviationTwo14"
                               id = "AbbreviationTwo14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo13", "#AbbreviationTwo14")}
                               onChange = {this.handleAbbreviationTwo14}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo15}
                               name = "AbbreviationTwo15"
                               id = "AbbreviationTwo15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo14", "#AbbreviationTwo15")}
                               onChange = {this.handleAbbreviationTwo15}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo16}
                               name = "AbbreviationTwo16"
                               id = "AbbreviationTwo16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo15", "#AbbreviationTwo16")}
                               onChange = {this.handleAbbreviationTwo16}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo17}
                               name = "AbbreviationTwo17"
                               id = "AbbreviationTwo17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo16", "#AbbreviationTwo17")}
                               onChange = {this.handleAbbreviationTwo17}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo18}
                               name = "AbbreviationTwo18"
                               id = "AbbreviationTwo18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo17", "#AbbreviationTwo18")}
                               onChange = {this.handleAbbreviationTwo18}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo19}
                               name = "AbbreviationTwo19"
                               id = "AbbreviationTwo19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo18", "#AbbreviationTwo19")}
                               onChange = {this.handleAbbreviationTwo19}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo20}
                               name = "AbbreviationTwo20"
                               id = "AbbreviationTwo20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo19", "#AbbreviationTwo20")}
                               onChange = {this.handleAbbreviationTwo20}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo21}
                               name = "AbbreviationTwo21"
                               id = "AbbreviationTwo21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo20", "#AbbreviationTwo21")}
                               onChange = {this.handleAbbreviationTwo21}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo22}
                               name = "AbbreviationTwo22"
                               id = "AbbreviationTwo22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo21", "#AbbreviationTwo22")}
                               onChange = {this.handleAbbreviationTwo22}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo23}
                               name = "AbbreviationTwo23"
                               id = "AbbreviationTwo23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo22", "#AbbreviationTwo23")}
                               onChange = {this.handleAbbreviationTwo23}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo24}
                               name = "AbbreviationTwo24"
                               id = "AbbreviationTwo24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo23", "#AbbreviationTwo24")}
                               onChange = {this.handleAbbreviationTwo24}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo25}
                               name = "AbbreviationTwo25"
                               id = "AbbreviationTwo25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo24", "#AbbreviationTwo25")}
                               onChange = {this.handleAbbreviationTwo25}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo26}
                               name = "AbbreviationTwo26"
                               id = "AbbreviationTwo26"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo25", "#AbbreviationTwo26")}
                               onChange = {this.handleAbbreviationTwo26}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo27}
                               name = "AbbreviationTwo27"
                               id = "AbbreviationTwo27"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo26", "#AbbreviationTwo27")}
                               onChange = {this.handleAbbreviationTwo27}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo28}
                               name = "AbbreviationTwo28"
                               id = "AbbreviationTwo28"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo27", "#AbbreviationTwo28")}
                               onChange = {this.handleAbbreviationTwo28}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo29}
                               name = "AbbreviationTwo29"
                               id = "AbbreviationTwo29"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo28", "#AbbreviationTwo29")}
                               onChange = {this.handleAbbreviationTwo29}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo30}
                               name = "AbbreviationTwo30"
                               id = "AbbreviationTwo30"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo29", "#AbbreviationTwo30")}
                               onChange = {this.handleAbbreviationTwo30}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo31}
                               name = "AbbreviationTwo31"
                               id = "AbbreviationTwo31"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo30", "#AbbreviationTwo31")}
                               onChange = {this.handleAbbreviationTwo31}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo32}
                               name = "AbbreviationTwo32"
                               id = "AbbreviationTwo32"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo31", "#AbbreviationTwo32")}
                               onChange = {this.handleAbbreviationTwo32}/> 

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo33}
                               name = "AbbreviationTwo33"
                               id = "AbbreviationTwo33"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo32", "#AbbreviationTwo33")}
                               onChange = {this.handleAbbreviationTwo33}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo34}
                               name = "AbbreviationTwo34"
                               id = "AbbreviationTwo34"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo33", "#AbbreviationTwo34")}
                               onChange = {this.handleAbbreviationTwo34}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo35}
                               name = "AbbreviationTwo35"
                               id = "AbbreviationTwo35"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo34", "#AbbreviationTwo35")}
                               onChange = {this.handleAbbreviationTwo35}/>

                            <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo36}
                               name = "AbbreviationTwo36"
                               id = "AbbreviationTwo36"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo35", "#AbbreviationTwo36")}
                               onChange = {this.handleAbbreviationTwo36}/>

                             <input 
                               type="text" 
                               className="Abbreviation-control"
                               maxLength = "1"
                               value = {this.state.data.AbbreviationTwo37}
                               name = "AbbreviationTwo37"
                               id = "AbbreviationTwo37"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AbbreviationTwo36", "#AbbreviationTwo37")}
                               onChange = {this.handleAbbreviationTwo37}/>
 
                        <br/>

                       </div>
                   </div>

                   {/* Third Component */}

                   <div className = "ColouredLabel"> 
                        
                        <label > &nbsp; &nbsp;3 &nbsp; Have you ever been known by any other name?  </label> 
                         &nbsp; &nbsp;
                        <input 
                           type="checkbox" 
                           className = "Check ColouredLabelCheck CheckYes" 
                           id = "5"
                           name="OtherName[2][]"
                           value = "Yes"
                           onClick={(e)=>this.handleOtherNameCheck(e,"OtherName")}/>
                        <label className="Label_with_no_space"> Yes</label> 

                         &nbsp; &nbsp;
                        <input 
                           type="checkbox" 
                           className = "Check ColouredLabelCheck CheckYes"
                           id = "6" 
                           name="OtherName[2][]"
                           value = "No"
                           onClick={(e)=>this.handleOtherNameCheck(e,"OtherName")}/>
                        <label className="Label_with_no_space"> No</label> 
                                              
                        <label className="Label_with_no_space Move_End"> (please tick as applicable)</label> 

                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"2.1%",height:"87%", float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextOtherName" style={{width:"450px",height:"20px" , fontSize: "17px", fontWeight: "inherit"}} >Please tick as applicable</label>
                         </span>
                         : ""}
                   </div>

                   <div id = "OtherNameDiv" >
                   <label className="FirstLabel small_font"> If yes, please give that other name</label> <br/>
                   <label className="FirstLabel"> Please select title,</label>
                   <label className="Label_with_no_space"> as applicable</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          
                   
                   <input 
                       type="checkbox" 
                       className="Check" 
                       id="7" 
                       name="NameTitleTwo[3][]" 
                       value = "1Shri" 
                       onClick={(e)=>this.handleNameTitleTwoCheck(e,"NameTitleTwo")}/>
                   <label className="Label_with_no_space"> Shri</label>

                   <input 
                       type="checkbox" 
                       className="Check" 
                       id= "8"
                       name= "NameTitleTwo[3][]"
                       value = "1Smt.1"
                       onClick = {(e) => this.handleNameTitleTwoCheck(e, "NameTitleTwo")}/>
                   <label className="Label_with_no_space"> Smt.</label>

                   <input 
                       type="checkbox" 
                       className="Check" 
                       id= "9"
                       name= "NameTitleTwo[3][]"
                       value = "1Kumari"
                       onClick = {(e) => this.handleNameTitleTwoCheck(e, "NameTitleTwo")}/>
                   <label className="Label_with_no_space"> Kumari</label>

                   <input 
                       type="checkbox" 
                       className="Check" 
                       id= "10"
                       name= "NameTitleTwo[3][]"
                       value = "1M/s"
                       onClick = {(e) => this.handleNameTitleTwoCheck(e, "NameTitleTwo")}/>
                   <label className="Label_with_no_space"> M/s</label> <br />
                    
                   <table>
                   <tbody>
                      <tr>
                         <td className ="first_td">
                           {this.state.name.map((data, index) =>
                               <label className="elements"> {data}  <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName1}
                               name = "OtherLastName1"
                               id = "OtherLastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName1", "#OtherLastName1")}
                               onChange = {this.handleOtherLastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName2}
                               name = "OtherLastName2"
                               id = "OtherLastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName1", "#OtherLastName2")}
                               onChange = {this.handleOtherLastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName3}
                               name = "OtherLastName3"
                               id = "OtherLastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName2", "#OtherLastName3")}
                               onChange = {this.handleOtherLastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName4}
                               name = "OtherLastName4"
                               id = "OtherLastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName3", "#OtherLastName4")}
                               onChange = {this.handleOtherLastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName5}
                               name = "OtherLastName5"
                               id = "OtherLastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName4", "#OtherLastName5")}
                               onChange = {this.handleOtherLastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName6}
                               name = "OtherLastName6"
                               id = "OtherLastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName5", "#OtherLastName6")}
                               onChange = {this.handleOtherLastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName7}
                               name = "OtherLastName7"
                               id = "OtherLastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName6", "#OtherLastName7")}
                               onChange = {this.handleOtherLastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName8}
                               name = "OtherLastName8"
                               id = "OtherLastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName7", "#OtherLastName8")}
                               onChange = {this.handleOtherLastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName9}
                               name = "OtherLastName9"
                               id = "OtherLastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName8", "#OtherLastName9")}
                               onChange = {this.handleOtherLastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName10}
                               name = "OtherLastName10"
                               id = "OtherLastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName9", "#OtherLastName10")}
                               onChange = {this.handleOtherLastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName11}
                               name = "OtherLastName11"
                               id = "OtherLastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName10", "#OtherLastName11")}
                               onChange = {this.handleOtherLastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName12}
                               name = "OtherLastName12"
                               id = "OtherLastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName11", "#OtherLastName12")}
                               onChange = {this.handleOtherLastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName13}
                               name = "OtherLastName13"
                               id = "OtherLastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName12", "#OtherLastName13")}
                               onChange = {this.handleOtherLastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName14}
                               name = "OtherLastName14"
                               id = "OtherLastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName13", "#OtherLastName14")}
                               onChange = {this.handleOtherLastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName15}
                               name = "OtherLastName15"
                               id = "OtherLastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName14", "#OtherLastName15")}
                               onChange = {this.handleOtherLastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName16}
                               name = "OtherLastName16"
                               id = "OtherLastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName15", "#OtherLastName16")}
                               onChange = {this.handleOtherLastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName17}
                               name = "OtherLastName17"
                               id = "OtherLastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName16", "#OtherLastName17")}
                               onChange = {this.handleOtherLastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName18}
                               name = "OtherLastName18"
                               id = "OtherLastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName17", "#OtherLastName18")}
                               onChange = {this.handleOtherLastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName19}
                               name = "OtherLastName19"
                               id = "OtherLastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName18", "#OtherLastName19")}
                               onChange = {this.handleOtherLastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName20}
                               name = "OtherLastName20"
                               id = "OtherLastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName19", "#OtherLastName20")}
                               onChange = {this.handleOtherLastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName21}
                               name = "OtherLastName21"
                               id = "OtherLastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName20", "#OtherLastName21")}
                               onChange = {this.handleOtherLastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName22}
                               name = "OtherLastName22"
                               id = "OtherLastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName21", "#OtherLastName22")}
                               onChange = {this.handleOtherLastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName23}
                               name = "OtherLastName23"
                               id = "OtherLastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName22", "#OtherLastName23")}
                               onChange = {this.handleOtherLastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName24}
                               name = "OtherLastName24"
                               id = "OtherLastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName23", "#OtherLastName24")}
                               onChange = {this.handleOtherLastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherLastName25}
                               name = "OtherLastName25"
                               id = "OtherLastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherLastName24", "#OtherLastName25")}
                               onChange = {this.handleOtherLastName25}/>

                          {this.state.isIndicatorEnabled === false ? 
                          <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                         <br/>
                          </div>
                           
                           <div> 
                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName1}
                               name = "OtherFirstName1"
                               id = "OtherFirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName1", "#OtherFirstName1")}
                               onChange = {this.handleOtherFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName2}
                               name = "OtherFirstName2"
                               id = "OtherFirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName1", "#OtherFirstName2")}
                               onChange = {this.handleOtherFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName3}
                               name = "OtherFirstName3"
                               id = "OtherFirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName2", "#OtherFirstName3")}
                               onChange = {this.handleOtherFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName4}
                               name = "OtherFirstName4"
                               id = "OtherFirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName3", "#OtherFirstName4")}
                               onChange = {this.handleOtherFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName5}
                               name = "OtherFirstName5"
                               id = "OtherFirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName4", "#OtherFirstName5")}
                               onChange = {this.handleOtherFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName6}
                               name = "OtherFirstName6"
                               id = "OtherFirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName5", "#OtherFirstName6")}
                               onChange = {this.handleOtherFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName7}
                               name = "OtherFirstName7"
                               id = "OtherFirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName6", "#OtherFirstName7")}
                               onChange = {this.handleOtherFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName8}
                               name = "OtherFirstName8"
                               id = "OtherFirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName7", "#OtherFirstName8")}
                               onChange = {this.handleOtherFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName9}
                               name = "OtherFirstName9"
                               id = "OtherFirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName8", "#OtherFirstName9")}
                               onChange = {this.handleOtherFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName10}
                               name = "OtherFirstName10"
                               id = "OtherFirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName9", "#OtherFirstName10")}
                               onChange = {this.handleOtherFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName11}
                               name = "OtherFirstName11"
                               id = "OtherFirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName10", "#OtherFirstName11")}
                               onChange = {this.handleOtherFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName12}
                               name = "OtherFirstName12"
                               id = "OtherFirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName11", "#OtherFirstName12")}
                               onChange = {this.handleOtherFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName13}
                               name = "OtherFirstName13"
                               id = "OtherFirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName12", "#OtherFirstName13")}
                               onChange = {this.handleOtherFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName14}
                               name = "OtherFirstName14"
                               id = "OtherFirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName13", "#OtherFirstName14")}
                               onChange = {this.handleOtherFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName15}
                               name = "OtherFirstName15"
                               id = "OtherFirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName14", "#OtherFirstName15")}
                               onChange = {this.handleOtherFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName16}
                               name = "OtherFirstName16"
                               id = "OtherFirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName15", "#OtherFirstName16")}
                               onChange = {this.handleOtherFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName17}
                               name = "OtherFirstName17"
                               id = "OtherFirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName16", "#OtherFirstName17")}
                               onChange = {this.handleOtherFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName18}
                               name = "OtherFirstName18"
                               id = "OtherFirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName17", "#OtherFirstName18")}
                               onChange = {this.handleOtherFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName19}
                               name = "OtherFirstName19"
                               id = "OtherFirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName18", "#OtherFirstName19")}
                               onChange = {this.handleOtherFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName20}
                               name = "OtherFirstName20"
                               id = "OtherFirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName19", "#OtherFirstName20")}
                               onChange = {this.handleOtherFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName21}
                               name = "OtherFirstName21"
                               id = "OtherFirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName20", "#OtherFirstName21")}
                               onChange = {this.handleOtherFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName22}
                               name = "OtherFirstName22"
                               id = "OtherFirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName21", "#OtherFirstName22")}
                               onChange = {this.handleOtherFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName23}
                               name = "OtherFirstName23"
                               id = "OtherFirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName22", "#OtherFirstName23")}
                               onChange = {this.handleOtherFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName24}
                               name = "OtherFirstName24"
                               id = "OtherFirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName23", "#OtherFirstName24")}
                               onChange = {this.handleOtherFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherFirstName25}
                               name = "OtherFirstName25"
                               id = "OtherFirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherFirstName24", "#OtherFirstName25")}
                               onChange = {this.handleOtherFirstName25}/>
                         {this.state.isIndicatorEnabled === false ? 
                       <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                           <br/>
                           </div>
 
                          <div>
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName1}
                               name = "OtherMiddleName1"
                               id = "OtherMiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName1", "#OtherMiddleName1")}
                               onChange = {this.handleOtherMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName2}
                               name = "OtherMiddleName2"
                               id = "OtherMiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName1", "#OtherMiddleName2")}
                               onChange = {this.handleOtherMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName3}
                               name = "OtherMiddleName3"
                               id = "OtherMiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName2", "#OtherMiddleName3")}
                               onChange = {this.handleOtherMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName4}
                               name = "OtherMiddleName4"
                               id = "OtherMiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName3", "#OtherMiddleName4")}
                               onChange = {this.handleOtherMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName5}
                               name = "OtherMiddleName5"
                               id = "OtherMiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName4", "#OtherMiddleName5")}
                               onChange = {this.handleOtherMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName6}
                               name = "OtherMiddleName6"
                               id = "OtherMiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName5", "#OtherMiddleName6")}
                               onChange = {this.handleOtherMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName7}
                               name = "OtherMiddleName7"
                               id = "OtherMiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName6", "#OtherMiddleName7")}
                               onChange = {this.handleOtherMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName8}
                               name = "OtherMiddleName8"
                               id = "OtherMiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName7", "#OtherMiddleName8")}
                               onChange = {this.handleOtherMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName9}
                               name = "OtherMiddleName9"
                               id = "OtherMiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName8", "#OtherMiddleName9")}
                               onChange = {this.handleOtherMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName10}
                               name = "OtherMiddleName10"
                               id = "OtherMiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName9", "#OtherMiddleName10")}
                               onChange = {this.handleOtherMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName11}
                               name = "OtherMiddleName11"
                               id = "OtherMiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName10", "#OtherMiddleName11")}
                               onChange = {this.handleOtherMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName12}
                               name = "OtherMiddleName12"
                               id = "OtherMiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName11", "#OtherMiddleName12")}
                               onChange = {this.handleOtherMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName13}
                               name = "OtherMiddleName13"
                               id = "OtherMiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName12", "#OtherMiddleName13")}
                               onChange = {this.handleOtherMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName14}
                               name = "OtherMiddleName14"
                               id = "OtherMiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName13", "#OtherMiddleName14")}
                               onChange = {this.handleOtherMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName15}
                               name = "OtherMiddleName15"
                               id = "OtherMiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName14", "#OtherMiddleName15")}
                               onChange = {this.handleOtherMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName16}
                               name = "OtherMiddleName16"
                               id = "OtherMiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName15", "#OtherMiddleName16")}
                               onChange = {this.handleOtherMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName17}
                               name = "OtherMiddleName17"
                               id = "OtherMiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName16", "#OtherMiddleName17")}
                               onChange = {this.handleOtherMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName18}
                               name = "OtherMiddleName18"
                               id = "OtherMiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName17", "#OtherMiddleName18")}
                               onChange = {this.handleOtherMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName19}
                               name = "OtherMiddleName19"
                               id = "OtherMiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName18", "#OtherMiddleName19")}
                               onChange = {this.handleOtherMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName20}
                               name = "OtherMiddleName20"
                               id = "OtherMiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName19", "#OtherMiddleName20")}
                               onChange = {this.handleOtherMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName21}
                               name = "OtherMiddleName21"
                               id = "OtherMiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName20", "#OtherMiddleName21")}
                               onChange = {this.handleOtherMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName22}
                               name = "OtherMiddleName22"
                               id = "OtherMiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName21", "#OtherMiddleName22")}
                               onChange = {this.handleOtherMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName23}
                               name = "OtherMiddleName23"
                               id = "OtherMiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName22", "#OtherMiddleName23")}
                               onChange = {this.handleOtherMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName24}
                               name = "OtherMiddleName24"
                               id = "OtherMiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName23", "#OtherMiddleName24")}
                               onChange = {this.handleOtherMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OtherMiddleName25}
                               name = "OtherMiddleName25"
                               id = "OtherMiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OtherMiddleName24", "#OtherMiddleName25")}
                               onChange = {this.handleOtherMiddleName25}/>
                        
                        {this.state.isIndicatorEnabled === false ? 
                         <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield}  alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                          
                           </div>
                         </td>
                      </tr>
                   </tbody>
                   </table>
                   </div>
                    
                   <span className="ErrorMsg">{this.state.errors.OtherName}</span>
                   <span className="ErrorMsg">{this.state.errors.NameTitleTwo}</span>
                   
   

                  {/* Fourth Component */}
                  
                   <div className = "ColouredLabel">
                         <label>&nbsp;&nbsp; 4 &nbsp; Gender (for Individual applicants only)</label>
                         <input 
                           type="checkbox" 
                           className="Check " 
                           id= "11"
                           name= "Gender[4][]"
                           value = "Male"
                           onClick = {(e) => this.handleGenderCheck(e, "Gender")}/>
                         <label className="Label_with_no_space"> Male</label>

                         <input 
                           type="checkbox" 
                           className="Check " 
                           id= "12"
                           name= "Gender[4][]"
                           value = "Female"
                           onClick = {(e) => this.handleGenderCheck(e, "Gender")}/>
                         <label className="Label_with_no_space"> Female</label>

                         <input 
                           type="checkbox" 
                           className="Check " 
                           id= "13"
                           name= "Gender[4][]"
                           value = "Transgender"
                           onClick = {(e) => this.handleGenderCheck(e, "Gender")}/>
                         <label className="Label_with_no_space"> Transgender</label>
                        
                         <label className="Label_with_no_space Move_End1"> (please tick as applicable)</label> 
                         {this.state.isIndicatorEnabled === false ? 
                         <span className="tooltip" >
                          <img src={indicator}  alt = "img" style={{width:"2.1%",height:"87%"  , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextGender" style={{width:"450px",height:"20px", fontSize : "17px", fontWeight: "inherit"}}>This field is mandatory for Individuals.</label>
                         </span>
                         : ""}
                   </div>
                   
                   <span className="ErrorMsg">{this.state.errors.Gender}</span>
                  

                   {/* Fifth Component */}

                   <div className = "ColouredLabel Top_space" > 
                        <label className = "ColouredLabel"> &nbsp;&nbsp; 5 &nbsp; Date of Birth/Incorporation/Agreement/Partnership or 
                          Trust Deed/ Formation of Body of individuals or Association of Persons</label>
                   </div>

                   <div className= "divfive">
                      
                            <label  className ="Day" >Day </label>
                            <label className = "Month">Month</label>
                            <label className = "Year">Year</label> <br/>
                            <input 
                               type="text" 
                               className="Day-control"
                               maxLength = "1"
                               value = {this.state.data.Day1}
                               name = "Day1"
                               id = "Day1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Day1", "#Day1")}
                               onChange = {this.handleDay1}/>

                            <input 
                               type="text" 
                               className="Day-control"
                               maxLength = "1"
                               value = {this.state.data.Day2}
                               name = "Day2"
                               id = "Day2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Day1", "#Day2")}
                               onChange = {this.handleDay2}/>
 
                           <span className = "Month-control1"> 
                           <input 
                               type="text" 
                               className="Month-control"
                               maxLength = "1"
                               value = {this.state.data.Month1}
                               name = "Month1"
                               id = "Month1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Month1", "#Month1")}
                               onChange = {this.handleMonth1}/>
                            </span>

                            <input 
                               type="text" 
                               className="Month-control"
                               maxLength = "1"
                               value = {this.state.data.Month2}
                               name = "Month2"
                               id = "Month2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Month1", "#Month2")}
                               onChange = {this.handleMonth2}/>
 
                           <span className = "Year-control1"> 
                           <input 
                               type="text" 
                               className="Year-control"
                               maxLength = "1"
                               value = {this.state.data.Year1}
                               name = "Year1"
                               id = "Year1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Year1", "#Year1")}
                               onChange = {this.handleYear1}/>
                            </span>

                            <input 
                               type="text" 
                               className="Year-control"
                               maxLength = "1"
                               value = {this.state.data.Year2}
                               name = "Year2"
                               id = "Year2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Year1", "#Year2")}
                               onChange = {this.handleYear2}/>

                            <input 
                               type="text" 
                               className="Year-control"
                               maxLength = "1"
                               value = {this.state.data.Year3}
                               name = "Year3"
                               id = "Year3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Year2", "#Year3")}
                               onChange = {this.handleYear3}/>

                            <input 
                               type="text" 
                               className="Year-control"
                               maxLength = "1"
                               value = {this.state.data.Year4}
                               name = "Year4"
                               id = "Year4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#Year3", "#Year4")}
                               onChange = {this.handleYear4}/>

                           

                           {this.state.isIndicatorEnabled === false ? 
                           <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"2.2%",height:"2%" , float: "right" , marginRight: "1%"}} />
                            <img src={datefield} alt = "img" className="tooltiptext tooltiptextDate" style={{width:"600px",height:"200px"}}  />
                         </span>
                         : ""}
                        
            
                    </div>

                   {/* Sixth Component */}

                   <div className = "ColouredLabel">

                      <label className = "ColouredLabel">&nbsp;&nbsp; 6 &nbsp;  Details of Parents (applicable only for individual applicants)</label>
                   </div>

                   <label className="FirstLabel Bold">Father’s Name (Mandatory. Even married women should fill in father’s name only)</label><br />
                   
                    <table>
                    <tbody>
                      <tr>
                         <td className ="first_td">
                            {this.state.name.map((data, index) =>
                               <label className="elements"> {data}  <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                           <div> 
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName1}
                               name = "FatherLastName1"
                               id = "FatherLastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName1", "#FatherLastName1")}
                               onChange = {this.handleFatherLastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName2}
                               name = "FatherLastName2"
                               id = "FatherLastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName1", "#FatherLastName2")}
                               onChange = {this.handleFatherLastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName3}
                               name = "FatherLastName3"
                               id = "FatherLastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName2", "#FatherLastName3")}
                               onChange = {this.handleFatherLastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName4}
                               name = "FatherLastName4"
                               id = "FatherLastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName3", "#FatherLastName4")}
                               onChange = {this.handleFatherLastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName5}
                               name = "FatherLastName5"
                               id = "FatherLastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName4", "#FatherLastName5")}
                               onChange = {this.handleFatherLastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName6}
                               name = "FatherLastName6"
                               id = "FatherLastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName5", "#FatherLastName6")}
                               onChange = {this.handleFatherLastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName7}
                               name = "FatherLastName7"
                               id = "FatherLastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName6", "#FatherLastName7")}
                               onChange = {this.handleFatherLastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName8}
                               name = "FatherLastName8"
                               id = "FatherLastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName7", "#FatherLastName8")}
                               onChange = {this.handleFatherLastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName9}
                               name = "FatherLastName9"
                               id = "FatherLastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName8", "#FatherLastName9")}
                               onChange = {this.handleFatherLastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName10}
                               name = "FatherLastName10"
                               id = "FatherLastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName9", "#FatherLastName10")}
                               onChange = {this.handleFatherLastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName11}
                               name = "FatherLastName11"
                               id = "FatherLastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName10", "#FatherLastName11")}
                               onChange = {this.handleFatherLastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName12}
                               name = "FatherLastName12"
                               id = "FatherLastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName11", "#FatherLastName12")}
                               onChange = {this.handleFatherLastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName13}
                               name = "FatherLastName13"
                               id = "FatherLastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName12", "#FatherLastName13")}
                               onChange = {this.handleFatherLastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName14}
                               name = "FatherLastName14"
                               id = "FatherLastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName13", "#FatherLastName14")}
                               onChange = {this.handleFatherLastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName15}
                               name = "FatherLastName15"
                               id = "FatherLastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName14", "#FatherLastName15")}
                               onChange = {this.handleFatherLastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName16}
                               name = "FatherLastName16"
                               id = "FatherLastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName15", "#FatherLastName16")}
                               onChange = {this.handleFatherLastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName17}
                               name = "FatherLastName17"
                               id = "FatherLastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName16", "#FatherLastName17")}
                               onChange = {this.handleFatherLastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName18}
                               name = "FatherLastName18"
                               id = "FatherLastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName17", "#FatherLastName18")}
                               onChange = {this.handleFatherLastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName19}
                               name = "FatherLastName19"
                               id = "FatherLastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName18", "#FatherLastName19")}
                               onChange = {this.handleFatherLastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName20}
                               name = "FatherLastName20"
                               id = "FatherLastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName19", "#FatherLastName20")}
                               onChange = {this.handleFatherLastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName21}
                               name = "FatherLastName21"
                               id = "FatherLastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName20", "#FatherLastName21")}
                               onChange = {this.handleFatherLastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName22}
                               name = "FatherLastName22"
                               id = "FatherLastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName21", "#FatherLastName22")}
                               onChange = {this.handleFatherLastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName23}
                               name = "FatherLastName23"
                               id = "FatherLastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName22", "#FatherLastName23")}
                               onChange = {this.handleFatherLastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName24}
                               name = "FatherLastName24"
                               id = "FatherLastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName23", "#FatherLastName24")}
                               onChange = {this.handleFatherLastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherLastName25}
                               name = "FatherLastName25"
                               id = "FatherLastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherLastName24", "#FatherLastName25")}
                               onChange = {this.handleFatherLastName25}/>

                          {this.state.isIndicatorEnabled === false ? 
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                           </div>
                           
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName1}
                               name = "FatherFirstName1"
                               id = "FatherFirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName1", "#FatherFirstName1")}
                               onChange = {this.handleFatherFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName2}
                               name = "FatherFirstName2"
                               id = "FatherFirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName1", "#FatherFirstName2")}
                               onChange = {this.handleFatherFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName3}
                               name = "FatherFirstName3"
                               id = "FatherFirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName2", "#FatherFirstName3")}
                               onChange = {this.handleFatherFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName4}
                               name = "FatherFirstName4"
                               id = "FatherFirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName3", "#FatherFirstName4")}
                               onChange = {this.handleFatherFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName5}
                               name = "FatherFirstName5"
                               id = "FatherFirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName4", "#FatherFirstName5")}
                               onChange = {this.handleFatherFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName6}
                               name = "FatherFirstName6"
                               id = "FatherFirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName5", "#FatherFirstName6")}
                               onChange = {this.handleFatherFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName7}
                               name = "FatherFirstName7"
                               id = "FatherFirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName6", "#FatherFirstName7")}
                               onChange = {this.handleFatherFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName8}
                               name = "FatherFirstName8"
                               id = "FatherFirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName7", "#FatherFirstName8")}
                               onChange = {this.handleFatherFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName9}
                               name = "FatherFirstName9"
                               id = "FatherFirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName8", "#FatherFirstName9")}
                               onChange = {this.handleFatherFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName10}
                               name = "FatherFirstName10"
                               id = "FatherFirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName9", "#FatherFirstName10")}
                               onChange = {this.handleFatherFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName11}
                               name = "FatherFirstName11"
                               id = "FatherFirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName10", "#FatherFirstName11")}
                               onChange = {this.handleFatherFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName12}
                               name = "FatherFirstName12"
                               id = "FatherFirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName11", "#FatherFirstName12")}
                               onChange = {this.handleFatherFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName13}
                               name = "FatherFirstName13"
                               id = "FatherFirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName12", "#FatherFirstName13")}
                               onChange = {this.handleFatherFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName14}
                               name = "FatherFirstName14"
                               id = "FatherFirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName13", "#FatherFirstName14")}
                               onChange = {this.handleFatherFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName15}
                               name = "FatherFirstName15"
                               id = "FatherFirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName14", "#FatherFirstName15")}
                               onChange = {this.handleFatherFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName16}
                               name = "FatherFirstName16"
                               id = "FatherFirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName15", "#FatherFirstName16")}
                               onChange = {this.handleFatherFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName17}
                               name = "FatherFirstName17"
                               id = "FatherFirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName16", "#FatherFirstName17")}
                               onChange = {this.handleFatherFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName18}
                               name = "FatherFirstName18"
                               id = "FatherFirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName17", "#FatherFirstName18")}
                               onChange = {this.handleFatherFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName19}
                               name = "FatherFirstName19"
                               id = "FatherFirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName18", "#FatherFirstName19")}
                               onChange = {this.handleFatherFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName20}
                               name = "FatherFirstName20"
                               id = "FatherFirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName19", "#FatherFirstName20")}
                               onChange = {this.handleFatherFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName21}
                               name = "FatherFirstName21"
                               id = "FatherFirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName20", "#FatherFirstName21")}
                               onChange = {this.handleFatherFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName22}
                               name = "FatherFirstName22"
                               id = "FatherFirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName21", "#FatherFirstName22")}
                               onChange = {this.handleFatherFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName23}
                               name = "FatherFirstName23"
                               id = "FatherFirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName22", "#FatherFirstName23")}
                               onChange = {this.handleFatherFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName24}
                               name = "FatherFirstName24"
                               id = "FatherFirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName23", "#FatherFirstName24")}
                               onChange = {this.handleFatherFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherFirstName25}
                               name = "FatherFirstName25"
                               id = "FatherFirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherFirstName24", "#FatherFirstName25")}
                               onChange = {this.handleFatherFirstName25}/>
                          {this.state.isIndicatorEnabled === false ? 
                           <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName1}
                               name = "FatherMiddleName1"
                               id = "FatherMiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName1", "#FatherMiddleName1")}
                               onChange = {this.handleFatherMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName2}
                               name = "FatherMiddleName2"
                               id = "FatherMiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName1", "#FatherMiddleName2")}
                               onChange = {this.handleFatherMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName3}
                               name = "FatherMiddleName3"
                               id = "FatherMiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName2", "#FatherMiddleName3")}
                               onChange = {this.handleFatherMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName4}
                               name = "FatherMiddleName4"
                               id = "FatherMiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName3", "#FatherMiddleName4")}
                               onChange = {this.handleFatherMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName5}
                               name = "FatherMiddleName5"
                               id = "FatherMiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName4", "#FatherMiddleName5")}
                               onChange = {this.handleFatherMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName6}
                               name = "FatherMiddleName6"
                               id = "FatherMiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName5", "#FatherMiddleName6")}
                               onChange = {this.handleFatherMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName7}
                               name = "FatherMiddleName7"
                               id = "FatherMiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName6", "#FatherMiddleName7")}
                               onChange = {this.handleFatherMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName8}
                               name = "FatherMiddleName8"
                               id = "FatherMiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName7", "#FatherMiddleName8")}
                               onChange = {this.handleFatherMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName9}
                               name = "FatherMiddleName9"
                               id = "FatherMiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName8", "#FatherMiddleName9")}
                               onChange = {this.handleFatherMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName10}
                               name = "FatherMiddleName10"
                               id = "FatherMiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName9", "#FatherMiddleName10")}
                               onChange = {this.handleFatherMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName11}
                               name = "FatherMiddleName11"
                               id = "FatherMiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName10", "#FatherMiddleName11")}
                               onChange = {this.handleFatherMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName12}
                               name = "FatherMiddleName12"
                               id = "FatherMiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName11", "#FatherMiddleName12")}
                               onChange = {this.handleFatherMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName13}
                               name = "FatherMiddleName13"
                               id = "FatherMiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName12", "#FatherMiddleName13")}
                               onChange = {this.handleFatherMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName14}
                               name = "FatherMiddleName14"
                               id = "FatherMiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName13", "#FatherMiddleName14")}
                               onChange = {this.handleFatherMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName15}
                               name = "FatherMiddleName15"
                               id = "FatherMiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName14", "#FatherMiddleName15")}
                               onChange = {this.handleFatherMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName16}
                               name = "FatherMiddleName16"
                               id = "FatherMiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName15", "#FatherMiddleName16")}
                               onChange = {this.handleFatherMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName17}
                               name = "FatherMiddleName17"
                               id = "FatherMiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName16", "#FatherMiddleName17")}
                               onChange = {this.handleFatherMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName18}
                               name = "FatherMiddleName18"
                               id = "FatherMiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName17", "#FatherMiddleName18")}
                               onChange = {this.handleFatherMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName19}
                               name = "FatherMiddleName19"
                               id = "FatherMiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName18", "#FatherMiddleName19")}
                               onChange = {this.handleFatherMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName20}
                               name = "FatherMiddleName20"
                               id = "FatherMiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName19", "#FatherMiddleName20")}
                               onChange = {this.handleFatherMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName21}
                               name = "FatherMiddleName21"
                               id = "FatherMiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName20", "#FatherMiddleName21")}
                               onChange = {this.handleFatherMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName22}
                               name = "FatherMiddleName22"
                               id = "FatherMiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName21", "#FatherMiddleName22")}
                               onChange = {this.handleFatherMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName23}
                               name = "FatherMiddleName23"
                               id = "FatherMiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName22", "#FatherMiddleName23")}
                               onChange = {this.handleFatherMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName24}
                               name = "FatherMiddleName24"
                               id = "FatherMiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName23", "#FatherMiddleName24")}
                               onChange = {this.handleFatherMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.FatherMiddleName25}
                               name = "FatherMiddleName25"
                               id = "FatherMiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#FatherMiddleName24", "#FatherMiddleName25")}
                               onChange = {this.handleFatherMiddleName25}/>
                       {this.state.isIndicatorEnabled === false ? 
                       <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                            </div>
                         </td>
                      </tr>
                    </tbody>
                    </table>
                    
                    <label className="FirstLabel Bold">Mother’s Name (optional)</label><br />

                    <table>
                    <tbody>
                      <tr>
                         <td className ="first_td">
                            {this.state.name.map((data, index) =>
                               <label className="elements"> {data}  <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                         <div>
                         <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName1}
                               name = "MotherLastName1"
                               id = "MotherLastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName1", "#MotherLastName1")}
                               onChange = {this.handleMotherLastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName2}
                               name = "MotherLastName2"
                               id = "MotherLastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName1", "#MotherLastName2")}
                               onChange = {this.handleMotherLastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName3}
                               name = "MotherLastName3"
                               id = "MotherLastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName2", "#MotherLastName3")}
                               onChange = {this.handleMotherLastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName4}
                               name = "MotherLastName4"
                               id = "MotherLastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName3", "#MotherLastName4")}
                               onChange = {this.handleMotherLastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName5}
                               name = "MotherLastName5"
                               id = "MotherLastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName4", "#MotherLastName5")}
                               onChange = {this.handleMotherLastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName6}
                               name = "MotherLastName6"
                               id = "MotherLastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName5", "#MotherLastName6")}
                               onChange = {this.handleMotherLastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName7}
                               name = "MotherLastName7"
                               id = "MotherLastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName6", "#MotherLastName7")}
                               onChange = {this.handleMotherLastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName8}
                               name = "MotherLastName8"
                               id = "MotherLastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName7", "#MotherLastName8")}
                               onChange = {this.handleMotherLastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName9}
                               name = "MotherLastName9"
                               id = "MotherLastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName8", "#MotherLastName9")}
                               onChange = {this.handleMotherLastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName10}
                               name = "MotherLastName10"
                               id = "MotherLastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName9", "#MotherLastName10")}
                               onChange = {this.handleMotherLastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName11}
                               name = "MotherLastName11"
                               id = "MotherLastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName10", "#MotherLastName11")}
                               onChange = {this.handleMotherLastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName12}
                               name = "MotherLastName12"
                               id = "MotherLastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName11", "#MotherLastName12")}
                               onChange = {this.handleMotherLastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName13}
                               name = "MotherLastName13"
                               id = "MotherLastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName12", "#MotherLastName13")}
                               onChange = {this.handleMotherLastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName14}
                               name = "MotherLastName14"
                               id = "MotherLastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName13", "#MotherLastName14")}
                               onChange = {this.handleMotherLastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName15}
                               name = "MotherLastName15"
                               id = "MotherLastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName14", "#MotherLastName15")}
                               onChange = {this.handleMotherLastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName16}
                               name = "MotherLastName16"
                               id = "MotherLastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName15", "#MotherLastName16")}
                               onChange = {this.handleMotherLastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName17}
                               name = "MotherLastName17"
                               id = "MotherLastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName16", "#MotherLastName17")}
                               onChange = {this.handleMotherLastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName18}
                               name = "MotherLastName18"
                               id = "MotherLastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName17", "#MotherLastName18")}
                               onChange = {this.handleMotherLastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName19}
                               name = "MotherLastName19"
                               id = "MotherLastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName18", "#MotherLastName19")}
                               onChange = {this.handleMotherLastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName20}
                               name = "MotherLastName20"
                               id = "MotherLastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName19", "#MotherLastName20")}
                               onChange = {this.handleMotherLastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName21}
                               name = "MotherLastName21"
                               id = "MotherLastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName20", "#MotherLastName21")}
                               onChange = {this.handleMotherLastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName22}
                               name = "MotherLastName22"
                               id = "MotherLastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName21", "#MotherLastName22")}
                               onChange = {this.handleMotherLastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName23}
                               name = "MotherLastName23"
                               id = "MotherLastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName22", "#MotherLastName23")}
                               onChange = {this.handleMotherLastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName24}
                               name = "MotherLastName24"
                               id = "MotherLastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName23", "#MotherLastName24")}
                               onChange = {this.handleMotherLastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherLastName25}
                               name = "MotherLastName25"
                               id = "MotherLastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherLastName24", "#MotherLastName25")}
                               onChange = {this.handleMotherLastName25}/>

                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                           <br/>
                           </div>


                           <div>  
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName1}
                               name = "MotherFirstName1"
                               id = "MotherFirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName1", "#MotherFirstName1")}
                               onChange = {this.handleMotherFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName2}
                               name = "MotherFirstName2"
                               id = "MotherFirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName1", "#MotherFirstName2")}
                               onChange = {this.handleMotherFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName3}
                               name = "MotherFirstName3"
                               id = "MotherFirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName2", "#MotherFirstName3")}
                               onChange = {this.handleMotherFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName4}
                               name = "MotherFirstName4"
                               id = "MotherFirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName3", "#MotherFirstName4")}
                               onChange = {this.handleMotherFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName5}
                               name = "MotherFirstName5"
                               id = "MotherFirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName4", "#MotherFirstName5")}
                               onChange = {this.handleMotherFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName6}
                               name = "MotherFirstName6"
                               id = "MotherFirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName5", "#MotherFirstName6")}
                               onChange = {this.handleMotherFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName7}
                               name = "MotherFirstName7"
                               id = "MotherFirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName6", "#MotherFirstName7")}
                               onChange = {this.handleMotherFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName8}
                               name = "MotherFirstName8"
                               id = "MotherFirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName7", "#MotherFirstName8")}
                               onChange = {this.handleMotherFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName9}
                               name = "MotherFirstName9"
                               id = "MotherFirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName8", "#MotherFirstName9")}
                               onChange = {this.handleMotherFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName10}
                               name = "MotherFirstName10"
                               id = "MotherFirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName9", "#MotherFirstName10")}
                               onChange = {this.handleMotherFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName11}
                               name = "MotherFirstName11"
                               id = "MotherFirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName10", "#MotherFirstName11")}
                               onChange = {this.handleMotherFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName12}
                               name = "MotherFirstName12"
                               id = "MotherFirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName11", "#MotherFirstName12")}
                               onChange = {this.handleMotherFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName13}
                               name = "MotherFirstName13"
                               id = "MotherFirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName12", "#MotherFirstName13")}
                               onChange = {this.handleMotherFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName14}
                               name = "MotherFirstName14"
                               id = "MotherFirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName13", "#MotherFirstName14")}
                               onChange = {this.handleMotherFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName15}
                               name = "MotherFirstName15"
                               id = "MotherFirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName14", "#MotherFirstName15")}
                               onChange = {this.handleMotherFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName16}
                               name = "MotherFirstName16"
                               id = "MotherFirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName15", "#MotherFirstName16")}
                               onChange = {this.handleMotherFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName17}
                               name = "MotherFirstName17"
                               id = "MotherFirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName16", "#MotherFirstName17")}
                               onChange = {this.handleMotherFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName18}
                               name = "MotherFirstName18"
                               id = "MotherFirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName17", "#MotherFirstName18")}
                               onChange = {this.handleMotherFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName19}
                               name = "MotherFirstName19"
                               id = "MotherFirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName18", "#MotherFirstName19")}
                               onChange = {this.handleMotherFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName20}
                               name = "MotherFirstName20"
                               id = "MotherFirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName19", "#MotherFirstName20")}
                               onChange = {this.handleMotherFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName21}
                               name = "MotherFirstName21"
                               id = "MotherFirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName20", "#MotherFirstName21")}
                               onChange = {this.handleMotherFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName22}
                               name = "MotherFirstName22"
                               id = "MotherFirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName21", "#MotherFirstName22")}
                               onChange = {this.handleMotherFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName23}
                               name = "MotherFirstName23"
                               id = "MotherFirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName22", "#MotherFirstName23")}
                               onChange = {this.handleMotherFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName24}
                               name = "MotherFirstName24"
                               id = "MotherFirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName23", "#MotherFirstName24")}
                               onChange = {this.handleMotherFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherFirstName25}
                               name = "MotherFirstName25"
                               id = "MotherFirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherFirstName24", "#MotherFirstName25")}
                               onChange = {this.handleMotherFirstName25}/>
                          {this.state.isIndicatorEnabled === false ? 
                         <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                           </div>

                           <div>    
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName1}
                               name = "MotherMiddleName1"
                               id = "MotherMiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName1", "#MotherMiddleName1")}
                               onChange = {this.handleMotherMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName2}
                               name = "MotherMiddleName2"
                               id = "MotherMiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName1", "#MotherMiddleName2")}
                               onChange = {this.handleMotherMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName3}
                               name = "MotherMiddleName3"
                               id = "MotherMiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName2", "#MotherMiddleName3")}
                               onChange = {this.handleMotherMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName4}
                               name = "MotherMiddleName4"
                               id = "MotherMiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName3", "#MotherMiddleName4")}
                               onChange = {this.handleMotherMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName5}
                               name = "MotherMiddleName5"
                               id = "MotherMiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName4", "#MotherMiddleName5")}
                               onChange = {this.handleMotherMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName6}
                               name = "MotherMiddleName6"
                               id = "MotherMiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName5", "#MotherMiddleName6")}
                               onChange = {this.handleMotherMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName7}
                               name = "MotherMiddleName7"
                               id = "MotherMiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName6", "#MotherMiddleName7")}
                               onChange = {this.handleMotherMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName8}
                               name = "MotherMiddleName8"
                               id = "MotherMiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName7", "#MotherMiddleName8")}
                               onChange = {this.handleMotherMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName9}
                               name = "MotherMiddleName9"
                               id = "MotherMiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName8", "#MotherMiddleName9")}
                               onChange = {this.handleMotherMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName10}
                               name = "MotherMiddleName10"
                               id = "MotherMiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName9", "#MotherMiddleName10")}
                               onChange = {this.handleMotherMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName11}
                               name = "MotherMiddleName11"
                               id = "MotherMiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName10", "#MotherMiddleName11")}
                               onChange = {this.handleMotherMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName12}
                               name = "MotherMiddleName12"
                               id = "MotherMiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName11", "#MotherMiddleName12")}
                               onChange = {this.handleMotherMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName13}
                               name = "MotherMiddleName13"
                               id = "MotherMiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName12", "#MotherMiddleName13")}
                               onChange = {this.handleMotherMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName14}
                               name = "MotherMiddleName14"
                               id = "MotherMiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName13", "#MotherMiddleName14")}
                               onChange = {this.handleMotherMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName15}
                               name = "MotherMiddleName15"
                               id = "MotherMiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName14", "#MotherMiddleName15")}
                               onChange = {this.handleMotherMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName16}
                               name = "MotherMiddleName16"
                               id = "MotherMiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName15", "#MotherMiddleName16")}
                               onChange = {this.handleMotherMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName17}
                               name = "MotherMiddleName17"
                               id = "MotherMiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName16", "#MotherMiddleName17")}
                               onChange = {this.handleMotherMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName18}
                               name = "MotherMiddleName18"
                               id = "MotherMiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName17", "#MotherMiddleName18")}
                               onChange = {this.handleMotherMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName19}
                               name = "MotherMiddleName19"
                               id = "MotherMiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName18", "#MotherMiddleName19")}
                               onChange = {this.handleMotherMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName20}
                               name = "MotherMiddleName20"
                               id = "MotherMiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName19", "#MotherMiddleName20")}
                               onChange = {this.handleMotherMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName21}
                               name = "MotherMiddleName21"
                               id = "MotherMiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName20", "#MotherMiddleName21")}
                               onChange = {this.handleMotherMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName22}
                               name = "MotherMiddleName22"
                               id = "MotherMiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName21", "#MotherMiddleName22")}
                               onChange = {this.handleMotherMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName23}
                               name = "MotherMiddleName23"
                               id = "MotherMiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName22", "#MotherMiddleName23")}
                               onChange = {this.handleMotherMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName24}
                               name = "MotherMiddleName24"
                               id = "MotherMiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName23", "#MotherMiddleName24")}
                               onChange = {this.handleMotherMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.MotherMiddleName25}
                               name = "MotherMiddleName25"
                               id = "MotherMiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#MotherMiddleName24", "#MotherMiddleName25")}
                               onChange = {this.handleMotherMiddleName25}/>
                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         :""}
                         <br/>
                            </div>
                         </td>
                      </tr>
                    </tbody>
                    </table>

                    <label className="FirstLabel">  Select the name of either father or mother which you may like to be printed on PAN card (Select one only)</label><br />
                    <label className="FirstLabel">(In case no option is provided then PAN card will be issued with father’s name)</label><br/>
               
                     
                    <input 
                      type="checkbox" 
                      className="Check Center_space"
                      id = "14"
                      name = "ParentName[5][]"
                      value = "Father's name"
                      onClick={(e)=>this.handleParentNameCheck(e,"ParentName")}/>
                    <label className="Label_with_no_space">Father’s name</label> 

                    <input 
                      type="checkbox" 
                      className="Check Left_space"
                      id = "15"
                      value = "Mother's name"
                      name = "ParentName[5][]"
                      onClick={(e)=>this.handleParentNameCheck(e,"ParentName")}/>
                    <label className="Label_with_no_space">Mother’s name</label> 
                    <label className="Italic_text">(Please tick as applicable)</label> 
                    
                    {this.state.isIndicatorEnabled === false ? 
                    <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"2.2%",height:"2%" , float: "right" , marginRight: "1%"}} />
                          <img src={parentname} alt = "img" className="tooltiptext tooltiptextParentName" style={{width:"600px",height:"150px"}}  />
                         </span>
                     : ""}
                         <br/>
                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                    <span className="ErrorMsg">{this.state.errors.ParentName}</span>


                  {/* Seventh Component */}

                    <div  className = "ColouredLabel">
                       <label className = "ColouredLabel"> &nbsp;&nbsp; 7 &nbsp; Address </label>
                    </div>

                    <label className="FirstLabel Bold"> Residence Address</label>
                    {/* <span className="tooltip" style={{marginLeft:"75.3%"}}>
                        <img src={indicator} style={{width:"2%",height:"2%"}} />
                        <img src={residencefield} className="tooltiptext" style={{width:"250px",height:"150px"}}  />
                    </span> */}
                         <br />

                    <table>
                    <tbody>
                      <tr>
                         <td className ="first_td">
                            {this.state.addressTwo.map((data, index) =>
                               <label className="elements"> {data}  <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat1}
                               name = "ResidenceFlat1"
                               id = "ResidenceFlat1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat1", "#ResidenceFlat1")}
                               onChange = {this.handleResidenceFlat1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat2}
                               name = "ResidenceFlat2"
                               id = "ResidenceFlat2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat1", "#ResidenceFlat2")}
                               onChange = {this.handleResidenceFlat2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat3}
                               name = "ResidenceFlat3"
                               id = "ResidenceFlat3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat2", "#ResidenceFlat3")}
                               onChange = {this.handleResidenceFlat3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat4}
                               name = "ResidenceFlat4"
                               id = "ResidenceFlat4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat3", "#ResidenceFlat4")}
                               onChange = {this.handleResidenceFlat4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat5}
                               name = "ResidenceFlat5"
                               id = "ResidenceFlat5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat4", "#ResidenceFlat5")}
                               onChange = {this.handleResidenceFlat5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat6}
                               name = "ResidenceFlat6"
                               id = "ResidenceFlat6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat5", "#ResidenceFlat6")}
                               onChange = {this.handleResidenceFlat6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat7}
                               name = "ResidenceFlat7"
                               id = "ResidenceFlat7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat6", "#ResidenceFlat7")}
                               onChange = {this.handleResidenceFlat7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat8}
                               name = "ResidenceFlat8"
                               id = "ResidenceFlat8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat7", "#ResidenceFlat8")}
                               onChange = {this.handleResidenceFlat8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat9}
                               name = "ResidenceFlat9"
                               id = "ResidenceFlat9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat8", "#ResidenceFlat9")}
                               onChange = {this.handleResidenceFlat9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat10}
                               name = "ResidenceFlat10"
                               id = "ResidenceFlat10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat9", "#ResidenceFlat10")}
                               onChange = {this.handleResidenceFlat10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat11}
                               name = "ResidenceFlat11"
                               id = "ResidenceFlat11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat10", "#ResidenceFlat11")}
                               onChange = {this.handleResidenceFlat11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat12}
                               name = "ResidenceFlat12"
                               id = "ResidenceFlat12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat11", "#ResidenceFlat12")}
                               onChange = {this.handleResidenceFlat12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat13}
                               name = "ResidenceFlat13"
                               id = "ResidenceFlat13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat12", "#ResidenceFlat13")}
                               onChange = {this.handleResidenceFlat13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat14}
                               name = "ResidenceFlat14"
                               id = "ResidenceFlat14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat13", "#ResidenceFlat14")}
                               onChange = {this.handleResidenceFlat14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat15}
                               name = "ResidenceFlat15"
                               id = "ResidenceFlat15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat14", "#ResidenceFlat15")}
                               onChange = {this.handleResidenceFlat15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat16}
                               name = "ResidenceFlat16"
                               id = "ResidenceFlat16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat15", "#ResidenceFlat16")}
                               onChange = {this.handleResidenceFlat16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat17}
                               name = "ResidenceFlat17"
                               id = "ResidenceFlat17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat16", "#ResidenceFlat17")}
                               onChange = {this.handleResidenceFlat17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat18}
                               name = "ResidenceFlat18"
                               id = "ResidenceFlat18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat17", "#ResidenceFlat18")}
                               onChange = {this.handleResidenceFlat18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat19}
                               name = "ResidenceFlat19"
                               id = "ResidenceFlat19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat18", "#ResidenceFlat19")}
                               onChange = {this.handleResidenceFlat19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat20}
                               name = "ResidenceFlat20"
                               id = "ResidenceFlat20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat19", "#ResidenceFlat20")}
                               onChange = {this.handleResidenceFlat20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat21}
                               name = "ResidenceFlat21"
                               id = "ResidenceFlat21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat20", "#ResidenceFlat21")}
                               onChange = {this.handleResidenceFlat21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat22}
                               name = "ResidenceFlat22"
                               id = "ResidenceFlat22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat21", "#ResidenceFlat22")}
                               onChange = {this.handleResidenceFlat22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat23}
                               name = "ResidenceFlat23"
                               id = "ResidenceFlat23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat22", "#ResidenceFlat23")}
                               onChange = {this.handleResidenceFlat23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat24}
                               name = "ResidenceFlat24"
                               id = "ResidenceFlat24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat23", "#ResidenceFlat24")}
                               onChange = {this.handleResidenceFlat24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceFlat25}
                               name = "ResidenceFlat25"
                               id = "ResidenceFlat25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceFlat24", "#ResidenceFlat25")}
                               onChange = {this.handleResidenceFlat25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers , -, /, ' </label>
                         </span> 
                         : ""}
                         <br/>
                           </div>
                             
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises1}
                               name = "ResidencePremises1"
                               id = "ResidencePremises1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises1", "#ResidencePremises1")}
                               onChange = {this.handleResidencePremises1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises2}
                               name = "ResidencePremises2"
                               id = "ResidencePremises2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises1", "#ResidencePremises2")}
                               onChange = {this.handleResidencePremises2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises3}
                               name = "ResidencePremises3"
                               id = "ResidencePremises3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises2", "#ResidencePremises3")}
                               onChange = {this.handleResidencePremises3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises4}
                               name = "ResidencePremises4"
                               id = "ResidencePremises4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises3", "#ResidencePremises4")}
                               onChange = {this.handleResidencePremises4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises5}
                               name = "ResidencePremises5"
                               id = "ResidencePremises5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises4", "#ResidencePremises5")}
                               onChange = {this.handleResidencePremises5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises6}
                               name = "ResidencePremises6"
                               id = "ResidencePremises6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises5", "#ResidencePremises6")}
                               onChange = {this.handleResidencePremises6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises7}
                               name = "ResidencePremises7"
                               id = "ResidencePremises7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises6", "#ResidencePremises7")}
                               onChange = {this.handleResidencePremises7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises8}
                               name = "ResidencePremises8"
                               id = "ResidencePremises8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises7", "#ResidencePremises8")}
                               onChange = {this.handleResidencePremises8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises9}
                               name = "ResidencePremises9"
                               id = "ResidencePremises9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises8", "#ResidencePremises9")}
                               onChange = {this.handleResidencePremises9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises10}
                               name = "ResidencePremises10"
                               id = "ResidencePremises10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises9", "#ResidencePremises10")}
                               onChange = {this.handleResidencePremises10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises11}
                               name = "ResidencePremises11"
                               id = "ResidencePremises11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises10", "#ResidencePremises11")}
                               onChange = {this.handleResidencePremises11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises12}
                               name = "ResidencePremises12"
                               id = "ResidencePremises12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises11", "#ResidencePremises12")}
                               onChange = {this.handleResidencePremises12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises13}
                               name = "ResidencePremises13"
                               id = "ResidencePremises13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises12", "#ResidencePremises13")}
                               onChange = {this.handleResidencePremises13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises14}
                               name = "ResidencePremises14"
                               id = "ResidencePremises14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises13", "#ResidencePremises14")}
                               onChange = {this.handleResidencePremises14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises15}
                               name = "ResidencePremises15"
                               id = "ResidencePremises15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises14", "#ResidencePremises15")}
                               onChange = {this.handleResidencePremises15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises16}
                               name = "ResidencePremises16"
                               id = "ResidencePremises16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises15", "#ResidencePremises16")}
                               onChange = {this.handleResidencePremises16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises17}
                               name = "ResidencePremises17"
                               id = "ResidencePremises17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises16", "#ResidencePremises17")}
                               onChange = {this.handleResidencePremises17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises18}
                               name = "ResidencePremises18"
                               id = "ResidencePremises18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises17", "#ResidencePremises18")}
                               onChange = {this.handleResidencePremises18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises19}
                               name = "ResidencePremises19"
                               id = "ResidencePremises19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises18", "#ResidencePremises19")}
                               onChange = {this.handleResidencePremises19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises20}
                               name = "ResidencePremises20"
                               id = "ResidencePremises20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises19", "#ResidencePremises20")}
                               onChange = {this.handleResidencePremises20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises21}
                               name = "ResidencePremises21"
                               id = "ResidencePremises21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises20", "#ResidencePremises21")}
                               onChange = {this.handleResidencePremises21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises22}
                               name = "ResidencePremises22"
                               id = "ResidencePremises22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises21", "#ResidencePremises22")}
                               onChange = {this.handleResidencePremises22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises23}
                               name = "ResidencePremises23"
                               id = "ResidencePremises23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises22", "#ResidencePremises23")}
                               onChange = {this.handleResidencePremises23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises24}
                               name = "ResidencePremises24"
                               id = "ResidencePremises24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises23", "#ResidencePremises24")}
                               onChange = {this.handleResidencePremises24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePremises25}
                               name = "ResidencePremises25"
                               id = "ResidencePremises25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePremises24", "#ResidencePremises25")}
                               onChange = {this.handleResidencePremises25}/>
                           {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers </label>
                         </span> 
                         : ""}
                          <br/>
                           </div>

                           <div> 
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad1}
                               name = "ResidenceRoad1"
                               id = "ResidenceRoad1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad1", "#ResidenceRoad1")}
                               onChange = {this.handleResidenceRoad1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad2}
                               name = "ResidenceRoad2"
                               id = "ResidenceRoad2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad1", "#ResidenceRoad2")}
                               onChange = {this.handleResidenceRoad2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad3}
                               name = "ResidenceRoad3"
                               id = "ResidenceRoad3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad2", "#ResidenceRoad3")}
                               onChange = {this.handleResidenceRoad3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad4}
                               name = "ResidenceRoad4"
                               id = "ResidenceRoad4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad3", "#ResidenceRoad4")}
                               onChange = {this.handleResidenceRoad4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad5}
                               name = "ResidenceRoad5"
                               id = "ResidenceRoad5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad4", "#ResidenceRoad5")}
                               onChange = {this.handleResidenceRoad5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad6}
                               name = "ResidenceRoad6"
                               id = "ResidenceRoad6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad5", "#ResidenceRoad6")}
                               onChange = {this.handleResidenceRoad6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad7}
                               name = "ResidenceRoad7"
                               id = "ResidenceRoad7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad6", "#ResidenceRoad7")}
                               onChange = {this.handleResidenceRoad7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad8}
                               name = "ResidenceRoad8"
                               id = "ResidenceRoad8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad7", "#ResidenceRoad8")}
                               onChange = {this.handleResidenceRoad8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad9}
                               name = "ResidenceRoad9"
                               id = "ResidenceRoad9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad8", "#ResidenceRoad9")}
                               onChange = {this.handleResidenceRoad9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad10}
                               name = "ResidenceRoad10"
                               id = "ResidenceRoad10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad9", "#ResidenceRoad10")}
                               onChange = {this.handleResidenceRoad10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad11}
                               name = "ResidenceRoad11"
                               id = "ResidenceRoad11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad10", "#ResidenceRoad11")}
                               onChange = {this.handleResidenceRoad11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad12}
                               name = "ResidenceRoad12"
                               id = "ResidenceRoad12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad11", "#ResidenceRoad12")}
                               onChange = {this.handleResidenceRoad12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad13}
                               name = "ResidenceRoad13"
                               id = "ResidenceRoad13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad12", "#ResidenceRoad13")}
                               onChange = {this.handleResidenceRoad13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad14}
                               name = "ResidenceRoad14"
                               id = "ResidenceRoad14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad13", "#ResidenceRoad14")}
                               onChange = {this.handleResidenceRoad14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad15}
                               name = "ResidenceRoad15"
                               id = "ResidenceRoad15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad14", "#ResidenceRoad15")}
                               onChange = {this.handleResidenceRoad15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad16}
                               name = "ResidenceRoad16"
                               id = "ResidenceRoad16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad15", "#ResidenceRoad16")}
                               onChange = {this.handleResidenceRoad16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad17}
                               name = "ResidenceRoad17"
                               id = "ResidenceRoad17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad16", "#ResidenceRoad17")}
                               onChange = {this.handleResidenceRoad17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad18}
                               name = "ResidenceRoad18"
                               id = "ResidenceRoad18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad17", "#ResidenceRoad18")}
                               onChange = {this.handleResidenceRoad18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad19}
                               name = "ResidenceRoad19"
                               id = "ResidenceRoad19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad18", "#ResidenceRoad19")}
                               onChange = {this.handleResidenceRoad19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad20}
                               name = "ResidenceRoad20"
                               id = "ResidenceRoad20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad19", "#ResidenceRoad20")}
                               onChange = {this.handleResidenceRoad20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad21}
                               name = "ResidenceRoad21"
                               id = "ResidenceRoad21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad20", "#ResidenceRoad21")}
                               onChange = {this.handleResidenceRoad21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad22}
                               name = "ResidenceRoad22"
                               id = "ResidenceRoad22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad21", "#ResidenceRoad22")}
                               onChange = {this.handleResidenceRoad22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad23}
                               name = "ResidenceRoad23"
                               id = "ResidenceRoad23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad22", "#ResidenceRoad23")}
                               onChange = {this.handleResidenceRoad23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad24}
                               name = "ResidenceRoad24"
                               id = "ResidenceRoad24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad23", "#ResidenceRoad24")}
                               onChange = {this.handleResidenceRoad24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceRoad25}
                               name = "ResidenceRoad25"
                               id = "ResidenceRoad25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceRoad24", "#ResidenceRoad25")}
                               onChange = {this.handleResidenceRoad25}/>

                          {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers </label>
                         </span>
                         : ""}
                           <br/>
                           </div>
                            
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea1}
                               name = "ResidenceArea1"
                               id = "ResidenceArea1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea1", "#ResidenceArea1")}
                               onChange = {this.handleResidenceArea1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea2}
                               name = "ResidenceArea2"
                               id = "ResidenceArea2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea1", "#ResidenceArea2")}
                               onChange = {this.handleResidenceArea2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea3}
                               name = "ResidenceArea3"
                               id = "ResidenceArea3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea2", "#ResidenceArea3")}
                               onChange = {this.handleResidenceArea3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea4}
                               name = "ResidenceArea4"
                               id = "ResidenceArea4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea3", "#ResidenceArea4")}
                               onChange = {this.handleResidenceArea4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea5}
                               name = "ResidenceArea5"
                               id = "ResidenceArea5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea4", "#ResidenceArea5")}
                               onChange = {this.handleResidenceArea5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea6}
                               name = "ResidenceArea6"
                               id = "ResidenceArea6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea5", "#ResidenceArea6")}
                               onChange = {this.handleResidenceArea6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea7}
                               name = "ResidenceArea7"
                               id = "ResidenceArea7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea6", "#ResidenceArea7")}
                               onChange = {this.handleResidenceArea7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea8}
                               name = "ResidenceArea8"
                               id = "ResidenceArea8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea7", "#ResidenceArea8")}
                               onChange = {this.handleResidenceArea8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea9}
                               name = "ResidenceArea9"
                               id = "ResidenceArea9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea8", "#ResidenceArea9")}
                               onChange = {this.handleResidenceArea9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea10}
                               name = "ResidenceArea10"
                               id = "ResidenceArea10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea9", "#ResidenceArea10")}
                               onChange = {this.handleResidenceArea10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea11}
                               name = "ResidenceArea11"
                               id = "ResidenceArea11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea10", "#ResidenceArea11")}
                               onChange = {this.handleResidenceArea11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea12}
                               name = "ResidenceArea12"
                               id = "ResidenceArea12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea11", "#ResidenceArea12")}
                               onChange = {this.handleResidenceArea12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea13}
                               name = "ResidenceArea13"
                               id = "ResidenceArea13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea12", "#ResidenceArea13")}
                               onChange = {this.handleResidenceArea13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea14}
                               name = "ResidenceArea14"
                               id = "ResidenceArea14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea13", "#ResidenceArea14")}
                               onChange = {this.handleResidenceArea14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea15}
                               name = "ResidenceArea15"
                               id = "ResidenceArea15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea14", "#ResidenceArea15")}
                               onChange = {this.handleResidenceArea15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea16}
                               name = "ResidenceArea16"
                               id = "ResidenceArea16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea15", "#ResidenceArea16")}
                               onChange = {this.handleResidenceArea16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea17}
                               name = "ResidenceArea17"
                               id = "ResidenceArea17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea16", "#ResidenceArea17")}
                               onChange = {this.handleResidenceArea17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea18}
                               name = "ResidenceArea18"
                               id = "ResidenceArea18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea17", "#ResidenceArea18")}
                               onChange = {this.handleResidenceArea18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea19}
                               name = "ResidenceArea19"
                               id = "ResidenceArea19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea18", "#ResidenceArea19")}
                               onChange = {this.handleResidenceArea19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea20}
                               name = "ResidenceArea20"
                               id = "ResidenceArea20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea19", "#ResidenceArea20")}
                               onChange = {this.handleResidenceArea20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea21}
                               name = "ResidenceArea21"
                               id = "ResidenceArea21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea20", "#ResidenceArea21")}
                               onChange = {this.handleResidenceArea21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea22}
                               name = "ResidenceArea22"
                               id = "ResidenceArea22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea21", "#ResidenceArea22")}
                               onChange = {this.handleResidenceArea22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea23}
                               name = "ResidenceArea23"
                               id = "ResidenceArea23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea22", "#ResidenceArea23")}
                               onChange = {this.handleResidenceArea23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea24}
                               name = "ResidenceArea24"
                               id = "ResidenceArea24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea23", "#ResidenceArea24")}
                               onChange = {this.handleResidenceArea24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceArea25}
                               name = "ResidenceArea25"
                               id = "ResidenceArea25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceArea24", "#ResidenceArea25")}
                               onChange = {this.handleResidenceArea25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter only alphabet</label>
                         </span>
                         : ""}
                          <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown1}
                               name = "ResidenceTown1"
                               id = "ResidenceTown1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown1", "#ResidenceTown1")}
                               onChange = {this.handleResidenceTown1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown2}
                               name = "ResidenceTown2"
                               id = "ResidenceTown2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown1", "#ResidenceTown2")}
                               onChange = {this.handleResidenceTown2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown3}
                               name = "ResidenceTown3"
                               id = "ResidenceTown3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown2", "#ResidenceTown3")}
                               onChange = {this.handleResidenceTown3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown4}
                               name = "ResidenceTown4"
                               id = "ResidenceTown4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown3", "#ResidenceTown4")}
                               onChange = {this.handleResidenceTown4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown5}
                               name = "ResidenceTown5"
                               id = "ResidenceTown5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown4", "#ResidenceTown5")}
                               onChange = {this.handleResidenceTown5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown6}
                               name = "ResidenceTown6"
                               id = "ResidenceTown6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown5", "#ResidenceTown6")}
                               onChange = {this.handleResidenceTown6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown7}
                               name = "ResidenceTown7"
                               id = "ResidenceTown7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown6", "#ResidenceTown7")}
                               onChange = {this.handleResidenceTown7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown8}
                               name = "ResidenceTown8"
                               id = "ResidenceTown8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown7", "#ResidenceTown8")}
                               onChange = {this.handleResidenceTown8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown9}
                               name = "ResidenceTown9"
                               id = "ResidenceTown9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown8", "#ResidenceTown9")}
                               onChange = {this.handleResidenceTown9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown10}
                               name = "ResidenceTown10"
                               id = "ResidenceTown10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown9", "#ResidenceTown10")}
                               onChange = {this.handleResidenceTown10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown11}
                               name = "ResidenceTown11"
                               id = "ResidenceTown11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown10", "#ResidenceTown11")}
                               onChange = {this.handleResidenceTown11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown12}
                               name = "ResidenceTown12"
                               id = "ResidenceTown12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown11", "#ResidenceTown12")}
                               onChange = {this.handleResidenceTown12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown13}
                               name = "ResidenceTown13"
                               id = "ResidenceTown13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown12", "#ResidenceTown13")}
                               onChange = {this.handleResidenceTown13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown14}
                               name = "ResidenceTown14"
                               id = "ResidenceTown14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown13", "#ResidenceTown14")}
                               onChange = {this.handleResidenceTown14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown15}
                               name = "ResidenceTown15"
                               id = "ResidenceTown15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown14", "#ResidenceTown15")}
                               onChange = {this.handleResidenceTown15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown16}
                               name = "ResidenceTown16"
                               id = "ResidenceTown16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown15", "#ResidenceTown16")}
                               onChange = {this.handleResidenceTown16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown17}
                               name = "ResidenceTown17"
                               id = "ResidenceTown17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown16", "#ResidenceTown17")}
                               onChange = {this.handleResidenceTown17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown18}
                               name = "ResidenceTown18"
                               id = "ResidenceTown18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown17", "#ResidenceTown18")}
                               onChange = {this.handleResidenceTown18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown19}
                               name = "ResidenceTown19"
                               id = "ResidenceTown19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown18", "#ResidenceTown19")}
                               onChange = {this.handleResidenceTown19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown20}
                               name = "ResidenceTown20"
                               id = "ResidenceTown20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown19", "#ResidenceTown20")}
                               onChange = {this.handleResidenceTown20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown21}
                               name = "ResidenceTown21"
                               id = "ResidenceTown21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown20", "#ResidenceTown21")}
                               onChange = {this.handleResidenceTown21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown22}
                               name = "ResidenceTown22"
                               id = "ResidenceTown22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown21", "#ResidenceTown22")}
                               onChange = {this.handleResidenceTown22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown23}
                               name = "ResidenceTown23"
                               id = "ResidenceTown23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown22", "#ResidenceTown23")}
                               onChange = {this.handleResidenceTown23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown24}
                               name = "ResidenceTown24"
                               id = "ResidenceTown24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown23", "#ResidenceTown24")}
                               onChange = {this.handleResidenceTown24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.ResidenceTown25}
                               name = "ResidenceTown25"
                               id = "ResidenceTown25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidenceTown24", "#ResidenceTown25")}
                               onChange = {this.handleResidenceTown25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter only alphabet</label>
                         </span>
                         : ""}
                          <br/>
                           </div>
                            

                         </td>
                      </tr>
                    </tbody>
                    </table>
 
                             <label className = "StateId"> State / Union Territory </label>
                         
                             <label className = "PincodeId"> Pincode / Zip code </label>
                          
                             <label className = "CountryId"> Country Name </label>
                             <br/>
                       
                             <span className = "StateValue1"> 
                             <input 
                                className = "StateValue"
                                name="ResidenceState"
                                id = "ResidenceState"
                                value={this.state.data.ResidenceState}
                                onChange={event => this.handleResidenceState(event)}/>
                            </span>
                             
                          
                          <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode1}
                               name = "ResidencePincode1"
                               id = "ResidencePincode1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode1", "#ResidencePincode1")}
                               onChange = {this.handleResidencePincode1}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode2}
                               name = "ResidencePincode2"
                               id = "ResidencePincode2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode1", "#ResidencePincode2")}
                               onChange = {this.handleResidencePincode2}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode3}
                               name = "ResidencePincode3"
                               id = "ResidencePincode3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode2", "#ResidencePincode3")}
                               onChange = {this.handleResidencePincode3}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode4}
                               name = "ResidencePincode4"
                               id = "ResidencePincode4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode3", "#ResidencePincode4")}
                               onChange = {this.handleResidencePincode4}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode5}
                               name = "ResidencePincode5"
                               id = "ResidencePincode5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode4", "#ResidencePincode5")}
                               onChange = {this.handleResidencePincode5}/> 

                             <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode6}
                               name = "ResidencePincode6"
                               id = "ResidencePincode6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode5", "#ResidencePincode6")}
                               onChange = {this.handleResidencePincode6}/>

                             <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.ResidencePincode7}
                               name = "ResidencePincode7"
                               id = "ResidencePincode7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#ResidencePincode6", "#ResidencePincode7")}
                               onChange = {this.handleResidencePincode7}/>


                             <input 
                                className = "CountryValue"
                                name="ResidenceCountry"
                                id = "ResidenceCountry"
                                value={this.state.data.ResidenceCountry}
                                onChange={event => this.handleResidenceCountry(event)}/>


                              {this.state.isIndicatorEnabled === false ? 
                              <span className="tooltip" >
                           <img src={indicator} alt = "img" style={{width:"2.3%",height:"2.3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextCountry" style={{width:"450px",height:"20px"}}>Please enter as applicable</label>
                         </span>
                         : ""}
                           
                     

                    </div>
                    <br /><br />

                    </div>
                    <br />
                    </div>
                    <br /><br />
                    <div className="Form2">
                    <br />
                    <div className="box2">
                     <div className="content2">

                    <label className = "FirstLabel Bold">Office Address </label> 
                    {this.state.isIndicatorEnabled === false ? 
                    <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"2.2%",height:"1.9%" , float: "right" , marginRight: "1.2%"}} />
                            <img src={officefield} alt = "img" className="tooltiptext tooltiptextOffice" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                         <br/>
                    <table>
                    <tbody>
                      <tr>
                         <td className ="first_td">
                            {this.state.address.map((data, index) =>
                               <label className="elements"> {data} <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName1}
                               name = "OfficeName1"
                               id = "OfficeName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName1", "#OfficeName1")}
                               onChange = {this.handleOfficeName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName2}
                               name = "OfficeName2"
                               id = "OfficeName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName1", "#OfficeName2")}
                               onChange = {this.handleOfficeName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName3}
                               name = "OfficeName3"
                               id = "OfficeName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName2", "#OfficeName3")}
                               onChange = {this.handleOfficeName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName4}
                               name = "OfficeName4"
                               id = "OfficeName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName3", "#OfficeName4")}
                               onChange = {this.handleOfficeName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName5}
                               name = "OfficeName5"
                               id = "OfficeName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName4", "#OfficeName5")}
                               onChange = {this.handleOfficeName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName6}
                               name = "OfficeName6"
                               id = "OfficeName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName5", "#OfficeName6")}
                               onChange = {this.handleOfficeName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName7}
                               name = "OfficeName7"
                               id = "OfficeName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName6", "#OfficeName7")}
                               onChange = {this.handleOfficeName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName8}
                               name = "OfficeName8"
                               id = "OfficeName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName7", "#OfficeName8")}
                               onChange = {this.handleOfficeName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName9}
                               name = "OfficeName9"
                               id = "OfficeName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName8", "#OfficeName9")}
                               onChange = {this.handleOfficeName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName10}
                               name = "OfficeName10"
                               id = "OfficeName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName9", "#OfficeName10")}
                               onChange = {this.handleOfficeName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName11}
                               name = "OfficeName11"
                               id = "OfficeName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName10", "#OfficeName11")}
                               onChange = {this.handleOfficeName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName12}
                               name = "OfficeName12"
                               id = "OfficeName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName11", "#OfficeName12")}
                               onChange = {this.handleOfficeName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName13}
                               name = "OfficeName13"
                               id = "OfficeName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName12", "#OfficeName13")}
                               onChange = {this.handleOfficeName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName14}
                               name = "OfficeName14"
                               id = "OfficeName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName13", "#OfficeName14")}
                               onChange = {this.handleOfficeName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName15}
                               name = "OfficeName15"
                               id = "OfficeName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName14", "#OfficeName15")}
                               onChange = {this.handleOfficeName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName16}
                               name = "OfficeName16"
                               id = "OfficeName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName15", "#OfficeName16")}
                               onChange = {this.handleOfficeName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName17}
                               name = "OfficeName17"
                               id = "OfficeName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName16", "#OfficeName17")}
                               onChange = {this.handleOfficeName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName18}
                               name = "OfficeName18"
                               id = "OfficeName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName17", "#OfficeName18")}
                               onChange = {this.handleOfficeName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName19}
                               name = "OfficeName19"
                               id = "OfficeName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName18", "#OfficeName19")}
                               onChange = {this.handleOfficeName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName20}
                               name = "OfficeName20"
                               id = "OfficeName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName19", "#OfficeName20")}
                               onChange = {this.handleOfficeName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName21}
                               name = "OfficeName21"
                               id = "OfficeName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName20", "#OfficeName21")}
                               onChange = {this.handleOfficeName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName22}
                               name = "OfficeName22"
                               id = "OfficeName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName21", "#OfficeName22")}
                               onChange = {this.handleOfficeName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName23}
                               name = "OfficeName23"
                               id = "OfficeName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName22", "#OfficeName23")}
                               onChange = {this.handleOfficeName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName24}
                               name = "OfficeName24"
                               id = "OfficeName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName23", "#OfficeName24")}
                               onChange = {this.handleOfficeName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeName25}
                               name = "OfficeName25"
                               id = "OfficeName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeName24", "#OfficeName25")}
                               onChange = {this.handleOfficeName25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers</label>
                         </span>
                         : ""}
                         <br/>
                           </div>
                           
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat1}
                               name = "OfficeFlat1"
                               id = "OfficeFlat1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat1", "#OfficeFlat1")}
                               onChange = {this.handleOfficeFlat1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat2}
                               name = "OfficeFlat2"
                               id = "OfficeFlat2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat1", "#OfficeFlat2")}
                               onChange = {this.handleOfficeFlat2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat3}
                               name = "OfficeFlat3"
                               id = "OfficeFlat3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat2", "#OfficeFlat3")}
                               onChange = {this.handleOfficeFlat3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat4}
                               name = "OfficeFlat4"
                               id = "OfficeFlat4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat3", "#OfficeFlat4")}
                               onChange = {this.handleOfficeFlat4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat5}
                               name = "OfficeFlat5"
                               id = "OfficeFlat5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat4", "#OfficeFlat5")}
                               onChange = {this.handleOfficeFlat5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat6}
                               name = "OfficeFlat6"
                               id = "OfficeFlat6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat5", "#OfficeFlat6")}
                               onChange = {this.handleOfficeFlat6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat7}
                               name = "OfficeFlat7"
                               id = "OfficeFlat7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat6", "#OfficeFlat7")}
                               onChange = {this.handleOfficeFlat7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat8}
                               name = "OfficeFlat8"
                               id = "OfficeFlat8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat7", "#OfficeFlat8")}
                               onChange = {this.handleOfficeFlat8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat9}
                               name = "OfficeFlat9"
                               id = "OfficeFlat9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat8", "#OfficeFlat9")}
                               onChange = {this.handleOfficeFlat9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat10}
                               name = "OfficeFlat10"
                               id = "OfficeFlat10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat9", "#OfficeFlat10")}
                               onChange = {this.handleOfficeFlat10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat11}
                               name = "OfficeFlat11"
                               id = "OfficeFlat11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat10", "#OfficeFlat11")}
                               onChange = {this.handleOfficeFlat11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat12}
                               name = "OfficeFlat12"
                               id = "OfficeFlat12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat11", "#OfficeFlat12")}
                               onChange = {this.handleOfficeFlat12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat13}
                               name = "OfficeFlat13"
                               id = "OfficeFlat13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat12", "#OfficeFlat13")}
                               onChange = {this.handleOfficeFlat13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat14}
                               name = "OfficeFlat14"
                               id = "OfficeFlat14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat13", "#OfficeFlat14")}
                               onChange = {this.handleOfficeFlat14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat15}
                               name = "OfficeFlat15"
                               id = "OfficeFlat15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat14", "#OfficeFlat15")}
                               onChange = {this.handleOfficeFlat15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat16}
                               name = "OfficeFlat16"
                               id = "OfficeFlat16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat15", "#OfficeFlat16")}
                               onChange = {this.handleOfficeFlat16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat17}
                               name = "OfficeFlat17"
                               id = "OfficeFlat17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat16", "#OfficeFlat17")}
                               onChange = {this.handleOfficeFlat17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat18}
                               name = "OfficeFlat18"
                               id = "OfficeFlat18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat17", "#OfficeFlat18")}
                               onChange = {this.handleOfficeFlat18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat19}
                               name = "OfficeFlat19"
                               id = "OfficeFlat19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat18", "#OfficeFlat19")}
                               onChange = {this.handleOfficeFlat19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat20}
                               name = "OfficeFlat20"
                               id = "OfficeFlat20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat19", "#OfficeFlat20")}
                               onChange = {this.handleOfficeFlat20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat21}
                               name = "OfficeFlat21"
                               id = "OfficeFlat21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat20", "#OfficeFlat21")}
                               onChange = {this.handleOfficeFlat21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat22}
                               name = "OfficeFlat22"
                               id = "OfficeFlat22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat21", "#OfficeFlat22")}
                               onChange = {this.handleOfficeFlat22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat23}
                               name = "OfficeFlat23"
                               id = "OfficeFlat23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat22", "#OfficeFlat23")}
                               onChange = {this.handleOfficeFlat23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat24}
                               name = "OfficeFlat24"
                               id = "OfficeFlat24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat23", "#OfficeFlat24")}
                               onChange = {this.handleOfficeFlat24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeFlat25}
                               name = "OfficeFlat25"
                               id = "OfficeFlat25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeFlat24", "#OfficeFlat25")}
                               onChange = {this.handleOfficeFlat25}/>

                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers, -, /, '</label>
                         </span>
                         : ""}
                         <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises1}
                               name = "OfficePremises1"
                               id = "OfficePremises1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises1", "#OfficePremises1")}
                               onChange = {this.handleOfficePremises1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises2}
                               name = "OfficePremises2"
                               id = "OfficePremises2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises1", "#OfficePremises2")}
                               onChange = {this.handleOfficePremises2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises3}
                               name = "OfficePremises3"
                               id = "OfficePremises3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises2", "#OfficePremises3")}
                               onChange = {this.handleOfficePremises3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises4}
                               name = "OfficePremises4"
                               id = "OfficePremises4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises3", "#OfficePremises4")}
                               onChange = {this.handleOfficePremises4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises5}
                               name = "OfficePremises5"
                               id = "OfficePremises5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises4", "#OfficePremises5")}
                               onChange = {this.handleOfficePremises5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises6}
                               name = "OfficePremises6"
                               id = "OfficePremises6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises5", "#OfficePremises6")}
                               onChange = {this.handleOfficePremises6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises7}
                               name = "OfficePremises7"
                               id = "OfficePremises7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises6", "#OfficePremises7")}
                               onChange = {this.handleOfficePremises7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises8}
                               name = "OfficePremises8"
                               id = "OfficePremises8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises7", "#OfficePremises8")}
                               onChange = {this.handleOfficePremises8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises9}
                               name = "OfficePremises9"
                               id = "OfficePremises9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises8", "#OfficePremises9")}
                               onChange = {this.handleOfficePremises9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises10}
                               name = "OfficePremises10"
                               id = "OfficePremises10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises9", "#OfficePremises10")}
                               onChange = {this.handleOfficePremises10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises11}
                               name = "OfficePremises11"
                               id = "OfficePremises11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises10", "#OfficePremises11")}
                               onChange = {this.handleOfficePremises11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises12}
                               name = "OfficePremises12"
                               id = "OfficePremises12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises11", "#OfficePremises12")}
                               onChange = {this.handleOfficePremises12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises13}
                               name = "OfficePremises13"
                               id = "OfficePremises13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises12", "#OfficePremises13")}
                               onChange = {this.handleOfficePremises13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises14}
                               name = "OfficePremises14"
                               id = "OfficePremises14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises13", "#OfficePremises14")}
                               onChange = {this.handleOfficePremises14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises15}
                               name = "OfficePremises15"
                               id = "OfficePremises15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises14", "#OfficePremises15")}
                               onChange = {this.handleOfficePremises15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises16}
                               name = "OfficePremises16"
                               id = "OfficePremises16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises15", "#OfficePremises16")}
                               onChange = {this.handleOfficePremises16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises17}
                               name = "OfficePremises17"
                               id = "OfficePremises17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises16", "#OfficePremises17")}
                               onChange = {this.handleOfficePremises17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises18}
                               name = "OfficePremises18"
                               id = "OfficePremises18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises17", "#OfficePremises18")}
                               onChange = {this.handleOfficePremises18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises19}
                               name = "OfficePremises19"
                               id = "OfficePremises19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises18", "#OfficePremises19")}
                               onChange = {this.handleOfficePremises19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises20}
                               name = "OfficePremises20"
                               id = "OfficePremises20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises19", "#OfficePremises20")}
                               onChange = {this.handleOfficePremises20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises21}
                               name = "OfficePremises21"
                               id = "OfficePremises21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises20", "#OfficePremises21")}
                               onChange = {this.handleOfficePremises21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises22}
                               name = "OfficePremises22"
                               id = "OfficePremises22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises21", "#OfficePremises22")}
                               onChange = {this.handleOfficePremises22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises23}
                               name = "OfficePremises23"
                               id = "OfficePremises23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises22", "#OfficePremises23")}
                               onChange = {this.handleOfficePremises23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises24}
                               name = "OfficePremises24"
                               id = "OfficePremises24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises23", "#OfficePremises24")}
                               onChange = {this.handleOfficePremises24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePremises25}
                               name = "OfficePremises25"
                               id = "OfficePremises25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePremises24", "#OfficePremises25")}
                               onChange = {this.handleOfficePremises25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet , numbers</label>
                         </span>
                         : ""}
                            <br/>
                           </div>
                            
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad1}
                               name = "OfficeRoad1"
                               id = "OfficeRoad1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad1", "#OfficeRoad1")}
                               onChange = {this.handleOfficeRoad1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad2}
                               name = "OfficeRoad2"
                               id = "OfficeRoad2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad1", "#OfficeRoad2")}
                               onChange = {this.handleOfficeRoad2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad3}
                               name = "OfficeRoad3"
                               id = "OfficeRoad3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad2", "#OfficeRoad3")}
                               onChange = {this.handleOfficeRoad3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad4}
                               name = "OfficeRoad4"
                               id = "OfficeRoad4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad3", "#OfficeRoad4")}
                               onChange = {this.handleOfficeRoad4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad5}
                               name = "OfficeRoad5"
                               id = "OfficeRoad5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad4", "#OfficeRoad5")}
                               onChange = {this.handleOfficeRoad5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad6}
                               name = "OfficeRoad6"
                               id = "OfficeRoad6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad5", "#OfficeRoad6")}
                               onChange = {this.handleOfficeRoad6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad7}
                               name = "OfficeRoad7"
                               id = "OfficeRoad7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad6", "#OfficeRoad7")}
                               onChange = {this.handleOfficeRoad7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad8}
                               name = "OfficeRoad8"
                               id = "OfficeRoad8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad7", "#OfficeRoad8")}
                               onChange = {this.handleOfficeRoad8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad9}
                               name = "OfficeRoad9"
                               id = "OfficeRoad9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad8", "#OfficeRoad9")}
                               onChange = {this.handleOfficeRoad9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad10}
                               name = "OfficeRoad10"
                               id = "OfficeRoad10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad9", "#OfficeRoad10")}
                               onChange = {this.handleOfficeRoad10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad11}
                               name = "OfficeRoad11"
                               id = "OfficeRoad11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad10", "#OfficeRoad11")}
                               onChange = {this.handleOfficeRoad11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad12}
                               name = "OfficeRoad12"
                               id = "OfficeRoad12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad11", "#OfficeRoad12")}
                               onChange = {this.handleOfficeRoad12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad13}
                               name = "OfficeRoad13"
                               id = "OfficeRoad13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad12", "#OfficeRoad13")}
                               onChange = {this.handleOfficeRoad13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad14}
                               name = "OfficeRoad14"
                               id = "OfficeRoad14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad13", "#OfficeRoad14")}
                               onChange = {this.handleOfficeRoad14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad15}
                               name = "OfficeRoad15"
                               id = "OfficeRoad15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad14", "#OfficeRoad15")}
                               onChange = {this.handleOfficeRoad15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad16}
                               name = "OfficeRoad16"
                               id = "OfficeRoad16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad15", "#OfficeRoad16")}
                               onChange = {this.handleOfficeRoad16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad17}
                               name = "OfficeRoad17"
                               id = "OfficeRoad17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad16", "#OfficeRoad17")}
                               onChange = {this.handleOfficeRoad17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad18}
                               name = "OfficeRoad18"
                               id = "OfficeRoad18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad17", "#OfficeRoad18")}
                               onChange = {this.handleOfficeRoad18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad19}
                               name = "OfficeRoad19"
                               id = "OfficeRoad19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad18", "#OfficeRoad19")}
                               onChange = {this.handleOfficeRoad19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad20}
                               name = "OfficeRoad20"
                               id = "OfficeRoad20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad19", "#OfficeRoad20")}
                               onChange = {this.handleOfficeRoad20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad21}
                               name = "OfficeRoad21"
                               id = "OfficeRoad21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad20", "#OfficeRoad21")}
                               onChange = {this.handleOfficeRoad21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad22}
                               name = "OfficeRoad22"
                               id = "OfficeRoad22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad21", "#OfficeRoad22")}
                               onChange = {this.handleOfficeRoad22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad23}
                               name = "OfficeRoad23"
                               id = "OfficeRoad23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad22", "#OfficeRoad23")}
                               onChange = {this.handleOfficeRoad23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad24}
                               name = "OfficeRoad24"
                               id = "OfficeRoad24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad23", "#OfficeRoad24")}
                               onChange = {this.handleOfficeRoad24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeRoad25}
                               name = "OfficeRoad25"
                               id = "OfficeRoad25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeRoad24", "#OfficeRoad25")}
                               onChange = {this.handleOfficeRoad25}/>

                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers</label>
                         </span>
                         : ""}
                         <br/>
                           </div>
                            
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea1}
                               name = "OfficeArea1"
                               id = "OfficeArea1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea1", "#OfficeArea1")}
                               onChange = {this.handleOfficeArea1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea2}
                               name = "OfficeArea2"
                               id = "OfficeArea2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea1", "#OfficeArea2")}
                               onChange = {this.handleOfficeArea2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea3}
                               name = "OfficeArea3"
                               id = "OfficeArea3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea2", "#OfficeArea3")}
                               onChange = {this.handleOfficeArea3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea4}
                               name = "OfficeArea4"
                               id = "OfficeArea4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea3", "#OfficeArea4")}
                               onChange = {this.handleOfficeArea4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea5}
                               name = "OfficeArea5"
                               id = "OfficeArea5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea4", "#OfficeArea5")}
                               onChange = {this.handleOfficeArea5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea6}
                               name = "OfficeArea6"
                               id = "OfficeArea6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea5", "#OfficeArea6")}
                               onChange = {this.handleOfficeArea6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea7}
                               name = "OfficeArea7"
                               id = "OfficeArea7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea6", "#OfficeArea7")}
                               onChange = {this.handleOfficeArea7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea8}
                               name = "OfficeArea8"
                               id = "OfficeArea8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea7", "#OfficeArea8")}
                               onChange = {this.handleOfficeArea8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea9}
                               name = "OfficeArea9"
                               id = "OfficeArea9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea8", "#OfficeArea9")}
                               onChange = {this.handleOfficeArea9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea10}
                               name = "OfficeArea10"
                               id = "OfficeArea10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea9", "#OfficeArea10")}
                               onChange = {this.handleOfficeArea10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea11}
                               name = "OfficeArea11"
                               id = "OfficeArea11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea10", "#OfficeArea11")}
                               onChange = {this.handleOfficeArea11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea12}
                               name = "OfficeArea12"
                               id = "OfficeArea12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea11", "#OfficeArea12")}
                               onChange = {this.handleOfficeArea12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea13}
                               name = "OfficeArea13"
                               id = "OfficeArea13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea12", "#OfficeArea13")}
                               onChange = {this.handleOfficeArea13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea14}
                               name = "OfficeArea14"
                               id = "OfficeArea14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea13", "#OfficeArea14")}
                               onChange = {this.handleOfficeArea14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea15}
                               name = "OfficeArea15"
                               id = "OfficeArea15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea14", "#OfficeArea15")}
                               onChange = {this.handleOfficeArea15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea16}
                               name = "OfficeArea16"
                               id = "OfficeArea16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea15", "#OfficeArea16")}
                               onChange = {this.handleOfficeArea16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea17}
                               name = "OfficeArea17"
                               id = "OfficeArea17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea16", "#OfficeArea17")}
                               onChange = {this.handleOfficeArea17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea18}
                               name = "OfficeArea18"
                               id = "OfficeArea18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea17", "#OfficeArea18")}
                               onChange = {this.handleOfficeArea18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea19}
                               name = "OfficeArea19"
                               id = "OfficeArea19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea18", "#OfficeArea19")}
                               onChange = {this.handleOfficeArea19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea20}
                               name = "OfficeArea20"
                               id = "OfficeArea20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea19", "#OfficeArea20")}
                               onChange = {this.handleOfficeArea20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea21}
                               name = "OfficeArea21"
                               id = "OfficeArea21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea20", "#OfficeArea21")}
                               onChange = {this.handleOfficeArea21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea22}
                               name = "OfficeArea22"
                               id = "OfficeArea22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea21", "#OfficeArea22")}
                               onChange = {this.handleOfficeArea22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea23}
                               name = "OfficeArea23"
                               id = "OfficeArea23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea22", "#OfficeArea23")}
                               onChange = {this.handleOfficeArea23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea24}
                               name = "OfficeArea24"
                               id = "OfficeArea24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea23", "#OfficeArea24")}
                               onChange = {this.handleOfficeArea24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeArea25}
                               name = "OfficeArea25"
                               id = "OfficeArea25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeArea24", "#OfficeArea25")}
                               onChange = {this.handleOfficeArea25}/>
                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}} >Please enter only alphabet</label>
                         </span>
                         : ""}
                         <br/>
                           </div>


                           <div>    
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown1}
                               name = "OfficeTown1"
                               id = "OfficeTown1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown1", "#OfficeTown1")}
                               onChange = {this.handleOfficeTown1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown2}
                               name = "OfficeTown2"
                               id = "OfficeTown2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown1", "#OfficeTown2")}
                               onChange = {this.handleOfficeTown2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown3}
                               name = "OfficeTown3"
                               id = "OfficeTown3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown2", "#OfficeTown3")}
                               onChange = {this.handleOfficeTown3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown4}
                               name = "OfficeTown4"
                               id = "OfficeTown4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown3", "#OfficeTown4")}
                               onChange = {this.handleOfficeTown4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown5}
                               name = "OfficeTown5"
                               id = "OfficeTown5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown4", "#OfficeTown5")}
                               onChange = {this.handleOfficeTown5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown6}
                               name = "OfficeTown6"
                               id = "OfficeTown6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown5", "#OfficeTown6")}
                               onChange = {this.handleOfficeTown6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown7}
                               name = "OfficeTown7"
                               id = "OfficeTown7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown6", "#OfficeTown7")}
                               onChange = {this.handleOfficeTown7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown8}
                               name = "OfficeTown8"
                               id = "OfficeTown8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown7", "#OfficeTown8")}
                               onChange = {this.handleOfficeTown8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown9}
                               name = "OfficeTown9"
                               id = "OfficeTown9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown8", "#OfficeTown9")}
                               onChange = {this.handleOfficeTown9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown10}
                               name = "OfficeTown10"
                               id = "OfficeTown10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown9", "#OfficeTown10")}
                               onChange = {this.handleOfficeTown10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown11}
                               name = "OfficeTown11"
                               id = "OfficeTown11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown10", "#OfficeTown11")}
                               onChange = {this.handleOfficeTown11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown12}
                               name = "OfficeTown12"
                               id = "OfficeTown12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown11", "#OfficeTown12")}
                               onChange = {this.handleOfficeTown12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown13}
                               name = "OfficeTown13"
                               id = "OfficeTown13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown12", "#OfficeTown13")}
                               onChange = {this.handleOfficeTown13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown14}
                               name = "OfficeTown14"
                               id = "OfficeTown14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown13", "#OfficeTown14")}
                               onChange = {this.handleOfficeTown14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown15}
                               name = "OfficeTown15"
                               id = "OfficeTown15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown14", "#OfficeTown15")}
                               onChange = {this.handleOfficeTown15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown16}
                               name = "OfficeTown16"
                               id = "OfficeTown16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown15", "#OfficeTown16")}
                               onChange = {this.handleOfficeTown16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown17}
                               name = "OfficeTown17"
                               id = "OfficeTown17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown16", "#OfficeTown17")}
                               onChange = {this.handleOfficeTown17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown18}
                               name = "OfficeTown18"
                               id = "OfficeTown18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown17", "#OfficeTown18")}
                               onChange = {this.handleOfficeTown18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown19}
                               name = "OfficeTown19"
                               id = "OfficeTown19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown18", "#OfficeTown19")}
                               onChange = {this.handleOfficeTown19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown20}
                               name = "OfficeTown20"
                               id = "OfficeTown20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown19", "#OfficeTown20")}
                               onChange = {this.handleOfficeTown20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown21}
                               name = "OfficeTown21"
                               id = "OfficeTown21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown20", "#OfficeTown21")}
                               onChange = {this.handleOfficeTown21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown22}
                               name = "OfficeTown22"
                               id = "OfficeTown22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown21", "#OfficeTown22")}
                               onChange = {this.handleOfficeTown22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown23}
                               name = "OfficeTown23"
                               id = "OfficeTown23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown22", "#OfficeTown23")}
                               onChange = {this.handleOfficeTown23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown24}
                               name = "OfficeTown24"
                               id = "OfficeTown24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown23", "#OfficeTown24")}
                               onChange = {this.handleOfficeTown24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.OfficeTown25}
                               name = "OfficeTown25"
                               id = "OfficeTown25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficeTown24", "#OfficeTown25")}
                               onChange = {this.handleOfficeTown25}/>

                             {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3%",height:"3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}} >Please enter only alphabet</label>
                         </span>
                         : ""}
                          <br/>  
                            </div>
                             

                         </td>
                      </tr>
                    </tbody>
                    </table>
                     
                   
                             <label className = "StateId"> State / Union Territory </label>
                           
                             <label className = "PincodeId"> Pincode / Zip code </label>
                         
                             <label className = "CountryId"> Country Name </label> <br/>
                          
                             <span className = "StateValue1"> 
                             <input 
                                 className = "StateValue"
                                 name="OfficeState"
                                 id = "OfficeState"
                                 value={this.state.data.OfficeState}
                                 onChange={event => this.handleOfficeState(event)}/>
                            </span>
                                
                          
                          <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode1}
                               name = "OfficePincode1"
                               id = "OfficePincode1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode1", "#OfficePincode1")}
                               onChange = {this.handleOfficePincode1}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode2}
                               name = "OfficePincode2"
                               id = "OfficePincode2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode1", "#OfficePincode2")}
                               onChange = {this.handleOfficePincode2}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode3}
                               name = "OfficePincode3"
                               id = "OfficePincode3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode2", "#OfficePincode3")}
                               onChange = {this.handleOfficePincode3}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode4}
                               name = "OfficePincode4"
                               id = "OfficePincode4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode3", "#OfficePincode4")}
                               onChange = {this.handleOfficePincode4}/>

                            <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode5}
                               name = "OfficePincode5"
                               id = "OfficePincode5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode4", "#OfficePincode5")}
                               onChange = {this.handleOfficePincode5}/> 

                             <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode6}
                               name = "OfficePincode6"
                               id = "OfficePincode6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode5", "#OfficePincode6")}
                               onChange = {this.handleOfficePincode6}/>

                             <input 
                               type="text" 
                               className="Pincode-control"
                               maxLength = "1"
                               value = {this.state.data.OfficePincode7}
                               name = "OfficePincode7"
                               id = "OfficePincode7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#OfficePincode6", "#OfficePincode7")}
                               onChange = {this.handleOfficePincode7}/>

 
                             <input 
                                className = "CountryValue"
                                name="OfficeCountry"
                                id = "OfficeCountry"
                                value={this.state.data.OfficeCountry}
                                onChange={event => this.handleOfficeCountry(event)}/>
                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{ width: "2.3%",height: "2.3% " , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextCountry" style={{width:"450px",height:"20px"}} >Please enter as applicable</label>
                         </span>
                         : ""}
                     
                    

                    {/* Eight Component */}

                    <div className = "ColouredLabel"> 
                        <label >&nbsp;&nbsp; 8 &nbsp; Address for Communication</label>

                        
                        <input 
                           type="checkbox" 
                           className="Check Left_space "
                           value = "Residence"
                           id = "16"
                           name = "Communication[6][]"
                           onClick={(e)=>this.handleCommunicationCheck(e,"Communication")}/>
                        <label className = "Label_with_no_space"> Residence</label> &nbsp; &nbsp;

                        <input 
                           type="checkbox" 
                           className="Check "
                           value = "Office"
                           id = "17"
                           name = "Communication[6][]"
                           onClick={(e)=>this.handleCommunicationCheck(e,"Communication")}/>
                        <label className = "Label_with_no_space"> Office</label>

                        <label className="Label_with_no_space Move_End1"> (please tick as applicable)</label>
                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"2.4%",height:"87%", float: "right" , marginRight: "1%"}} />
                            <img src={communicationcheckfield} alt = "img" className="tooltiptext tooltiptextCommunication" style={{width:"600px",height:"50px"}}  />
                         </span> 
                         : ""}
                    </div>
                    <span className="ErrorMsg">{this.state.errors.Communication}</span>
                     
                     {/* Ninth Component */}

                     <div className = "ColouredLabel">
                       <label className = "ColouredLabel"> &nbsp;&nbsp; 9 &nbsp; Telephone Number & Email ID details</label>
                     </div>

                     <div className= "divnine">
                
                                <label  className ="Country" >Country code </label>
                                <label className = "Std">Area/ STD Code</label>
                                <label className = "Telephone">Telephone / Mobile number</label> <br/>
                                
                
                                <input 
                               type="text" 
                               className="CountryCode-control"
                               maxLength = "1"
                               value = {this.state.data.CountryCode1}
                               style = {{marginLeft: "0.5%"}}
                               name = "CountryCode1"
                               id = "CountryCode1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#CountryCode1", "#CountryCode1")}
                               onChange = {this.handleCountryCode1}/>

                            <input 
                               type="text" 
                               className="CountryCode-control"
                               maxLength = "1"
                               value = {this.state.data.CountryCode2}
                               name = "CountryCode2"
                               id = "CountryCode2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#CountryCode1", "#CountryCode2")}
                               onChange = {this.handleCountryCode2}/>

                            <input 
                               type="text" 
                               className="CountryCode-control"
                               maxLength = "1"
                               value = {this.state.data.CountryCode3}
                               name = "CountryCode3"
                               id = "CountryCode3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#CountryCode2", "#CountryCode3")}
                               onChange = {this.handleCountryCode3}/>
 

                                <span className = "StdCode-control1">
                                <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode1}
                               name = "StdCode1"
                               id = "StdCode1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode1", "#StdCode1")}
                               onChange = {this.handleStdCode1}/>
                               </span>

                            <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode2}
                               name = "StdCode2"
                               id = "StdCode2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode1", "#StdCode2")}
                               onChange = {this.handleStdCode2}/>

                            <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode3}
                               name = "StdCode3"
                               id = "StdCode3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode2", "#StdCode3")}
                               onChange = {this.handleStdCode3}/>

                            <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode4}
                               name = "StdCode4"
                               id = "StdCode4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode3", "#StdCode4")}
                               onChange = {this.handleStdCode4}/>

                            <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode5}
                               name = "StdCode5"
                               id = "StdCode5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode4", "#StdCode5")}
                               onChange = {this.handleStdCode5}/> 

                             <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode6}
                               name = "StdCode6"
                               id = "StdCode6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode5", "#StdCode6")}
                               onChange = {this.handleStdCode6}/>

                             <input 
                               type="text" 
                               className="StdCode-control"
                               maxLength = "1"
                               value = {this.state.data.StdCode7}
                               name = "StdCode7"
                               id = "StdCode7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#StdCode6", "#StdCode7")}
                               onChange = {this.handleStdCode7}/>

                                
                               <span className = "PhoneNumber-control1"> 
                                <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               style = {{marginLeft : "2%"}}
                               value = {this.state.data.PhoneNumber1}
                               name = "PhoneNumber1"
                               id = "PhoneNumber1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber1", "#PhoneNumber1")}
                               onChange = {this.handlePhoneNumber1}/>
                               </span>

                            <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber2}
                               name = "PhoneNumber2"
                               id = "PhoneNumber2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber1", "#PhoneNumber2")}
                               onChange = {this.handlePhoneNumber2}/>

                            <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber3}
                               name = "PhoneNumber3"
                               id = "PhoneNumber3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber2", "#PhoneNumber3")}
                               onChange = {this.handlePhoneNumber3}/>

                            <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber4}
                               name = "PhoneNumber4"
                               id = "PhoneNumber4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber3", "#PhoneNumber4")}
                               onChange = {this.handlePhoneNumber4}/>

                            <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber5}
                               name = "PhoneNumber5"
                               id = "PhoneNumber5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber4", "#PhoneNumber5")}
                               onChange = {this.handlePhoneNumber5}/> 

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber6}
                               name = "PhoneNumber6"
                               id = "PhoneNumber6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber5", "#PhoneNumber6")}
                               onChange = {this.handlePhoneNumber6}/>

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber7}
                               name = "PhoneNumber7"
                               id = "PhoneNumber7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber6", "#PhoneNumber7")}
                               onChange = {this.handlePhoneNumber7}/>

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber8}
                               name = "PhoneNumber8"
                               id = "PhoneNumber8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber7", "#PhoneNumber8")}
                               onChange = {this.handlePhoneNumber8}/> 

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber9}
                               name = "PhoneNumber9"
                               id = "PhoneNumber9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber8", "#PhoneNumber9")}
                               onChange = {this.handlePhoneNumber9}/>

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber10}
                               name = "PhoneNumber10"
                               id = "PhoneNumber10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber9", "#PhoneNumber10")}
                               onChange = {this.handlePhoneNumber10}/>

                            <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber11}
                               name = "PhoneNumber11"
                               id = "PhoneNumber11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber10", "#PhoneNumber11")}
                               onChange = {this.handlePhoneNumber11}/>

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber12}
                               name = "PhoneNumber12"
                               id = "PhoneNumber12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber11", "#PhoneNumber12")}
                               onChange = {this.handlePhoneNumber12}/> 

                             <input 
                               type="text" 
                               className="PhoneNumber-control"
                               maxLength = "1"
                               value = {this.state.data.PhoneNumber13}
                               name = "PhoneNumber13"
                               id = "PhoneNumber13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#PhoneNumber12", "#PhoneNumber13")}
                               onChange = {this.handlePhoneNumber13}/>
                            {this.state.isIndicatorEnabled === false ? 
                            <span className="tooltip"  >
                            <img src={indicator} alt = "img" style={{width:"2.7%",height:"2.3%" , float: "right" , marginRight: "1%"}} />
                                <img src={phonenumberfield} alt = "img" className="tooltiptext tooltiptextPhone" style={{width:"600px",height:"250px"}}  />
                            </span>       
                            : ""}  

                          
            
                     </div> 

                     <div className = "EmailDiv"> 
                     <label className= "FirstLabel"> Email ID</label>

                     <span className = "EmailInput1"> 
                     <input 
                        type= "text" 
                        className = "EmailInput"
                        id="Email"
                        name="Email"
                        value={this.state.data.Email}
                        onChange={event => this.handleEmail(event)}/> 
                     </span> 

                          {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"2.3%",height:"2.3%", float: "right" , marginRight: "1%"}} />
                                <label className="tooltiptext tooltiptextLabel tooltiptextEmail" style={{width:"600px",height:"40px"}}> Please enter combinations of alphabet, numbers, and special characters. <br/>Must include @, .</label>
                            </span>   
                        : ""} 
                            
                     </div>
 
                    {/* Tenth Component */}

                    <div className = "ColouredLabel">
                       <label className = "ColouredLabel">&nbsp;&nbsp; 10 &nbsp; Status of applicant</label>
                       {this.state.isIndicatorEnabled === false ? 
                       <span className="tooltip" >
                            <img src={indicator}  alt = "img" style={{width:"2.3%",height:"87%", float: "right" , marginRight: "1%"}} />
                                <img src={statusfield}  alt = "img" className="tooltiptext tooltiptextStatus" style={{width:"600px",height:"70px"}}  />
                            </span>    
                        :""}
                             <br/>
                    </div>
                    

                    <label className="FirstLabel"> &nbsp;&nbsp;Please select status,</label>  
                    <label className="Label_with_no_space"> as applicable</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
                    
                    <input 
                       type="checkbox" 
                       className="Check GovernmentCheck"
                       style = {{marginLeft : "39.3%"}}
                       value = "Government"
                       id = "22"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>
                    <label className = "Label_with_no_space">Government</label> <br/>

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = "Individual"
                       id = "23"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>
                    <label className = "Label_with_no_space"> Individual</label> &nbsp; 

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       style = {{marginLeft : "4.4%"}}
                       value = "Hindu undivided family"
                       id = "24"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>
                    <label className = "Label_with_no_space"> Hindu undivided family</label> 

                    <input 
                       type="checkbox" 
                       className="Check "
                       style = {{marginLeft : "2%"}}
                       value = "Company"
                       id = "25"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>
                    <label className = "Label_with_no_space"> Company</label> &nbsp;&nbsp;  

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = "Patnership Firm"
                       style = {{marginLeft : "3.7%"}}
                       id = "26"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>
                    <label className = "Label_with_no_space"> Patnership Firm</label> 
                     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 

                     <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = " Associations of Persons"
                       style = {{marginLeft : "3.8%"}}
                       id = "27"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>  
                    <label className = "Label_with_no_space">  Associations of Persons</label>  <br/>

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = "Trusts"
                       id = "28"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/> 
                    <label className = "Label_with_no_space"> Trusts</label>  &nbsp;&nbsp;  &nbsp;&nbsp; 

                     <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = "Body of Individuals"
                       id = "29"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/>    
                    <label className = "Label_with_no_space"> Body of Individuals</label>&nbsp;&nbsp;&nbsp;&nbsp;
                    <input 
                       type="checkbox" 
                       className="Check "
                       value = "Local Authority"
                       id = "30"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/> 
                    <label className = "Label_with_no_space"> Local Authority</label> 

                    <input 
                       type="checkbox" 
                       className="Check "
                       value = "Artificial Juridical Persons"
                       id = "31"
                       style = {{marginLeft : "2.5%"}}
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/> 
                    <label className = "Label_with_no_space">Artificial Juridical Persons</label> 

                    <input 
                       type="checkbox" 
                       className="Check "
                       value = "Limited Liability Partnership"
                       style = {{marginLeft : "3.3%"}}
                       id = "32"
                       name = "Status[7][]"
                       onClick={(e)=>this.handleStatusCheck(e,"Status")}/> 
                    <label className = "Label_with_no_space"> Limited Liability Partnership</label> <br/>
                    <span className="ErrorMsg">{this.state.errors.Status}</span>


                    {/* Eleventh Component */}

                    <div className = "ColouredLabel">
                        <label className = "ColouredLabel">&nbsp;&nbsp; 11 &nbsp; Registration Number (for company, firms, LLPs etc.)</label>
                        {this.state.isIndicatorEnabled === false ? 
                        <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"2.3%",height:"87%", float: "right" , marginRight: "1%"}} />
                                <img src={registrationNumber} alt = "img" className="tooltiptext tooltiptextRegistrationNumber" style={{width:"600px",height:"80px"}}  />
                            </span>  
                        : ""}
                    </div>
                    
                    <div className= "IndividualCheck">   
                    <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber1}
                               name = "RegistrationNumber1"
                               id = "RegistrationNumber1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber1", "#RegistrationNumber1")}
                               onChange = {this.handleRegistrationNumber1}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber2}
                               name = "RegistrationNumber2"
                               id = "RegistrationNumber2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber1", "#RegistrationNumber2")}
                               onChange = {this.handleRegistrationNumber2}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber3}
                               name = "RegistrationNumber3"
                               id = "RegistrationNumber3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber2", "#RegistrationNumber3")}
                               onChange = {this.handleRegistrationNumber3}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber4}
                               name = "RegistrationNumber4"
                               id = "RegistrationNumber4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber3", "#RegistrationNumber4")}
                               onChange = {this.handleRegistrationNumber4}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber5}
                               name = "RegistrationNumber5"
                               id = "RegistrationNumber5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber4", "#RegistrationNumber5")}
                               onChange = {this.handleRegistrationNumber5}/> 

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber6}
                               name = "RegistrationNumber6"
                               id = "RegistrationNumber6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber5", "#RegistrationNumber6")}
                               onChange = {this.handleRegistrationNumber6}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber7}
                               name = "RegistrationNumber7"
                               id = "RegistrationNumber7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber6", "#RegistrationNumber7")}
                               onChange = {this.handleRegistrationNumber7}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber8}
                               name = "RegistrationNumber8"
                               id = "RegistrationNumber8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber7", "#RegistrationNumber8")}
                               onChange = {this.handleRegistrationNumber8}/> 

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber9}
                               name = "RegistrationNumber9"
                               id = "RegistrationNumber9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber8", "#RegistrationNumber9")}
                               onChange = {this.handleRegistrationNumber9}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber10}
                               name = "RegistrationNumber10"
                               id = "RegistrationNumber10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber9", "#RegistrationNumber10")}
                               onChange = {this.handleRegistrationNumber10}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber11}
                               name = "RegistrationNumber11"
                               id = "RegistrationNumber11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber10", "#RegistrationNumber11")}
                               onChange = {this.handleRegistrationNumber11}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber12}
                               name = "RegistrationNumber12"
                               id = "RegistrationNumber12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber11", "#RegistrationNumber12")}
                               onChange = {this.handleRegistrationNumber12}/> 

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber13}
                               name = "RegistrationNumber13"
                               id = "RegistrationNumber13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber12", "#RegistrationNumber13")}
                               onChange = {this.handleRegistrationNumber13}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber14}
                               name = "RegistrationNumber14"
                               id = "RegistrationNumber14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber13", "#RegistrationNumber14")}
                               onChange = {this.handleRegistrationNumber14}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber15}
                               name = "RegistrationNumber15"
                               id = "RegistrationNumber15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber14", "#RegistrationNumber15")}
                               onChange = {this.handleRegistrationNumber15}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber16}
                               name = "RegistrationNumber16"
                               id = "RegistrationNumber16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber15", "#RegistrationNumber16")}
                               onChange = {this.handleRegistrationNumber16}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber17}
                               name = "RegistrationNumber17"
                               id = "RegistrationNumber17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber16", "#RegistrationNumber17")}
                               onChange = {this.handleRegistrationNumber17}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber18}
                               name = "RegistrationNumber18"
                               id = "RegistrationNumber18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber17", "#RegistrationNumber18")}
                               onChange = {this.handleRegistrationNumber18}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber19}
                               name = "RegistrationNumber19"
                               id = "RegistrationNumber19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber18", "#RegistrationNumber19")}
                               onChange = {this.handleRegistrationNumber19}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber20}
                               name = "RegistrationNumber20"
                               id = "RegistrationNumber20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber19", "#RegistrationNumber20")}
                               onChange = {this.handleRegistrationNumber20}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber21}
                               name = "RegistrationNumber21"
                               id = "RegistrationNumber21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber20", "#RegistrationNumber21")}
                               onChange = {this.handleRegistrationNumber21}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber22}
                               name = "RegistrationNumber22"
                               id = "RegistrationNumber22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber21", "#RegistrationNumber22")}
                               onChange = {this.handleRegistrationNumber22}/>

                            <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber23}
                               name = "RegistrationNumber23"
                               id = "RegistrationNumber23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber22", "#RegistrationNumber23")}
                               onChange = {this.handleRegistrationNumber23}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber24}
                               name = "RegistrationNumber24"
                               id = "RegistrationNumber24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber23", "#RegistrationNumber24")}
                               onChange = {this.handleRegistrationNumber24}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber25}
                               name = "RegistrationNumber25"
                               id = "RegistrationNumber25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber24", "#RegistrationNumber25")}
                               onChange = {this.handleRegistrationNumber25}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber26}
                               name = "RegistrationNumber26"
                               id = "RegistrationNumber26"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber25", "#RegistrationNumber26")}
                               onChange = {this.handleRegistrationNumber26}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber27}
                               name = "RegistrationNumber27"
                               id = "RegistrationNumber27"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber26", "#RegistrationNumber27")}
                               onChange = {this.handleRegistrationNumber27}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber28}
                               name = "RegistrationNumber28"
                               id = "RegistrationNumber28"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber27", "#RegistrationNumber28")}
                               onChange = {this.handleRegistrationNumber28}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber29}
                               name = "RegistrationNumber29"
                               id = "RegistrationNumber29"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber28", "#RegistrationNumber29")}
                               onChange = {this.handleRegistrationNumber29}/>

                             <input 
                               type="text" 
                               className="RegistrationNumber-control"
                               maxLength = "1"
                               value = {this.state.data.RegistrationNumber30}
                               name = "RegistrationNumber30"
                               id = "RegistrationNumber30"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RegistrationNumber29", "#RegistrationNumber30")}
                               onChange = {this.handleRegistrationNumber30}/>
                             
                            <br/>
                    </div>

                    {/* Twelth Component */}

                    <div className = "ColouredLabel"> 
                    <label className = "ColouredLabel"> &nbsp;&nbsp;12 &nbsp; In case of a person, who is required to quote Aadhaar number or the Enrolment ID of Aadhaar application form as per section 139 AA</label>
                    </div>
                   
                    <div className= "divtwelve">
            
                               
                             <label  className ="twelve twelve_td" > &nbsp;&nbsp;Please mention your AADHAAR number (if allotted) </label>
                              
                             
                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber1}
                               name = "AadhaarNumber1"
                               id = "AadhaarNumber1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber1", "#AadhaarNumber1")}
                               onChange = {this.handleAadhaarNumber1}/>

                            <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber2}
                               name = "AadhaarNumber2"
                               id = "AadhaarNumber2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber1", "#AadhaarNumber2")}
                               onChange = {this.handleAadhaarNumber2}/>

                            <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber3}
                               name = "AadhaarNumber3"
                               id = "AadhaarNumber3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber2", "#AadhaarNumber3")}
                               onChange = {this.handleAadhaarNumber3}/>

                            <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber4}
                               name = "AadhaarNumber4"
                               id = "AadhaarNumber4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber3", "#AadhaarNumber4")}
                               onChange = {this.handleAadhaarNumber4}/>

                            <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber5}
                               name = "AadhaarNumber5"
                               id = "AadhaarNumber5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber4", "#AadhaarNumber5")}
                               onChange = {this.handleAadhaarNumber5}/> 

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber6}
                               name = "AadhaarNumber6"
                               id = "AadhaarNumber6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber5", "#AadhaarNumber6")}
                               onChange = {this.handleAadhaarNumber6}/>

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber7}
                               name = "AadhaarNumber7"
                               id = "AadhaarNumber7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber6", "#AadhaarNumber7")}
                               onChange = {this.handleAadhaarNumber7}/>

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber8}
                               name = "AadhaarNumber8"
                               id = "AadhaarNumber8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber7", "#AadhaarNumber8")}
                               onChange = {this.handleAadhaarNumber8}/> 

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber9}
                               name = "AadhaarNumber9"
                               id = "AadhaarNumber9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber8", "#AadhaarNumber9")}
                               onChange = {this.handleAadhaarNumber9}/>

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber10}
                               name = "AadhaarNumber10"
                               id = "AadhaarNumber10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber9", "#AadhaarNumber10")}
                               onChange = {this.handleAadhaarNumber10}/>

                            <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber11}
                               name = "AadhaarNumber11"
                               id = "AadhaarNumber11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber10", "#AadhaarNumber11")}
                               onChange = {this.handleAadhaarNumber11}/>

                             <input 
                               type="text" 
                               className="AadhaarNumber-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarNumber12}
                               name = "AadhaarNumber12"
                               id = "AadhaarNumber12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarNumber11", "#AadhaarNumber12")}
                               onChange = {this.handleAadhaarNumber12}/> 

                                 {this.state.isIndicatorEnabled === false ? 
                                 <span className="tooltip"  >
                            <img src={indicator} alt = "img" style={{width:"2.4%",height:"2.4%" , float: "right" , marginRight: "1%" }} />
                                <img src={aadhaarnumber} alt = "img" className="tooltiptext tooltiptextAadhaarNumber" style={{width:"600px",height:"70px"}}  />
                            </span>     
                            : ""}
                             <br/>

                              
                       
                    </div>

                    <label className="FirstLabel"> If AADHAAR number is not allotted, please mention the enrolment ID of Aadhaar application form </label> <br/>

                    <div className= "Left_space_input">   
                            
                             <span className = "EnrolmentId-control1">
                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId1}
                               name = "EnrolmentId1"
                               id = "EnrolmentId1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId1", "#EnrolmentId1")}
                               onChange = {this.handleEnrolmentId1}/>
                                </span>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId2}
                               name = "EnrolmentId2"
                               id = "EnrolmentId2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId1", "#EnrolmentId2")}
                               onChange = {this.handleEnrolmentId2}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId3}
                               name = "EnrolmentId3"
                               id = "EnrolmentId3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId2", "#EnrolmentId3")}
                               onChange = {this.handleEnrolmentId3}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId4}
                               name = "EnrolmentId4"
                               id = "EnrolmentId4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId3", "#EnrolmentId4")}
                               onChange = {this.handleEnrolmentId4}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId5}
                               name = "EnrolmentId5"
                               id = "EnrolmentId5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId4", "#EnrolmentId5")}
                               onChange = {this.handleEnrolmentId5}/> 

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId6}
                               name = "EnrolmentId6"
                               id = "EnrolmentId6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId5", "#EnrolmentId6")}
                               onChange = {this.handleEnrolmentId6}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId7}
                               name = "EnrolmentId7"
                               id = "EnrolmentId7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId6", "#EnrolmentId7")}
                               onChange = {this.handleEnrolmentId7}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId8}
                               name = "EnrolmentId8"
                               id = "EnrolmentId8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId7", "#EnrolmentId8")}
                               onChange = {this.handleEnrolmentId8}/> 

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId9}
                               name = "EnrolmentId9"
                               id = "EnrolmentId9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId8", "#EnrolmentId9")}
                               onChange = {this.handleEnrolmentId9}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId10}
                               name = "EnrolmentId10"
                               id = "EnrolmentId10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId9", "#EnrolmentId10")}
                               onChange = {this.handleEnrolmentId10}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId11}
                               name = "EnrolmentId11"
                               id = "EnrolmentId11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId10", "#EnrolmentId11")}
                               onChange = {this.handleEnrolmentId11}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId12}
                               name = "EnrolmentId12"
                               id = "EnrolmentId12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId11", "#EnrolmentId12")}
                               onChange = {this.handleEnrolmentId12}/> 

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId13}
                               name = "EnrolmentId13"
                               id = "EnrolmentId13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId12", "#EnrolmentId13")}
                               onChange = {this.handleEnrolmentId13}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId14}
                               name = "EnrolmentId14"
                               id = "EnrolmentId14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId13", "#EnrolmentId14")}
                               onChange = {this.handleEnrolmentId14}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId15}
                               name = "EnrolmentId15"
                               id = "EnrolmentId15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId14", "#EnrolmentId15")}
                               onChange = {this.handleEnrolmentId15}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId16}
                               name = "EnrolmentId16"
                               id = "EnrolmentId16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId15", "#EnrolmentId16")}
                               onChange = {this.handleEnrolmentId16}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId17}
                               name = "EnrolmentId17"
                               id = "EnrolmentId17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId16", "#EnrolmentId17")}
                               onChange = {this.handleEnrolmentId17}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId18}
                               name = "EnrolmentId18"
                               id = "EnrolmentId18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId17", "#EnrolmentId18")}
                               onChange = {this.handleEnrolmentId18}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId19}
                               name = "EnrolmentId19"
                               id = "EnrolmentId19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId18", "#EnrolmentId19")}
                               onChange = {this.handleEnrolmentId19}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId20}
                               name = "EnrolmentId20"
                               id = "EnrolmentId20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId19", "#EnrolmentId20")}
                               onChange = {this.handleEnrolmentId20}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId21}
                               name = "EnrolmentId21"
                               id = "EnrolmentId21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId20", "#EnrolmentId21")}
                               onChange = {this.handleEnrolmentId21}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId22}
                               name = "EnrolmentId22"
                               id = "EnrolmentId22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId21", "#EnrolmentId22")}
                               onChange = {this.handleEnrolmentId22}/>

                            <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId23}
                               name = "EnrolmentId23"
                               id = "EnrolmentId23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId22", "#EnrolmentId23")}
                               onChange = {this.handleEnrolmentId23}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId24}
                               name = "EnrolmentId24"
                               id = "EnrolmentId24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId23", "#EnrolmentId24")}
                               onChange = {this.handleEnrolmentId24}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId25}
                               name = "EnrolmentId25"
                               id = "EnrolmentId25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId24", "#EnrolmentId25")}
                               onChange = {this.handleEnrolmentId25}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId26}
                               name = "EnrolmentId26"
                               id = "EnrolmentId26"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId25", "#EnrolmentId26")}
                               onChange = {this.handleEnrolmentId26}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId27}
                               name = "EnrolmentId27"
                               id = "EnrolmentId27"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId26", "#EnrolmentId27")}
                               onChange = {this.handleEnrolmentId27}/>

                             <input 
                               type="text" 
                               className="EnrolmentId-control"
                               maxLength = "1"
                               value = {this.state.data.EnrolmentId28}
                               name = "EnrolmentId28"
                               id = "EnrolmentId28"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#EnrolmentId27", "#EnrolmentId28")}
                               onChange = {this.handleEnrolmentId28}/>

                            
                                   {this.state.isIndicatorEnabled === false ? 
                                 <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"3.2%",height:"2.2%", float: "right" , marginRight: "1%" }} />
                                <img src={enrolmentid} alt = "img"  className="tooltiptext tooltiptextEnrolmentId" style={{width:"600px",height:"180px"}}  />
                            </span>  
                            : ""}
                              <br/>

                        

                    </div>

                    <label className="FirstLabel"> Name as per AADHAAR letter or card or as per the Enrolment ID of Aadhaar application form</label>
                    {/* {this.state.isIndicatorEnabled === false ? 
                    <span className="tooltip" >
                            <img src={indicator} style={{width:"2.4%",height:"2.4%", float: "right" , marginRight: "1%"}} />
                                <img src={aadhaarnamefield} className="tooltiptext tooltiptextAadhaarName" style={{width:"600px",height:"120px"}}  />
                            </span> 
                    : ""}   */}
                    
                    <div className = "Left_space2">
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName1}
                               name = "AadhaarLastName1"
                               id = "AadhaarLastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName1", "#AadhaarLastName1")}
                               onChange = {this.handleAadhaarLastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName2}
                               name = "AadhaarLastName2"
                               id = "AadhaarLastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName1", "#AadhaarLastName2")}
                               onChange = {this.handleAadhaarLastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName3}
                               name = "AadhaarLastName3"
                               id = "AadhaarLastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName2", "#AadhaarLastName3")}
                               onChange = {this.handleAadhaarLastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName4}
                               name = "AadhaarLastName4"
                               id = "AadhaarLastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName3", "#AadhaarLastName4")}
                               onChange = {this.handleAadhaarLastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName5}
                               name = "AadhaarLastName5"
                               id = "AadhaarLastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName4", "#AadhaarLastName5")}
                               onChange = {this.handleAadhaarLastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName6}
                               name = "AadhaarLastName6"
                               id = "AadhaarLastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName5", "#AadhaarLastName6")}
                               onChange = {this.handleAadhaarLastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName7}
                               name = "AadhaarLastName7"
                               id = "AadhaarLastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName6", "#AadhaarLastName7")}
                               onChange = {this.handleAadhaarLastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName8}
                               name = "AadhaarLastName8"
                               id = "AadhaarLastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName7", "#AadhaarLastName8")}
                               onChange = {this.handleAadhaarLastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName9}
                               name = "AadhaarLastName9"
                               id = "AadhaarLastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName8", "#AadhaarLastName9")}
                               onChange = {this.handleAadhaarLastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName10}
                               name = "AadhaarLastName10"
                               id = "AadhaarLastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName9", "#AadhaarLastName10")}
                               onChange = {this.handleAadhaarLastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName11}
                               name = "AadhaarLastName11"
                               id = "AadhaarLastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName10", "#AadhaarLastName11")}
                               onChange = {this.handleAadhaarLastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName12}
                               name = "AadhaarLastName12"
                               id = "AadhaarLastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName11", "#AadhaarLastName12")}
                               onChange = {this.handleAadhaarLastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName13}
                               name = "AadhaarLastName13"
                               id = "AadhaarLastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName12", "#AadhaarLastName13")}
                               onChange = {this.handleAadhaarLastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName14}
                               name = "AadhaarLastName14"
                               id = "AadhaarLastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName13", "#AadhaarLastName14")}
                               onChange = {this.handleAadhaarLastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName15}
                               name = "AadhaarLastName15"
                               id = "AadhaarLastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName14", "#AadhaarLastName15")}
                               onChange = {this.handleAadhaarLastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName16}
                               name = "AadhaarLastName16"
                               id = "AadhaarLastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName15", "#AadhaarLastName16")}
                               onChange = {this.handleAadhaarLastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName17}
                               name = "AadhaarLastName17"
                               id = "AadhaarLastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName16", "#AadhaarLastName17")}
                               onChange = {this.handleAadhaarLastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName18}
                               name = "AadhaarLastName18"
                               id = "AadhaarLastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName17", "#AadhaarLastName18")}
                               onChange = {this.handleAadhaarLastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName19}
                               name = "AadhaarLastName19"
                               id = "AadhaarLastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName18", "#AadhaarLastName19")}
                               onChange = {this.handleAadhaarLastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName20}
                               name = "AadhaarLastName20"
                               id = "AadhaarLastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName19", "#AadhaarLastName20")}
                               onChange = {this.handleAadhaarLastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName21}
                               name = "AadhaarLastName21"
                               id = "AadhaarLastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName20", "#AadhaarLastName21")}
                               onChange = {this.handleAadhaarLastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName22}
                               name = "AadhaarLastName22"
                               id = "AadhaarLastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName21", "#AadhaarLastName22")}
                               onChange = {this.handleAadhaarLastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName23}
                               name = "AadhaarLastName23"
                               id = "AadhaarLastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName22", "#AadhaarLastName23")}
                               onChange = {this.handleAadhaarLastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName24}
                               name = "AadhaarLastName24"
                               id = "AadhaarLastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName23", "#AadhaarLastName24")}
                               onChange = {this.handleAadhaarLastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarLastName25}
                               name = "AadhaarLastName25"
                               id = "AadhaarLastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarLastName24", "#AadhaarLastName25")}
                               onChange = {this.handleAadhaarLastName25}/>

                     {this.state.isIndicatorEnabled === false ? 
                    <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"3.4%",height:"2.4%", float: "right" , marginRight: "1%"}} />
                                <img src={aadhaarnamefield} alt = "img" className="tooltiptext tooltiptextAadhaarName " style={{width:"600px",height:"120px"}}  />
                            </span> 
                    : ""}    

                    {/* {this.state.isIndicatorEnabled === false ? 
                             <span className="tooltip" >
                          <img src={indicator} style={{width:"3.5%",height:"3.3%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextAadhaarName1" style={{width:"450px",height:"20px"}}>Please enter name as in aadhaar card</label>
                         </span>
                         : ""}
                          <br/> */}
                           </div>
                         
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName1}
                               name = "AadhaarFirstName1"
                               id = "AadhaarFirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName1", "#AadhaarFirstName1")}
                               onChange = {this.handleAadhaarFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName2}
                               name = "AadhaarFirstName2"
                               id    = "AadhaarFirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName1", "#AadhaarFirstName2")}
                               onChange = {this.handleAadhaarFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName3}
                               name = "AadhaarFirstName3"
                               id = "AadhaarFirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName2", "#AadhaarFirstName3")}
                               onChange = {this.handleAadhaarFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName4}
                               name = "AadhaarFirstName4"
                               id = "AadhaarFirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName3", "#AadhaarFirstName4")}
                               onChange = {this.handleAadhaarFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName5}
                               name = "AadhaarFirstName5"
                               id = "AadhaarFirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName4", "#AadhaarFirstName5")}
                               onChange = {this.handleAadhaarFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName6}
                               name = "AadhaarFirstName6"
                               id = "AadhaarFirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName5", "#AadhaarFirstName6")}
                               onChange = {this.handleAadhaarFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName7}
                               name = "AadhaarFirstName7"
                               id = "AadhaarFirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName6", "#AadhaarFirstName7")}
                               onChange = {this.handleAadhaarFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName8}
                               name = "AadhaarFirstName8"
                               id = "AadhaarFirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName7", "#AadhaarFirstName8")}
                               onChange = {this.handleAadhaarFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName9}
                               name = "AadhaarFirstName9"
                               id = "AadhaarFirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName8", "#AadhaarFirstName9")}
                               onChange = {this.handleAadhaarFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName10}
                               name = "AadhaarFirstName10"
                               id = "AadhaarFirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName9", "#AadhaarFirstName10")}
                               onChange = {this.handleAadhaarFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName11}
                               name = "AadhaarFirstName11"
                               id = "AadhaarFirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName10", "#AadhaarFirstName11")}
                               onChange = {this.handleAadhaarFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName12}
                               name = "AadhaarFirstName12"
                               id = "AadhaarFirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName11", "#AadhaarFirstName12")}
                               onChange = {this.handleAadhaarFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName13}
                               name = "AadhaarFirstName13"
                               id = "AadhaarFirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName12", "#AadhaarFirstName13")}
                               onChange = {this.handleAadhaarFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName14}
                               name = "AadhaarFirstName14"
                               id = "AadhaarFirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName13", "#AadhaarFirstName14")}
                               onChange = {this.handleAadhaarFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName15}
                               name = "AadhaarFirstName15"
                               id = "AadhaarFirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName14", "#AadhaarFirstName15")}
                               onChange = {this.handleAadhaarFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName16}
                               name = "AadhaarFirstName16"
                               id = "AadhaarFirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName15", "#AadhaarFirstName16")}
                               onChange = {this.handleAadhaarFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName17}
                               name = "AadhaarFirstName17"
                               id = "AadhaarFirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName16", "#AadhaarFirstName17")}
                               onChange = {this.handleAadhaarFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName18}
                               name = "AadhaarFirstName18"
                               id = "AadhaarFirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName17", "#AadhaarFirstName18")}
                               onChange = {this.handleAadhaarFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName19}
                               name = "AadhaarFirstName19"
                               id = "AadhaarFirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName18", "#AadhaarFirstName19")}
                               onChange = {this.handleAadhaarFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName20}
                               name = "AadhaarFirstName20"
                               id = "AadhaarFirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName19", "#AadhaarFirstName20")}
                               onChange = {this.handleAadhaarFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName21}
                               name = "AadhaarFirstName21"
                               id = "AadhaarFirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName20", "#AadhaarFirstName21")}
                               onChange = {this.handleAadhaarFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName22}
                               name = "AadhaarFirstName22"
                               id = "AadhaarFirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName21", "#AadhaarFirstName22")}
                               onChange = {this.handleAadhaarFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName23}
                               name = "AadhaarFirstName23"
                               id = "AadhaarFirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName22", "#AadhaarFirstName23")}
                               onChange = {this.handleAadhaarFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName24}
                               name = "AadhaarFirstName24"
                               id = "AadhaarFirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName23", "#AadhaarFirstName24")}
                               onChange = {this.handleAadhaarFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarFirstName25}
                               name = "AadhaarFirstName25"
                               id = "AadhaarFirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarFirstName24", "#AadhaarFirstName25")}
                               onChange = {this.handleAadhaarFirstName25}/>
{/* 
                             {this.state.isIndicatorEnabled === false ?
                             <span className="tooltip"  >
                          <img src={indicator} style={{width:"3.3%",height:"3.3%" , float: "right" , marginRight: "1.4%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextAadhaarName1" style={{width:"450px",height:"20px"}}>Please enter name as in aadhaar card</label>
                         </span>
                         : ""}
                           <br/> */}
                           </div>
 
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName1}
                               name = "AadhaarMiddleName1"
                               id = "AadhaarMiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName1", "#AadhaarMiddleName1")}
                               onChange = {this.handleAadhaarMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName2}
                               name = "AadhaarMiddleName2"
                               id = "AadhaarMiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName1", "#AadhaarMiddleName2")}
                               onChange = {this.handleAadhaarMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName3}
                               name = "AadhaarMiddleName3"
                               id = "AadhaarMiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName2", "#AadhaarMiddleName3")}
                               onChange = {this.handleAadhaarMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName4}
                               name = "AadhaarMiddleName4"
                               id = "AadhaarMiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName3", "#AadhaarMiddleName4")}
                               onChange = {this.handleAadhaarMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName5}
                               name = "AadhaarMiddleName5"
                               id = "AadhaarMiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName4", "#AadhaarMiddleName5")}
                               onChange = {this.handleAadhaarMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName6}
                               name = "AadhaarMiddleName6"
                               id = "AadhaarMiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName5", "#AadhaarMiddleName6")}
                               onChange = {this.handleAadhaarMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName7}
                               name = "AadhaarMiddleName7"
                               id = "AadhaarMiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName6", "#AadhaarMiddleName7")}
                               onChange = {this.handleAadhaarMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName8}
                               name = "AadhaarMiddleName8"
                               id = "AadhaarMiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName7", "#AadhaarMiddleName8")}
                               onChange = {this.handleAadhaarMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName9}
                               name = "AadhaarMiddleName9"
                               id = "AadhaarMiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName8", "#AadhaarMiddleName9")}
                               onChange = {this.handleAadhaarMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName10}
                               name = "AadhaarMiddleName10"
                               id = "AadhaarMiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName9", "#AadhaarMiddleName10")}
                               onChange = {this.handleAadhaarMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName11}
                               name = "AadhaarMiddleName11"
                               id = "AadhaarMiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName10", "#AadhaarMiddleName11")}
                               onChange = {this.handleAadhaarMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName12}
                               name = "AadhaarMiddleName12"
                               id = "AadhaarMiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName11", "#AadhaarMiddleName12")}
                               onChange = {this.handleAadhaarMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName13}
                               name = "AadhaarMiddleName13"
                               id = "AadhaarMiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName12", "#AadhaarMiddleName13")}
                               onChange = {this.handleAadhaarMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName14}
                               name = "AadhaarMiddleName14"
                               id = "AadhaarMiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName13", "#AadhaarMiddleName14")}
                               onChange = {this.handleAadhaarMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName15}
                               name = "AadhaarMiddleName15"
                               id = "AadhaarMiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName14", "#AadhaarMiddleName15")}
                               onChange = {this.handleAadhaarMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName16}
                               name = "AadhaarMiddleName16"
                               id = "AadhaarMiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName15", "#AadhaarMiddleName16")}
                               onChange = {this.handleAadhaarMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName17}
                               name = "AadhaarMiddleName17"
                               id = "AadhaarMiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName16", "#AadhaarMiddleName17")}
                               onChange = {this.handleAadhaarMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName18}
                               name = "AadhaarMiddleName18"
                               id = "AadhaarMiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName17", "#AadhaarMiddleName18")}
                               onChange = {this.handleAadhaarMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName19}
                               name = "AadhaarMiddleName19"
                               id = "AadhaarMiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName18", "#AadhaarMiddleName19")}
                               onChange = {this.handleAadhaarMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName20}
                               name = "AadhaarMiddleName20"
                               id = "AadhaarMiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName19", "#AadhaarMiddleName20")}
                               onChange = {this.handleAadhaarMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName21}
                               name = "AadhaarMiddleName21"
                               id = "AadhaarMiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName20", "#AadhaarMiddleName21")}
                               onChange = {this.handleAadhaarMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName22}
                               name = "AadhaarMiddleName22"
                               id = "AadhaarMiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName21", "#AadhaarMiddleName22")}
                               onChange = {this.handleAadhaarMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName23}
                               name = "AadhaarMiddleName23"
                               id = "AadhaarMiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName22", "#AadhaarMiddleName23")}
                               onChange = {this.handleAadhaarMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName24}
                               name = "AadhaarMiddleName24"
                               id = "AadhaarMiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName23", "#AadhaarMiddleName24")}
                               onChange = {this.handleAadhaarMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.AadhaarMiddleName25}
                               name = "AadhaarMiddleName25"
                               id = "AadhaarMiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#AadhaarMiddleName24", "#AadhaarMiddleName25")}
                               onChange = {this.handleAadhaarMiddleName25}/>

                             {/* {this.state.isIndicatorEnabled === false ?
                             <span className="tooltip" >
                          <img src={indicator} style={{width:"3.3%",height:"3.3%" , float: "right" , marginRight: "1.4%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextAadhaarName1" style={{width:"450px",height:"20px"}}>Please enter name as in aadhaar card</label>
                         </span>
                         : ""}
                          <br/> */}
                        </div>

                    </div>

                    {/* Thirteeenth Component */}

                    <div className = "ColouredLabel">  
                       <label className = "ColouredLabel">&nbsp;&nbsp;13 &nbsp; Source of Income</label> 
                       <label className = "ColouredLabel Move_End2 Italic_text"> Please select,</label> 
                       <label className = "ColouredLabel"> as applicable</label> 
                       {this.state.isIndicatorEnabled === false ?
                       <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"2.3%",height:"87%", float: "right" , marginRight: "1%" }} />
                                <img src={sourceOfIncome} alt = "img" className="tooltiptext tooltiptextIncome" style={{width:"600px",height:"300px"}}  />
                            </span> 
                        : ""}
                    </div>

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck "
                       value = " Salary"
                       id = "33"
                       name = "Salary"
                       disabled={!this.state.data.isEnabledCheck}
                       onClick={(e)=>this.handleSalaryCheck(e,"Salary")}/>                    
                    <label className = "Label_with_no_space"> Salary</label> 
                    
                     &nbsp;
                     <input 
                       type="checkbox" 
                       className="Check CapitalCheck "
                       value = "Capital Gains"
                       id = "34"
                       name = "CapitalGains"
                       disabled={!this.state.data.isEnabledCheck}
                       onClick={(e)=>this.handleCapitalGainsCheck(e,"CapitalGains")}/>                      
                    <label className = "Label_with_no_space"> Capital Gains</label>  <br/>

                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = "IncomefromBusiness"
                       id = "35"
                       name = "IncomeBusiness"
                       disabled={!this.state.data.isEnabledCheck}
                       onClick={(e)=>this.handleIncomeBusinessCheck(e,"IncomeBusiness")}/>                    
                    <label className = "Label_with_no_space"> Income from Business / Profession</label> 

                     
                         
                      <label className = "FirstLabel"> Business/Profession code</label> 
 
                      <input 
                         type= "text" 
                         className = "inputBox" 
                         id = "BusinessCode1" 
                         name = "BusinessCode1"
                         maxLength = "1"
                         disabled={!this.state.data.isEnabled}
                         value={this.state.data.BusinessCode1}
                         onKeyDown = {event => this.handleBackspaceKey(event, "#BusinessCode1", "#BusinessCode1")}
                         onChange={event => this.handleBusinessCode1(event)}/> 
                         

                      <input 
                         type= "text" 
                         className = "inputBox" 
                         id = "BusinessCode2" 
                         name = "BusinessCode2"
                         maxLength = "1"
                         disabled={!this.state.data.isEnabled}
                         value={this.state.data.BusinessCode2}
                         onKeyDown = {event => this.handleBackspaceKey(event, "#BusinessCode1", "#BusinessCode2")}
                         onChange={event => this.handleBusinessCode2(event)}/>  
                      

                      <label className = "Label_with_no_space"> [For Code: Refer instructions] </label> 
                     &nbsp;&nbsp;   
                     

                    <input 
                       type="checkbox" 
                       className="Check Telephone_space"
                       value = "Income from Other sources"
                       id = "36"
                       name = "IncomeOtherSource"
                       disabled={!this.state.data.isEnabledCheck}
                       style = {{marginLeft : "7%"}}
                       onClick={(e)=>this.handleIncomeOtherSourceCheck(e,"IncomeOtherSource")}/>                         
                    <label className = "Label_with_no_space"> Income from Other sources</label> <br/>
                    
                    <input 
                       type="checkbox" 
                       className="Check IndividualCheck"
                       value = " Income from House property"
                       id = "37"
                       name = "IncomeFromHouse"
                       disabled={!this.state.data.isEnabledCheck}
                       onClick={(e)=>this.handleIncomeFromHouseCheck(e,"IncomeFromHouse")}/>    
                    <label className = "Label_with_no_space"> Income from House property</label>

                    <input 
                       type="checkbox" 
                       className="Check End_space"
                       value = " No income"
                       id = "38"
                       name = "NoIncome"
                       style = {{marginLeft : "52.3%"}}
                       onClick={(e)=>this.handleNoIncomeCheck(e,"NoIncome")}/> 
                    <label className = "Label_with_no_space"> No income</label> <br/>

                
                    <span className="ErrorMsg">{this.state.errors.Income}</span>
                     

                    {/* Fourteenth Component */}

                    <div className = "ColouredLabel"> 
                        <label className = "ColouredLabel">&nbsp;&nbsp; 14 &nbsp; Representative Assessee (RA)</label>
                        {this.state.isIndicatorEnabled === false ?
                        <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"2.3%",height:"86%" , float: "right" , marginRight: "1%"}} />
                                <img src={respresentativeAssessee} alt = "img" className="tooltiptext tooltiptextRA" style={{width:"600px",height:"180px"}}  />
                            </span> 
                        : ""}
                    </div>
                     
                    <label className="FirstLabel"> &nbsp;&nbsp; Full name, address of the Representative Assessee, who is assessible under the Income Tax Act in respect of the person, whose particulars have
                    <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;been given in the column 1-13.</label> 
                    
                    <div className = "ColouredLabel"> 
                        <label className = "ColouredLabel"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Full Name (Full expanded name : initials are not permitted)</label>
                    </div>

                    <label className="FirstLabel"> Please select title,</label>
                   <label className="Label_with_no_space"> as applicable</label> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;

                   <input 
                      type="checkbox" 
                      className="Check"
                      id = "18"
                      value = "3Shri"
                      name = "NameTitleThree[9][]"
                      onClick={(e)=>this.handleNameTitleThreeCheck(e,"NameTitleThree")}/>
                   <label className="Label_with_no_space"> Shri</label>

                   <input 
                      type="checkbox" 
                      className="Check"
                      id = "19"
                      value = "3Smt."
                      name = "NameTitleThree[9][]"
                      onClick={(e)=>this.handleNameTitleThreeCheck(e,"NameTitleThree")}/>
                   <label className="Label_with_no_space"> Smt.</label>

                   <input 
                      type="checkbox" 
                      className="Check"
                      id = "20"
                      value = "3Kumari"
                      name = "NameTitleThree[9][]"
                      onClick={(e)=>this.handleNameTitleThreeCheck(e,"NameTitleThree")}/>                
                   <label className="Label_with_no_space"> Kumari</label>

                   <input 
                      type="checkbox" 
                      className="Check"
                      id = "21"
                      value = "3M/s"
                      name = "NameTitleThree[9][]"
                      onClick={(e)=>this.handleNameTitleThreeCheck(e,"NameTitleThree")}/>      
                   <label className="Label_with_no_space"> M/s</label> <br />
                    
                   <table>
                   <tbody>
                      <tr>
                         <td className ="first_td">
                           {this.state.name.map((data, index) =>
                               <label className="elements"> {data} <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                           
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName1}
                               name = "RALastName1"
                               id = "RALastName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName1", "#RALastName1")}
                               onChange = {this.handleRALastName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName2}
                               name = "RALastName2"
                               id = "RALastName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName1", "#RALastName2")}
                               onChange = {this.handleRALastName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName3}
                               name = "RALastName3"
                               id = "RALastName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName2", "#RALastName3")}
                               onChange = {this.handleRALastName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName4}
                               name = "RALastName4"
                               id = "RALastName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName3", "#RALastName4")}
                               onChange = {this.handleRALastName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName5}
                               name = "RALastName5"
                               id = "RALastName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName4", "#RALastName5")}
                               onChange = {this.handleRALastName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName6}
                               name = "RALastName6"
                               id = "RALastName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName5", "#RALastName6")}
                               onChange = {this.handleRALastName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName7}
                               name = "RALastName7"
                               id = "RALastName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName6", "#RALastName7")}
                               onChange = {this.handleRALastName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName8}
                               name = "RALastName8"
                               id = "RALastName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName7", "#RALastName8")}
                               onChange = {this.handleRALastName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName9}
                               name = "RALastName9"
                               id = "RALastName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName8", "#RALastName9")}
                               onChange = {this.handleRALastName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName10}
                               name = "RALastName10"
                               id = "RALastName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName9", "#RALastName10")}
                               onChange = {this.handleRALastName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName11}
                               name = "RALastName11"
                               id = "RALastName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName10", "#RALastName11")}
                               onChange = {this.handleRALastName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName12}
                               name = "RALastName12"
                               id = "RALastName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName11", "#RALastName12")}
                               onChange = {this.handleRALastName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName13}
                               name = "RALastName13"
                               id = "RALastName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName12", "#RALastName13")}
                               onChange = {this.handleRALastName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName14}
                               name = "RALastName14"
                               id = "RALastName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName13", "#RALastName14")}
                               onChange = {this.handleRALastName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName15}
                               name = "RALastName15"
                               id = "RALastName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName14", "#RALastName15")}
                               onChange = {this.handleRALastName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName16}
                               name = "RALastName16"
                               id = "RALastName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName15", "#RALastName16")}
                               onChange = {this.handleRALastName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName17}
                               name = "RALastName17"
                               id = "RALastName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName16", "#RALastName17")}
                               onChange = {this.handleRALastName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName18}
                               name = "RALastName18"
                               id = "RALastName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName17", "#RALastName18")}
                               onChange = {this.handleRALastName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName19}
                               name = "RALastName19"
                               id = "RALastName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName18", "#RALastName19")}
                               onChange = {this.handleRALastName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName20}
                               name = "RALastName20"
                               id = "RALastName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName19", "#RALastName20")}
                               onChange = {this.handleRALastName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName21}
                               name = "RALastName21"
                               id = "RALastName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName20", "#RALastName21")}
                               onChange = {this.handleRALastName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName22}
                               name = "RALastName22"
                               id = "RALastName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName21", "#RALastName22")}
                               onChange = {this.handleRALastName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName23}
                               name = "RALastName23"
                               id = "RALastName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName22", "#RALastName23")}
                               onChange = {this.handleRALastName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName24}
                               name = "RALastName24"
                               id = "RALastName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName23", "#RALastName24")}
                               onChange = {this.handleRALastName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RALastName25}
                               name = "RALastName25"
                               id = "RALastName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RALastName24", "#RALastName25")}
                               onChange = {this.handleRALastName25}/>
                         {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                          <br/>
                           </div>

                           <div>  
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName1}
                               name = "RAFirstName1"
                               id = "RAFirstName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName1", "#RAFirstName1")}
                               onChange = {this.handleRAFirstName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName2}
                               name = "RAFirstName2"
                               id = "RAFirstName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName1", "#RAFirstName2")}
                               onChange = {this.handleRAFirstName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName3}
                               name = "RAFirstName3"
                               id = "RAFirstName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName2", "#RAFirstName3")}
                               onChange = {this.handleRAFirstName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName4}
                               name = "RAFirstName4"
                               id = "RAFirstName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName3", "#RAFirstName4")}
                               onChange = {this.handleRAFirstName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName5}
                               name = "RAFirstName5"
                               id = "RAFirstName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName4", "#RAFirstName5")}
                               onChange = {this.handleRAFirstName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName6}
                               name = "RAFirstName6"
                               id = "RAFirstName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName5", "#RAFirstName6")}
                               onChange = {this.handleRAFirstName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName7}
                               name = "RAFirstName7"
                               id = "RAFirstName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName6", "#RAFirstName7")}
                               onChange = {this.handleRAFirstName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName8}
                               name = "RAFirstName8"
                               id = "RAFirstName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName7", "#RAFirstName8")}
                               onChange = {this.handleRAFirstName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName9}
                               name = "RAFirstName9"
                               id = "RAFirstName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName8", "#RAFirstName9")}
                               onChange = {this.handleRAFirstName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName10}
                               name = "RAFirstName10"
                               id = "RAFirstName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName9", "#RAFirstName10")}
                               onChange = {this.handleRAFirstName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName11}
                               name = "RAFirstName11"
                               id = "RAFirstName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName10", "#RAFirstName11")}
                               onChange = {this.handleRAFirstName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName12}
                               name = "RAFirstName12"
                               id = "RAFirstName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName11", "#RAFirstName12")}
                               onChange = {this.handleRAFirstName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName13}
                               name = "RAFirstName13"
                               id = "RAFirstName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName12", "#RAFirstName13")}
                               onChange = {this.handleRAFirstName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName14}
                               name = "RAFirstName14"
                               id = "RAFirstName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName13", "#RAFirstName14")}
                               onChange = {this.handleRAFirstName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName15}
                               name = "RAFirstName15"
                               id = "RAFirstName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName14", "#RAFirstName15")}
                               onChange = {this.handleRAFirstName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName16}
                               name = "RAFirstName16"
                               id = "RAFirstName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName15", "#RAFirstName16")}
                               onChange = {this.handleRAFirstName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName17}
                               name = "RAFirstName17"
                               id = "RAFirstName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName16", "#RAFirstName17")}
                               onChange = {this.handleRAFirstName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName18}
                               name = "RAFirstName18"
                               id = "RAFirstName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName17", "#RAFirstName18")}
                               onChange = {this.handleRAFirstName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName19}
                               name = "RAFirstName19"
                               id = "RAFirstName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName18", "#RAFirstName19")}
                               onChange = {this.handleRAFirstName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName20}
                               name = "RAFirstName20"
                               id = "RAFirstName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName19", "#RAFirstName20")}
                               onChange = {this.handleRAFirstName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName21}
                               name = "RAFirstName21"
                               id = "RAFirstName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName20", "#RAFirstName21")}
                               onChange = {this.handleRAFirstName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName22}
                               name = "RAFirstName22"
                               id = "RAFirstName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName21", "#RAFirstName22")}
                               onChange = {this.handleRAFirstName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName23}
                               name = "RAFirstName23"
                               id = "RAFirstName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName22", "#RAFirstName23")}
                               onChange = {this.handleRAFirstName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName24}
                               name = "RAFirstName24"
                               id = "RAFirstName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName23", "#RAFirstName24")}
                               onChange = {this.handleRAFirstName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFirstName25}
                               name = "RAFirstName25"
                               id = "RAFirstName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFirstName24", "#RAFirstName25")}
                               onChange = {this.handleRAFirstName25}/>

                         {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}
                         <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName1}
                               name = "RAMiddleName1"
                               id = "RAMiddleName1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName1", "#RAMiddleName1")}
                               onChange = {this.handleRAMiddleName1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName2}
                               name = "RAMiddleName2"
                               id = "RAMiddleName2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName1", "#RAMiddleName2")}
                               onChange = {this.handleRAMiddleName2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName3}
                               name = "RAMiddleName3"
                               id = "RAMiddleName3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName2", "#RAMiddleName3")}
                               onChange = {this.handleRAMiddleName3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName4}
                               name = "RAMiddleName4"
                               id = "RAMiddleName4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName3", "#RAMiddleName4")}
                               onChange = {this.handleRAMiddleName4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName5}
                               name = "RAMiddleName5"
                               id = "RAMiddleName5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName4", "#RAMiddleName5")}
                               onChange = {this.handleRAMiddleName5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName6}
                               name = "RAMiddleName6"
                               id = "RAMiddleName6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName5", "#RAMiddleName6")}
                               onChange = {this.handleRAMiddleName6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName7}
                               name = "RAMiddleName7"
                               id = "RAMiddleName7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName6", "#RAMiddleName7")}
                               onChange = {this.handleRAMiddleName7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName8}
                               name = "RAMiddleName8"
                               id = "RAMiddleName8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName7", "#RAMiddleName8")}
                               onChange = {this.handleRAMiddleName8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName9}
                               name = "RAMiddleName9"
                               id = "RAMiddleName9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName8", "#RAMiddleName9")}
                               onChange = {this.handleRAMiddleName9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName10}
                               name = "RAMiddleName10"
                               id = "RAMiddleName10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName9", "#RAMiddleName10")}
                               onChange = {this.handleRAMiddleName10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName11}
                               name = "RAMiddleName11"
                               id = "RAMiddleName11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName10", "#RAMiddleName11")}
                               onChange = {this.handleRAMiddleName11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName12}
                               name = "RAMiddleName12"
                               id = "RAMiddleName12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName11", "#RAMiddleName12")}
                               onChange = {this.handleRAMiddleName12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName13}
                               name = "RAMiddleName13"
                               id = "RAMiddleName13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName12", "#RAMiddleName13")}
                               onChange = {this.handleRAMiddleName13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName14}
                               name = "RAMiddleName14"
                               id = "RAMiddleName14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName13", "#RAMiddleName14")}
                               onChange = {this.handleRAMiddleName14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName15}
                               name = "RAMiddleName15"
                               id = "RAMiddleName15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName14", "#RAMiddleName15")}
                               onChange = {this.handleRAMiddleName15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName16}
                               name = "RAMiddleName16"
                               id = "RAMiddleName16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName15", "#RAMiddleName16")}
                               onChange = {this.handleRAMiddleName16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName17}
                               name = "RAMiddleName17"
                               id = "RAMiddleName17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName16", "#RAMiddleName17")}
                               onChange = {this.handleRAMiddleName17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName18}
                               name = "RAMiddleName18"
                               id = "RAMiddleName18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName17", "#RAMiddleName18")}
                               onChange = {this.handleRAMiddleName18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName19}
                               name = "RAMiddleName19"
                               id = "RAMiddleName19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName18", "#RAMiddleName19")}
                               onChange = {this.handleRAMiddleName19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName20}
                               name = "RAMiddleName20"
                               id = "RAMiddleName20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName19", "#RAMiddleName20")}
                               onChange = {this.handleRAMiddleName20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName21}
                               name = "RAMiddleName21"
                               id = "RAMiddleName21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName20", "#RAMiddleName21")}
                               onChange = {this.handleRAMiddleName21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName22}
                               name = "RAMiddleName22"
                               id = "RAMiddleName22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName21", "#RAMiddleName22")}
                               onChange = {this.handleRAMiddleName22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName23}
                               name = "RAMiddleName23"
                               id = "RAMiddleName23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName22", "#RAMiddleName23")}
                               onChange = {this.handleRAMiddleName23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName24}
                               name = "RAMiddleName24"
                               id = "RAMiddleName24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName23", "#RAMiddleName24")}
                               onChange = {this.handleRAMiddleName24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAMiddleName25}
                               name = "RAMiddleName25"
                               id = "RAMiddleName25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAMiddleName24", "#RAMiddleName25")}
                               onChange = {this.handleRAMiddleName25}/>
                             {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <img src={namefield} alt = "img" className="tooltiptext tooltiptextName" style={{width:"600px",height:"150px"}}  />
                         </span>
                         : ""}

                            <br/>
                            <span className="ErrorMsg">{this.state.errors.NameTitleThree}</span>
                            </div>
                         </td>
                      </tr>
                   </tbody>
                   </table>

                   <div className = "ColouredLabel"> 
                       <label className = "ColouredLabel">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Address</label>

                   </div>

                   <table>
                   <tbody>
                      <tr>
                         <td className ="first_td">
                            {this.state.addressTwo.map((data, index) =>
                               <label className="elements"> {data} <br/></label>   
                            )}
                         </td>

                         <td className = "secondtd">
                          
                          <div> 
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat1}
                               name = "RAFlat1"
                               id = "RAFlat1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat1", "#RAFlat1")}
                               onChange = {this.handleRAFlat1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat2}
                               name = "RAFlat2"
                               id = "RAFlat2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat1", "#RAFlat2")}
                               onChange = {this.handleRAFlat2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat3}
                               name = "RAFlat3"
                               id = "RAFlat3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat2", "#RAFlat3")}
                               onChange = {this.handleRAFlat3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat4}
                               name = "RAFlat4"
                               id = "RAFlat4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat3", "#RAFlat4")}
                               onChange = {this.handleRAFlat4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat5}
                               name = "RAFlat5"
                               id = "RAFlat5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat4", "#RAFlat5")}
                               onChange = {this.handleRAFlat5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat6}
                               name = "RAFlat6"
                               id = "RAFlat6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat5", "#RAFlat6")}
                               onChange = {this.handleRAFlat6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat7}
                               name = "RAFlat7"
                               id = "RAFlat7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat6", "#RAFlat7")}
                               onChange = {this.handleRAFlat7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat8}
                               name = "RAFlat8"
                               id = "RAFlat8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat7", "#RAFlat8")}
                               onChange = {this.handleRAFlat8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat9}
                               name = "RAFlat9"
                               id = "RAFlat9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat8", "#RAFlat9")}
                               onChange = {this.handleRAFlat9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat10}
                               name = "RAFlat10"
                               id = "RAFlat10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat9", "#RAFlat10")}
                               onChange = {this.handleRAFlat10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat11}
                               name = "RAFlat11"
                               id = "RAFlat11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat10", "#RAFlat11")}
                               onChange = {this.handleRAFlat11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat12}
                               name = "RAFlat12"
                               id = "RAFlat12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat11", "#RAFlat12")}
                               onChange = {this.handleRAFlat12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat13}
                               name = "RAFlat13"
                               id = "RAFlat13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat12", "#RAFlat13")}
                               onChange = {this.handleRAFlat13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat14}
                               name = "RAFlat14"
                               id = "RAFlat14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat13", "#RAFlat14")}
                               onChange = {this.handleRAFlat14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat15}
                               name = "RAFlat15"
                               id = "RAFlat15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat14", "#RAFlat15")}
                               onChange = {this.handleRAFlat15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat16}
                               name = "RAFlat16"
                               id = "RAFlat16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat15", "#RAFlat16")}
                               onChange = {this.handleRAFlat16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat17}
                               name = "RAFlat17"
                               id = "RAFlat17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat16", "#RAFlat17")}
                               onChange = {this.handleRAFlat17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat18}
                               name = "RAFlat18"
                               id = "RAFlat18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat17", "#RAFlat18")}
                               onChange = {this.handleRAFlat18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat19}
                               name = "RAFlat19"
                               id = "RAFlat19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat18", "#RAFlat19")}
                               onChange = {this.handleRAFlat19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat20}
                               name = "RAFlat20"
                               id = "RAFlat20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat19", "#RAFlat20")}
                               onChange = {this.handleRAFlat20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat21}
                               name = "RAFlat21"
                               id = "RAFlat21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat20", "#RAFlat21")}
                               onChange = {this.handleRAFlat21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat22}
                               name = "RAFlat22"
                               id = "RAFlat22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat21", "#RAFlat22")}
                               onChange = {this.handleRAFlat22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat23}
                               name = "RAFlat23"
                               id = "RAFlat23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat22", "#RAFlat23")}
                               onChange = {this.handleRAFlat23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat24}
                               name = "RAFlat24"
                               id = "RAFlat24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat23", "#RAFlat24")}
                               onChange = {this.handleRAFlat24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAFlat25}
                               name = "RAFlat25"
                               id = "RAFlat25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAFlat24", "#RAFlat25")}
                               onChange = {this.handleRAFlat25}/>
                             {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip"  >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers, -, /, '</label>
                         </span>
                         : ""}
                          <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises1}
                               name = "RAPremises1"
                               id = "RAPremises1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises1", "#RAPremises1")}
                               onChange = {this.handleRAPremises1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises2}
                               name = "RAPremises2"
                               id = "RAPremises2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises1", "#RAPremises2")}
                               onChange = {this.handleRAPremises2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises3}
                               name = "RAPremises3"
                               id = "RAPremises3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises2", "#RAPremises3")}
                               onChange = {this.handleRAPremises3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises4}
                               name = "RAPremises4"
                               id = "RAPremises4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises3", "#RAPremises4")}
                               onChange = {this.handleRAPremises4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises5}
                               name = "RAPremises5"
                               id = "RAPremises5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises4", "#RAPremises5")}
                               onChange = {this.handleRAPremises5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises6}
                               name = "RAPremises6"
                               id = "RAPremises6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises5", "#RAPremises6")}
                               onChange = {this.handleRAPremises6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises7}
                               name = "RAPremises7"
                               id = "RAPremises7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises6", "#RAPremises7")}
                               onChange = {this.handleRAPremises7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises8}
                               name = "RAPremises8"
                               id = "RAPremises8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises7", "#RAPremises8")}
                               onChange = {this.handleRAPremises8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises9}
                               name = "RAPremises9"
                               id = "RAPremises9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises8", "#RAPremises9")}
                               onChange = {this.handleRAPremises9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises10}
                               name = "RAPremises10"
                               id = "RAPremises10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises9", "#RAPremises10")}
                               onChange = {this.handleRAPremises10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises11}
                               name = "RAPremises11"
                               id = "RAPremises11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises10", "#RAPremises11")}
                               onChange = {this.handleRAPremises11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises12}
                               name = "RAPremises12"
                               id = "RAPremises12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises11", "#RAPremises12")}
                               onChange = {this.handleRAPremises12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises13}
                               name = "RAPremises13"
                               id = "RAPremises13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises12", "#RAPremises13")}
                               onChange = {this.handleRAPremises13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises14}
                               name = "RAPremises14"
                               id = "RAPremises14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises13", "#RAPremises14")}
                               onChange = {this.handleRAPremises14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises15}
                               name = "RAPremises15"
                               id = "RAPremises15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises14", "#RAPremises15")}
                               onChange = {this.handleRAPremises15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises16}
                               name = "RAPremises16"
                               id = "RAPremises16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises15", "#RAPremises16")}
                               onChange = {this.handleRAPremises16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises17}
                               name = "RAPremises17"
                               id = "RAPremises17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises16", "#RAPremises17")}
                               onChange = {this.handleRAPremises17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises18}
                               name = "RAPremises18"
                               id = "RAPremises18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises17", "#RAPremises18")}
                               onChange = {this.handleRAPremises18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises19}
                               name = "RAPremises19"
                               id = "RAPremises19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises18", "#RAPremises19")}
                               onChange = {this.handleRAPremises19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises20}
                               name = "RAPremises20"
                               id = "RAPremises20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises19", "#RAPremises20")}
                               onChange = {this.handleRAPremises20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises21}
                               name = "RAPremises21"
                               id = "RAPremises21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises20", "#RAPremises21")}
                               onChange = {this.handleRAPremises21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises22}
                               name = "RAPremises22"
                               id = "RAPremises22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises21", "#RAPremises22")}
                               onChange = {this.handleRAPremises22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises23}
                               name = "RAPremises23"
                               id = "RAPremises23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises22", "#RAPremises23")}
                               onChange = {this.handleRAPremises23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises24}
                               name = "RAPremises24"
                               id = "RAPremises24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises23", "#RAPremises24")}
                               onChange = {this.handleRAPremises24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPremises25}
                               name = "RAPremises25"
                               id = "RAPremises25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPremises24", "#RAPremises25")}
                               onChange = {this.handleRAPremises25}/>

                             {this.state.isIndicatorEnabled === false ?
                            <span className="tooltip" >
                            <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                                <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers</label>
                            </span>
                            : ""}
                          <br/>
                           </div>
                            
                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad1}
                               name = "RARoad1"
                               id = "RARoad1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad1", "#RARoad1")}
                               onChange = {this.handleRARoad1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad2}
                               name = "RARoad2"
                               id = "RARoad2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad1", "#RARoad2")}
                               onChange = {this.handleRARoad2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad3}
                               name = "RARoad3"
                               id = "RARoad3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad2", "#RARoad3")}
                               onChange = {this.handleRARoad3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad4}
                               name = "RARoad4"
                               id = "RARoad4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad3", "#RARoad4")}
                               onChange = {this.handleRARoad4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad5}
                               name = "RARoad5"
                               id = "RARoad5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad4", "#RARoad5")}
                               onChange = {this.handleRARoad5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad6}
                               name = "RARoad6"
                               id = "RARoad6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad5", "#RARoad6")}
                               onChange = {this.handleRARoad6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad7}
                               name = "RARoad7"
                               id = "RARoad7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad6", "#RARoad7")}
                               onChange = {this.handleRARoad7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad8}
                               name = "RARoad8"
                               id = "RARoad8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad7", "#RARoad8")}
                               onChange = {this.handleRARoad8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad9}
                               name = "RARoad9"
                               id = "RARoad9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad8", "#RARoad9")}
                               onChange = {this.handleRARoad9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad10}
                               name = "RARoad10"
                               id = "RARoad10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad9", "#RARoad10")}
                               onChange = {this.handleRARoad10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad11}
                               name = "RARoad11"
                               id = "RARoad11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad10", "#RARoad11")}
                               onChange = {this.handleRARoad11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad12}
                               name = "RARoad12"
                               id = "RARoad12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad11", "#RARoad12")}
                               onChange = {this.handleRARoad12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad13}
                               name = "RARoad13"
                               id = "RARoad13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad12", "#RARoad13")}
                               onChange = {this.handleRARoad13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad14}
                               name = "RARoad14"
                               id = "RARoad14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad13", "#RARoad14")}
                               onChange = {this.handleRARoad14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad15}
                               name = "RARoad15"
                               id = "RARoad15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad14", "#RARoad15")}
                               onChange = {this.handleRARoad15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad16}
                               name = "RARoad16"
                               id = "RARoad16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad15", "#RARoad16")}
                               onChange = {this.handleRARoad16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad17}
                               name = "RARoad17"
                               id = "RARoad17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad16", "#RARoad17")}
                               onChange = {this.handleRARoad17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad18}
                               name = "RARoad18"
                               id = "RARoad18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad17", "#RARoad18")}
                               onChange = {this.handleRARoad18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad19}
                               name = "RARoad19"
                               id = "RARoad19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad18", "#RARoad19")}
                               onChange = {this.handleRARoad19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad20}
                               name = "RARoad20"
                               id = "RARoad20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad19", "#RARoad20")}
                               onChange = {this.handleRARoad20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad21}
                               name = "RARoad21"
                               id = "RARoad21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad20", "#RARoad21")}
                               onChange = {this.handleRARoad21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad22}
                               name = "RARoad22"
                               id = "RARoad22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad21", "#RARoad22")}
                               onChange = {this.handleRARoad22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad23}
                               name = "RARoad23"
                               id = "RARoad23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad22", "#RARoad23")}
                               onChange = {this.handleRARoad23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad24}
                               name = "RARoad24"
                               id = "RARoad24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad23", "#RARoad24")}
                               onChange = {this.handleRARoad24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RARoad25}
                               name = "RARoad25"
                               id = "RARoad25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RARoad24", "#RARoad25")}
                               onChange = {this.handleRARoad25}/>


                             {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter combinations of alphabet, numbers</label>
                         </span>
                         : ""}
                         <br/>
                           </div>

                           <div>   
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea1}
                               name = "RAArea1"
                               id = "RAArea1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea1", "#RAArea1")}
                               onChange = {this.handleRAArea1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea2}
                               name = "RAArea2"
                               id = "RAArea2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea1", "#RAArea2")}
                               onChange = {this.handleRAArea2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea3}
                               name = "RAArea3"
                               id = "RAArea3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea2", "#RAArea3")}
                               onChange = {this.handleRAArea3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea4}
                               name = "RAArea4"
                               id = "RAArea4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea3", "#RAArea4")}
                               onChange = {this.handleRAArea4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea5}
                               name = "RAArea5"
                               id = "RAArea5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea4", "#RAArea5")}
                               onChange = {this.handleRAArea5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea6}
                               name = "RAArea6"
                               id = "RAArea6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea5", "#RAArea6")}
                               onChange = {this.handleRAArea6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea7}
                               name = "RAArea7"
                               id = "RAArea7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea6", "#RAArea7")}
                               onChange = {this.handleRAArea7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea8}
                               name = "RAArea8"
                               id = "RAArea8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea7", "#RAArea8")}
                               onChange = {this.handleRAArea8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea9}
                               name = "RAArea9"
                               id = "RAArea9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea8", "#RAArea9")}
                               onChange = {this.handleRAArea9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea10}
                               name = "RAArea10"
                               id = "RAArea10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea9", "#RAArea10")}
                               onChange = {this.handleRAArea10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea11}
                               name = "RAArea11"
                               id = "RAArea11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea10", "#RAArea11")}
                               onChange = {this.handleRAArea11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea12}
                               name = "RAArea12"
                               id = "RAArea12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea11", "#RAArea12")}
                               onChange = {this.handleRAArea12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea13}
                               name = "RAArea13"
                               id = "RAArea13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea12", "#RAArea13")}
                               onChange = {this.handleRAArea13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea14}
                               name = "RAArea14"
                               id = "RAArea14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea13", "#RAArea14")}
                               onChange = {this.handleRAArea14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea15}
                               name = "RAArea15"
                               id = "RAArea15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea14", "#RAArea15")}
                               onChange = {this.handleRAArea15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea16}
                               name = "RAArea16"
                               id = "RAArea16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea15", "#RAArea16")}
                               onChange = {this.handleRAArea16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea17}
                               name = "RAArea17"
                               id = "RAArea17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea16", "#RAArea17")}
                               onChange = {this.handleRAArea17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea18}
                               name = "RAArea18"
                               id = "RAArea18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea17", "#RAArea18")}
                               onChange = {this.handleRAArea18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea19}
                               name = "RAArea19"
                               id = "RAArea19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea18", "#RAArea19")}
                               onChange = {this.handleRAArea19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea20}
                               name = "RAArea20"
                               id = "RAArea20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea19", "#RAArea20")}
                               onChange = {this.handleRAArea20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea21}
                               name = "RAArea21"
                               id = "RAArea21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea20", "#RAArea21")}
                               onChange = {this.handleRAArea21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea22}
                               name = "RAArea22"
                               id = "RAArea22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea21", "#RAArea22")}
                               onChange = {this.handleRAArea22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea23}
                               name = "RAArea23"
                               id = "RAArea23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea22", "#RAArea23")}
                               onChange = {this.handleRAArea23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea24}
                               name = "RAArea24"
                               id = "RAArea24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea23", "#RAArea24")}
                               onChange = {this.handleRAArea24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAArea25}
                               name = "RAArea25"
                               id = "RAArea25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAArea24", "#RAArea25")}
                               onChange = {this.handleRAArea25}/>


                             {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter only alphabet</label>
                         </span>
                         : ""}
                         <br/>
                           </div>

                           <div>
                           <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown1}
                               name = "RATown1"
                               id = "RATown1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown1", "#RATown1")}
                               onChange = {this.handleRATown1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown2}
                               name = "RATown2"
                               id = "RATown2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown1", "#RATown2")}
                               onChange = {this.handleRATown2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown3}
                               name = "RATown3"
                               id = "RATown3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown2", "#RATown3")}
                               onChange = {this.handleRATown3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown4}
                               name = "RATown4"
                               id = "RATown4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown3", "#RATown4")}
                               onChange = {this.handleRATown4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown5}
                               name = "RATown5"
                               id = "RATown5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown4", "#RATown5")}
                               onChange = {this.handleRATown5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown6}
                               name = "RATown6"
                               id = "RATown6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown5", "#RATown6")}
                               onChange = {this.handleRATown6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown7}
                               name = "RATown7"
                               id = "RATown7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown6", "#RATown7")}
                               onChange = {this.handleRATown7}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown8}
                               name = "RATown8"
                               id = "RATown8"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown7", "#RATown8")}
                               onChange = {this.handleRATown8}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown9}
                               name = "RATown9"
                               id = "RATown9"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown8", "#RATown9")}
                               onChange = {this.handleRATown9}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown10}
                               name = "RATown10"
                               id = "RATown10"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown9", "#RATown10")}
                               onChange = {this.handleRATown10}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown11}
                               name = "RATown11"
                               id = "RATown11"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown10", "#RATown11")}
                               onChange = {this.handleRATown11}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown12}
                               name = "RATown12"
                               id = "RATown12"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown11", "#RATown12")}
                               onChange = {this.handleRATown12}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown13}
                               name = "RATown13"
                               id = "RATown13"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown12", "#RATown13")}
                               onChange = {this.handleRATown13}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown14}
                               name = "RATown14"
                               id = "RATown14"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown13", "#RATown14")}
                               onChange = {this.handleRATown14}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown15}
                               name = "RATown15"
                               id = "RATown15"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown14", "#RATown15")}
                               onChange = {this.handleRATown15}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown16}
                               name = "RATown16"
                               id = "RATown16"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown15", "#RATown16")}
                               onChange = {this.handleRATown16}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown17}
                               name = "RATown17"
                               id = "RATown17"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown16", "#RATown17")}
                               onChange = {this.handleRATown17}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown18}
                               name = "RATown18"
                               id = "RATown18"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown17", "#RATown18")}
                               onChange = {this.handleRATown18}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown19}
                               name = "RATown19"
                               id = "RATown19"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown18", "#RATown19")}
                               onChange = {this.handleRATown19}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown20}
                               name = "RATown20"
                               id = "RATown20"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown19", "#RATown20")}
                               onChange = {this.handleRATown20}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown21}
                               name = "RATown21"
                               id = "RATown21"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown20", "#RATown21")}
                               onChange = {this.handleRATown21}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown22}
                               name = "RATown22"
                               id = "RATown22"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown21", "#RATown22")}
                               onChange = {this.handleRATown22}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown23}
                               name = "RATown23"
                               id = "RATown23"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown22", "#RATown23")}
                               onChange = {this.handleRATown23}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown24}
                               name = "RATown24"
                               id = "RATown24"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown23", "#RATown24")}
                               onChange = {this.handleRATown24}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RATown25}
                               name = "RATown25"
                               id = "RATown25"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RATown24", "#RATown25")}
                               onChange = {this.handleRATown25}/>
                             {this.state.isIndicatorEnabled === false ?
                           <span className="tooltip" >
                          <img src={indicator} alt = "img" alt = "img" style={{width:"3.2%",height:"3.2%" , float: "right" , marginRight: "1%"}} />
                            <label className="tooltiptext tooltiptextLabel tooltiptextName" style={{width:"450px",height:"20px"}}>Please enter only alphabet</label>
                         </span>
                         : ""}
                          <br/>
                           </div>
  

                         </td>
                      </tr>
                    </tbody>
                    </table>
 
                             <label className = "StateId"> State / Union Territory </label>
                         
                             <label className = "PincodeId"> Pincode / Zip code </label> <br/>
                          
                             <span className = "StateValue1"> 
                             <input 
                                 className = "StateValue"
                                 name="RAState"
                                 id = "RAState"
                                 value={this.state.data.RAState}
                                 onChange={event => this.handleRAState(event)}/>
                            </span>
                              
                         
                          <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode1}
                               name = "RAPincode1"
                               id = "RAPincode1"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode1", "#RAPincode1")}
                               onChange = {this.handleRAPincode1}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode2}
                               name = "RAPincode2"
                               id = "RAPincode2"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode1", "#RAPincode2")}
                               onChange = {this.handleRAPincode2}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode3}
                               name = "RAPincode3"
                               id = "RAPincode3"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode2", "#RAPincode3")}
                               onChange = {this.handleRAPincode3}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode4}
                               name = "RAPincode4"
                               id = "RAPincode4"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode3", "#RAPincode4")}
                               onChange = {this.handleRAPincode4}/>

                            <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode5}
                               name = "RAPincode5"
                               id = "RAPincode5"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode4", "#RAPincode5")}
                               onChange = {this.handleRAPincode5}/> 

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode6}
                               name = "RAPincode6"
                               id = "RAPincode6"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode5", "#RAPincode6")}
                               onChange = {this.handleRAPincode6}/>

                             <input 
                               type="text" 
                               className="Name-control"
                               maxLength = "1"
                               value = {this.state.data.RAPincode7}
                               name = "RAPincode7"
                               id = "RAPincode7"
                               onKeyDown = {event => this.handleBackspaceKey(event, "#RAPincode6", "#RAPincode7")}
                               onChange = {this.handleRAPincode7}/>

                             {this.state.isIndicatorEnabled === false ?
                               <span className="tooltip" >
                            <img src={indicator} alt = "img" alt = "img" style={{width:"2.3%",height:"2.3%" , float: "right" , marginRight: "1%"}} />
                                <label className="tooltiptext tooltiptextLabel tooltiptextRAPincode" style={{width:"450px",height:"20px"}}>Please enter as applicable</label>
                            </span>
                            : ""}
                           
                 
                 {/* Fifteenth Component */}
                   
                    <div className = "ColouredLabel">
                    <label  className = "ColouredLabel">&nbsp;&nbsp;15 &nbsp; Documents submitted as Proof of Identity (POI), Proof of Address (POA) and Proof of Date of Birth (POB)</label>
                    {this.state.isIndicatorEnabled === false ?
                    <span className="tooltip"  >
                          <img src={indicator} alt = "img"style={{width:"2.3%",height:"86%", float: "right" , marginRight: "1%"}} />
                            <img src={prooffield} alt = "img"className="tooltiptext tooltiptextProof" style={{width:"600px",height:"100px"}}  />
                    </span>
                    :""}
                    </div>
                    <br/>
                    <label className= "FirstLabel"> I/We have enclosed</label> &nbsp; 
                    <input 
                       type= "text" 
                       className = "CountryInput"
                       name="POI"
                       id = "POI"
                       value={this.state.data.POI}
                       onChange={event => this.handlePOI(event)}/> &nbsp; 
                    <label className="Label_with_no_space"> as proof of identity,</label> &nbsp; 
                     

                    <input 
                       type= "text" 
                       className = "CountryInput"
                       name="POA"
                       id = "POA"
                       value={this.state.data.POA}
                       onChange={event => this.handlePOA(event)}/> 
                       <br/>
                    
                    <label className= "FirstLabel"> as proof of address and</label>&nbsp; 
                     

                    <input 
                        type= "text" 
                        className = "CountryInput"
                        name="POB"
                        id = "POB"
                        value={this.state.data.POB}
                        onChange={event => this.handlePOB(event)}/>&nbsp; 

                    <label className="Label_with_no_space"> as proof of date of birth.</label>
                    
                    <br/>

                     
                    <label className= "FirstLabel"> [Please refer to the instructions (as specified in Rule 114 of I.I.Rules, 1962) for list of mandatory certified documents to be submitted as applicable]</label> <br/>
                    <label className= "FirstLabel"> [Annexure A, Annexure B & Annexure C are to be used wherever applicable]</label> <br/>
                      
                    <br/>
                    {/* Sixteenth Component */}

 
                    <label  className = "ColouredLabel ProofComponent "> &nbsp;&nbsp; 16 </label> 
                    <label className= "Label_with_no_space"> &nbsp; I/We</label> &nbsp;
                  
                    <input 
                        type= "text" 
                        className = "CountryInput"
                        name="Applicant"
                        id = "Applicant"
                        value={this.state.data.Applicant}
                        onChange={event => this.handleApplicant(event)}/>
                    <label className= "Declaration2Label">, the applicant, in the capacity of</label> &nbsp;
                    
                    <input 
                        type= "text" 
                        className = "CountryInput"
                        name="Capacity"
                        id = "Capacity"
                        value={this.state.data.Capacity}
                        onChange={event => this.handleCapacity(event)}/> <br/>

                    <label className= "FirstLabel">do hereby declare that what is stated above is true to the best of my/our information and belief.</label>  
                   
                     
                </div>
                <br /><br />

           </div>
           <br />


       
            
      </div>

     </div>

        </div>
    );
  }
}

export default Form1;